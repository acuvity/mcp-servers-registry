{
  "id": "mcp-server-line-bot",
  "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/line/live/logo-1745429370311.png",
  "name": "mcp-server-line-bot",
  "description": "Connects AI Agent to LINE for messaging interactions.",
  "links":
    {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-line-bot",
      "application": "https://github.com/line/line-bot-mcp-server"
    },
  "tags": ["communication"],
  "official": true,
  "scope": "remote",
  "mutitenant": true,
  "runtime": "node",
  "version": "0.3.0",
  "requiresConfiguration": true,
  "requiresStorage": false,
  "rating": {"hash":"6436cfc8769aa395ea98c443ebc13f3a5d5278e6d20473be6266bc788b125bd9","reason":"The toolset demonstrates good documentation quality with clear, descriptive names and comprehensive descriptions that explain functionality, usage context, and important warnings (like broadcast warnings). Parameter documentation is generally thorough with clear descriptions, types, and constraints. However, some complex parameters like the flex message 'contents' structure could benefit from more detailed explanation of the LINE Flex Message format requirements, and a few simpler tools have minimal but adequate descriptions.","score":"B"},
  "resources": {
    "tools": 10,
    "prompts": 0,
    "resources": 0,
    "resourcesTemplates": 0
  }
}
