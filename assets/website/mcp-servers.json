[
  {
    "id": "mcp-server",
    "name": "mcp-server",
    "description": "MCP server for RAD Security, providing AI-powered security insights for Kubernetes and cloud environments. This server provides tools for querying the Rad Security API and retrieving security findings, reports, runtime data and many more.",
    "links": {
      "application": "https://github.com/rad-security/mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "security",
      "cloud",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "rad-security": {
            "command": "npx",
            "args": [
              "-y",
              "@rad-security/mcp-server"
            ],
            "env": {
              "RAD_SECURITY_ACCESS_KEY_ID": "YOUR_VALUE",
              "RAD_SECURITY_SECRET_KEY": "YOUR_VALUE",
              "RAD_SECURITY_ACCOUNT_ID": "YOUR_VALUE"
            }
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-21st-dev-magic",
    "icon": "https://www.21st.dev/favicon.ico",
    "name": "mcp-server-21st-dev-magic",
    "description": "Create crafted UI components inspired by the best 21st.dev design engineers.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-21st-dev-magic",
      "application": "https://github.com/21st-dev/magic-mcp"
    },
    "tags": [
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.0.47",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "fe3ec17aa8048729950763df84c89008ef87f888ead3292182cf05824bbcbbff",
      "reason": "Tool names are descriptive and clearly indicate purpose within the 21st.dev ecosystem. Descriptions adequately explain functionality with 2-3 sentences covering what each tool does and when to use it. However, parameter descriptions vary in quality - some like 'searchQuery' have good constraints and guidance, while others like 'context' are verbose but unclear about expected input format. The overall documentation is functional but lacks the comprehensive clarity and consistent parameter descriptions needed for higher grades.",
      "score": "C"
    },
    "resources": {
      "tools": 4,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-3d-printer",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/3d-printer/live/logo-1744820439923.png",
    "name": "mcp-server-3d-printer",
    "description": "Connects to various 3D printers for management and STL manipulation.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-3d-printer",
      "application": "https://github.com/DMontgomery40/mcp-3D-printer-server"
    },
    "tags": [
      "automation",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.2",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "7425a6126f8bf92ebadf12df3f7eff79cbfefd256c65273c48a4fa6e19e88525",
      "reason": "Tool names are clear and specific for their purposes. Most descriptions are adequate but brief (1-2 sentences), covering basic functionality without detailed usage guidance or limitations. Parameter descriptions are generally clear and indicate purpose and type, though some lack context about constraints or expected values. The documentation is usable but leaves some user questions unanswered, particularly around when to use certain tools and their specific behaviors.",
      "score": "C"
    },
    "resources": {
      "tools": 15,
      "prompts": 0,
      "resources": 2,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-BifrostMCP",
    "name": "mcp-server-BifrostMCP",
    "description": "Connect to VSCode ide and use semantic tools like `find_usages`.",
    "links": {
      "application": "https://github.com/biegehydra/BifrostMCP"
    },
    "official": false,
    "runtime": "node",
    "scope": "unknown",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "Bifrost": {
            "command": "npx",
            "args": [
              "-y",
              "supergateway",
              "--sse",
              "http://localhost:8008/sse"
            ],
            "disabled": false,
            "autoApprove": [],
            "timeout": 600
          }
        }
      }
    ],
    "stars": 85
  },
  {
    "id": "mcp-server-Clojars-MCP-Server",
    "name": "mcp-server-Clojars",
    "description": "Clojars MCP Server for upto date dependency information of Clojure libraries.",
    "links": {
      "application": "https://github.com/Bigsy/Clojars-MCP-Server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "clojars-deps-server": {
            "command": "node",
            "args": [
              "/path/to/clojars-deps-server/build/index.js"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "clojars-deps-server": {
            "command": "node",
            "args": [
              "/path/to/clojars-deps-server/build/index.js"
            ]
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-Crypto-Trader-MCP-ClaudeDesktop.git",
    "name": "mcp-server-Crypto-Trader-ClaudeDesktop.git",
    "description": "An MCP tool that provides cryptocurrency market data using the CoinGecko API.",
    "links": {
      "application": "https://github.com/SaintDoresh/Crypto-Trader-MCP-ClaudeDesktop.git"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "finance"
    ],
    "provider": "source",
    "config": []
  },
  {
    "id": "mcp-server-DesktopCommanderMCP",
    "name": "mcp-server-DesktopCommanderMCP",
    "description": "A swiss-army-knife that can manage/execute programs and read/write/search/edit code and text files.",
    "links": {
      "application": "https://github.com/wonderwhy-er/DesktopCommanderMCP"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "automation",
      "integration",
      "storage",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "desktop-commander": {
            "command": "npx",
            "args": [
              "-y",
              "@wonderwhy-er/desktop-commander"
            ]
          }
        }
      }
    ],
    "stars": 2096
  },
  {
    "id": "mcp-server-Figma-Context-MCP",
    "name": "mcp-server-Figma-Context",
    "description": "Provide coding agents direct access to Figma data to help them one-shot design implementation.",
    "links": {
      "application": "https://github.com/GLips/Figma-Context-MCP"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "Framelink Figma MCP": {
            "command": "npx",
            "args": [
              "-y",
              "figma-developer-mcp",
              "--figma-api-key=YOUR-KEY",
              "--stdio"
            ]
          }
        }
      }
    ],
    "stars": 6152
  },
  {
    "id": "mcp-server-FileScopeMCP",
    "name": "mcp-server-FileScopeMCP",
    "description": "Analyzes your codebase identifying important files based on dependency relationships. Generates diagrams and importance scores, helping AI assistants understand the codebase.",
    "links": {
      "application": "https://github.com/admica/FileScopeMCP"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "storage",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "FileScopeMCP": {
            "command": "node",
            "args": [
              "YOUR_VALUE/mcp-server.js",
              "--base-dir=C:/Users/admica/my/project/base"
            ],
            "transport": "stdio",
            "disabled": false,
            "alwaysAllow": []
          }
        }
      }
    ],
    "stars": 93
  },
  {
    "id": "mcp-server-GeekNews-MCP-Server",
    "name": "mcp-server-GeekNews",
    "description": "An MCP Server that retrieves and processes news data from the GeekNews site.",
    "links": {
      "application": "https://github.com/the0807/GeekNews-MCP-Server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "geeknews-mcp-server": {
            "command": "npx",
            "args": [
              "-y",
              "@smithery/cli@latest",
              "run",
              "@the0807/geeknews-mcp-server",
              "--key",
              "smithery에서 발급 받은 키"
            ]
          }
        }
      }
    ],
    "stars": 8
  },
  {
    "id": "mcp-server-GhidraMCP",
    "name": "mcp-server-GhidraMCP",
    "description": "MCP server for integrating Ghidra with AI assistants. This plugin enables binary analysis, providing tools for function inspection, decompilation, memory exploration, and import/export analysis via the Model Context Protocol.",
    "links": {
      "application": "https://github.com/13bm/GhidraMCP"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "security",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "ghidra": {
            "command": "python",
            "args": [
              "PATH-TO-REPO/GhidraMCP/ghidra_server.py"
            ]
          }
        }
      }
    ],
    "stars": 40
  },
  {
    "id": "mcp-server-HarmonyOS-mcp-server",
    "name": "mcp-server-HarmonyOS",
    "description": "Control HarmonyOS-next devices with AI through MCP. Support device control and UI automation.",
    "links": {
      "application": "https://github.com/XixianLiang/HarmonyOS-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 7
  },
  {
    "id": "mcp-server-JotDown",
    "name": "mcp-server-JotDown",
    "description": "An MCP server to create/update pages in Notion app & auto generate mdBooks from structured content.",
    "links": {
      "application": "https://github.com/Harry-027/JotDown"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "source",
    "mcpServers": {
      "mcpServers": {
        "Jotdown": {
          "command": "/path_to_repo/Jotdown/target/release/Jotdown",
          "args": [],
          "env": {
            "NOTION_TOKEN": "your_notion_intergration_token"
          }
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "Jotdown": {
            "command": "/path_to_repo/Jotdown/target/release/Jotdown",
            "args": [],
            "env": {
              "NOTION_TOKEN": "your_notion_intergration_token"
            }
          }
        }
      }
    ],
    "stars": 13
  },
  {
    "id": "mcp-server-MCP-Geo",
    "name": "mcp-server-Geo",
    "description": "Geocoding MCP server for nominatim, ArcGIS, Bing.",
    "links": {
      "application": "https://github.com/webcoderz/MCP-Geo"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 16
  },
  {
    "id": "mcp-server-MCP-Server-Playwright",
    "name": "mcp-server-Playwright",
    "description": "An MCP server for browser automation using Playwright.",
    "links": {
      "application": "https://github.com/Automata-Labs-team/MCP-Server-Playwright"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "web",
      "development"
    ],
    "provider": "npx",
    "stars": 168,
    "config": [
      {
        "mcpServers": {
          "playwright": {
            "command": "npx",
            "args": [
              "-y",
              "@automatalabs/mcp-server-playwright"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-MCP-searxng",
    "name": "mcp-server-secretiveshell-searxng",
    "description": "An MCP Server to connect to searXNG instances.",
    "links": {
      "application": "https://github.com/SecretiveShell/MCP-searxng"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "searxng": {
            "command": "uvx",
            "args": [
              "mcp-searxng"
            ]
          }
        }
      }
    ],
    "stars": 62
  },
  {
    "id": "mcp-server-MCP-timeserver",
    "name": "mcp-server-timeserver",
    "description": "Access the time in any timezone and get the current local time.",
    "links": {
      "application": "https://github.com/SecretiveShell/MCP-timeserver"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "MCP-timeserver": {
            "command": "uvx",
            "args": [
              "MCP-timeserver"
            ]
          }
        }
      }
    ],
    "stars": 27
  },
  {
    "id": "mcp-server-MCP-wolfram-alpha",
    "name": "mcp-server-wolfram-alpha",
    "description": "An MCP server for querying wolfram alpha API.",
    "links": {
      "application": "https://github.com/SecretiveShell/MCP-wolfram-alpha"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "MCP-wolfram-alpha": {
            "command": "uv",
            "args": [
              "--directory",
              "C:\\Users\\root\\Documents\\MCP-wolfram-alpha",
              "run",
              "MCP-wolfram-alpha"
            ],
            "env": {
              "WOLFRAM_API_KEY": "your-app-id"
            }
          }
        }
      }
    ],
    "stars": 25
  },
  {
    "id": "mcp-server-MCP_README.md",
    "name": "mcp-server-MCP_README.md",
    "description": "Let the agent speak things out loud, notify you when he's done working with a quick summary.",
    "links": {
      "application": "https://github.com/j3k0/speech.sh/blob/main/MCP_README.md"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "native",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 2
  },
  {
    "id": "mcp-server-MCP_Security",
    "name": "mcp-server-MCP_Security",
    "description": "MCP server for querying the ORKL API. This server provides tools for fetching threat reports, analyzing threat actors, and retrieving intelligence sources.",
    "links": {
      "application": "https://github.com/fr0gger/MCP_Security"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "security",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "orkl": {
            "command": "uv",
            "args": [
              "--directory",
              "/MyMCP/mcptest/orkl",
              "run",
              "orkl"
            ]
          }
        }
      }
    ],
    "stars": 22
  },
  {
    "id": "mcp-server-MayaMCP",
    "name": "mcp-server-MayaMCP",
    "description": "MCP server for Autodesk Maya.",
    "links": {
      "application": "https://github.com/PatrickPalmer/MayaMCP"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [],
    "provider": "source",
    "stars": 4,
    "config": [
      {
        "mcpServers": {
          "MayaMCP": {
            "command": "[FULL PATH TO MayaMCP PROJECT]/.venv/Scripts/python.exe",
            "args": [
              "[FULL PATH TO MayaMCP PROJECT]/src/maya_mcp_server.py"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-MemoryMesh",
    "name": "mcp-server-MemoryMesh",
    "description": "Enhanced graph-based memory with a focus on AI role-play and story generation.",
    "links": {
      "application": "https://github.com/CheMiguel23/MemoryMesh"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "research",
      "development"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "memorymesh": {
          "command": "node",
          "args": [
            "/ABSOLUTE/PATH/TO/YOUR/PROJECT/memorymesh/dist/index.js"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "memorymesh": {
            "command": "node",
            "args": [
              "/ABSOLUTE/PATH/TO/YOUR/PROJECT/memorymesh/dist/index.js"
            ]
          }
        }
      }
    ],
    "stars": 174
  },
  {
    "id": "mcp-server-OpenDataMCP",
    "name": "mcp-server-OpenDataMCP",
    "description": "Connect any Open Data to any LLM with Model Context Protocol.",
    "links": {
      "application": "https://github.com/OpenDataMCP/OpenDataMCP"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 113
  },
  {
    "id": "mcp-server-Readme.md",
    "name": "mcp-server-Readme.md",
    "description": "Autonomous shell execution, computer control and coding agent. (Mac).",
    "links": {
      "application": "https://github.com/rusiaaman/wcgw/blob/main/src/wcgw/client/mcp_server/Readme.md"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "cloud",
      "web",
      "storage",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "wcgw": {
            "command": "uv",
            "args": [
              "tool",
              "run",
              "--python",
              "3.12",
              "wcgw@latest"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "wcgw": {
            "command": "wsl.exe",
            "args": [
              "uv",
              "tool",
              "run",
              "--python",
              "3.12",
              "wcgw@latest"
            ]
          }
        }
      }
    ],
    "stars": 436
  },
  {
    "id": "mcp-server-RestCsvMcpServer",
    "name": "mcp-server-RestCsvMcpServer",
    "description": "An MCP server for CSV files.",
    "links": {
      "application": "https://github.com/JordanDalton/RestCsvMcpServer"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 4
  },
  {
    "id": "mcp-server-Rootly-MCP-server",
    "name": "mcp-server-Rootly",
    "description": "MCP server for the incident management platform Rootly.",
    "links": {
      "application": "https://github.com/Rootly-AI-Labs/Rootly-MCP-server"
    },
    "official": true,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "rootly": {
            "command": "uvx",
            "args": [
              "--from",
              "rootly-mcp-server",
              "rootly-mcp-server"
            ],
            "env": {
              "ROOTLY_API_TOKEN": "<YOUR_ROOTLY_API_TOKEN>"
            }
          }
        }
      }
    ],
    "stars": 64
  },
  {
    "id": "mcp-server-ScreenPilot",
    "name": "mcp-server-ScreenPilot",
    "description": "Enables AI to fully control and access GUI interactions by providing tools for mouse and keyboard, ideal for general automation, education, and experimentation.",
    "links": {
      "application": "https://github.com/Mtehabsim/ScreenPilot"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 10
  },
  {
    "id": "mcp-server-Unity-MCP",
    "name": "mcp-server-Unity",
    "description": "MCP Server for Unity Editor and for a game made with Unity.",
    "links": {
      "application": "https://github.com/IvanMurzak/Unity-MCP"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration",
      "gaming",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 78
  },
  {
    "id": "mcp-server-VictoriaMetrics-mcp-server",
    "name": "mcp-server-VictoriaMetrics",
    "description": "An MCP server for interacting with VictoriaMetrics database.",
    "links": {
      "application": "https://github.com/yincongcyincong/VictoriaMetrics-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "victoriametrics": {
            "command": "npx",
            "args": [
              "-y",
              "@yincongcyincong/victoriametrics-mcp-server"
            ],
            "env": {
              "VM_URL": "",
              "VM_SELECT_URL": "",
              "VM_INSERT_URL": ""
            }
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-Weather-MCP-ClaudeDesktop.git",
    "name": "mcp-server-Weather-ClaudeDesktop.git",
    "description": "An MCP tool that provides real-time weather data, forecasts, and historical weather information using the OpenWeatherMap API.",
    "links": {
      "application": "https://github.com/SaintDoresh/Weather-MCP-ClaudeDesktop.git"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [],
    "provider": "source",
    "config": []
  },
  {
    "id": "mcp-server-YFinance-Trader-MCP-ClaudeDesktop.git",
    "name": "mcp-server-YFinance-Trader-ClaudeDesktop.git",
    "description": "An MCP tool that provides stock market data and analysis using the Yahoo Finance API.",
    "links": {
      "application": "https://github.com/SaintDoresh/YFinance-Trader-MCP-ClaudeDesktop.git"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "finance"
    ],
    "provider": "source",
    "config": []
  },
  {
    "id": "mcp-server-Yuque-MCP-Server",
    "name": "mcp-server-Yuque",
    "description": "A Model-Context-Protocol (MCP) server for integrating with Yuque API, allowing AI models to manage documents, interact with knowledge bases, search content, and access analytics data from the Yuque platform.",
    "links": {
      "application": "https://github.com/HenryHaoson/Yuque-MCP-Server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration",
      "cloud",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 16
  },
  {
    "id": "mcp-server-actors-mcp-server",
    "name": "mcp-server-actors",
    "description": "Use 3,000+ pre-built cloud tools, known as Actors, to extract data from websites, e-commerce, social media, search engines, maps, and more.",
    "links": {
      "application": "https://github.com/apify/actors-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "web",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "actors-mcp-server": {
            "command": "npx",
            "args": [
              "-y",
              "@apify/actors-mcp-server"
            ],
            "env": {
              "APIFY_TOKEN": "your-apify-token"
            }
          }
        }
      }
    ],
    "stars": 186
  },
  {
    "id": "mcp-server-adfin",
    "icon": "https://invoxx-public-bucket.s3.eu-central-1.amazonaws.com/frontend-resources/adfin-logo-small.svg",
    "name": "mcp-server-adfin",
    "description": "All-in-one payment platform with invoicing and accounting reconciliations via Adfin.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-adfin",
      "application": "https://github.com/Adfin-Engineering/mcp-server-adfin"
    },
    "tags": [
      "finance"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.1.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-adls-mcp-server",
    "name": "mcp-server-adls",
    "description": "MCP Server for Azure Data Lake Storage. It can perform manage containers, read/write/upload/download operations on container files and manage file metadata.",
    "links": {
      "application": "https://github.com/erikhoward/adls-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "storage",
      "development",
      "cloud"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "adls2": {
            "command": "adls2-mcp-server",
            "env": {
              "LOG_LEVEL": "DEBUG",
              "UPLOAD_ROOT": "/path/to/store/uploads",
              "DOWNLOAD_ROOT": "/path/to/store/downloads",
              "AZURE_STORAGE_ACCOUNT_NAME": "your-azure-adls2-storage-account-name",
              "READ_ONLY_MODE": "false"
            }
          }
        }
      },
      {
        "mcpServers": {
          "adls2": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/adls2-mcp-server/repo",
              "run",
              "adls2-mcp-server"
            ],
            "env": {
              "LOG_LEVEL": "DEBUG",
              "UPLOAD_ROOT": "/path/to/store/uploads",
              "DOWNLOAD_ROOT": "/path/to/store/downloads",
              "AZURE_STORAGE_ACCOUNT_NAME": "your-azure-adls2-storage-account-name",
              "READ_ONLY_MODE": "false"
            }
          }
        }
      }
    ],
    "stars": 1
  },
  {
    "id": "mcp-server-adx-mcp-server",
    "name": "mcp-server-adx",
    "description": "Query and analyze Azure Data Explorer databases.",
    "links": {
      "application": "https://github.com/pab1it0/adx-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "cloud",
      "development"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "adx": {
            "command": "uv",
            "args": [
              "--directory",
              "<full path to adx-mcp-server directory>",
              "run",
              "src/adx_mcp_server/main.py"
            ],
            "env": {
              "ADX_CLUSTER_URL": "https://yourcluster.region.kusto.windows.net",
              "ADX_DATABASE": "your_database"
            }
          }
        }
      }
    ],
    "stars": 32
  },
  {
    "id": "mcp-server-agentql",
    "icon": "https://www.agentql.com/favicon/favicon.png",
    "name": "mcp-server-agentql",
    "description": "Enable AI agents to get structured data from unstructured web with AgentQL.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-agentql",
      "application": "https://github.com/tinyfish-io/agentql-mcp"
    },
    "tags": [
      "web",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "b8371d99698b079dea7e1faa75e0e01d094ba8c2ee0fe06c0a80eda24319423e",
      "reason": "Tool name clearly indicates web data extraction purpose. Description adequately explains functionality and mentions JSON output format. Both parameters have clear descriptions explaining their purpose - URL for target webpage and prompt for natural language data description. However, the description could be more comprehensive about limitations, supported websites, or what constitutes valid natural language descriptions.",
      "score": "B"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-agentql-mcp",
    "name": "mcp-server-agentql",
    "description": "MCP server that provides AgentQL's data extraction capabilities.",
    "links": {
      "application": "https://github.com/tinyfish-io/agentql-mcp"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "research",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "agentql": {
            "command": "/path/to/agentql-mcp/dist/index.js",
            "env": {
              "AGENTQL_API_KEY": "YOUR_API_KEY"
            }
          }
        }
      }
    ],
    "stars": 56
  },
  {
    "id": "mcp-server-agentrpc",
    "icon": "https://agentrpc.com/favicon.ico",
    "name": "mcp-server-agentrpc",
    "description": "Connect to any function, any language, across network boundaries using AgentRPC.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-agentrpc",
      "application": "https://github.com/agentrpc/agentrpc"
    },
    "tags": [
      "integration",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.0.16",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-airbnb",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-airbnb",
    "description": "Provides tools to search Airbnb and get listing details.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-airbnb",
      "application": "https://github.com/openbnb-org/mcp-server-airbnb"
    },
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "10e64b6c16e3d3af2fbaab2241ad080970ed9b12d8465139ac36749b282d065d",
      "reason": "Tool names clearly indicate purpose (airbnb_search, airbnb_listing_details). Descriptions are brief but functional, explaining core functionality and mentioning direct links. However, descriptions lack important details like what information is returned, usage constraints, or when to use each tool. Parameter descriptions are basic but clear enough to indicate purpose and expected input types, though some could benefit from more context (e.g., price currency, date format validation).",
      "score": "C"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-airtable-mcp",
    "name": "mcp-server-rashidazarang-airtable",
    "description": "Connect AI tools directly to Airtable. Query, create, update, and delete records using natural language. Features include base management, table operations, schema manipulation, record filtering, and data migration through a standardized MCP interface.",
    "links": {
      "application": "https://github.com/rashidazarang/airtable-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "airtable-mcp": {
            "command": "npx",
            "args": [
              "@smithery/cli",
              "run",
              "@rashidazarang/airtable-mcp",
              "--token",
              "YOUR_AIRTABLE_TOKEN",
              "--base",
              "YOUR_BASE_ID"
            ]
          }
        }
      }
    ],
    "stars": 12
  },
  {
    "id": "mcp-server-airtable-mcp-server",
    "name": "mcp-server-domdomegg-airtable",
    "description": "Airtable database integration with schema inspection, read and write capabilities.",
    "links": {
      "application": "https://github.com/domdomegg/airtable-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "database",
      "integration",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "airtable": {
            "command": "npx",
            "args": [
              "-y",
              "airtable-mcp-server"
            ],
            "env": {
              "AIRTABLE_API_KEY": "pat123.abc123"
            }
          }
        }
      }
    ],
    "stars": 127
  },
  {
    "id": "mcp-server-aiven",
    "name": "mcp-server-unknown-aiven",
    "description": "Navigate your Aiven projects and interact with the PostgreSQL, Apache Kafka, ClickHouse and OpenSearch services.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research",
      "development",
      "database"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "aiven": {
            "command": "npx",
            "args": [
              "-y",
              "aiven-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-alapi",
    "name": "mcp-server-alapi",
    "description": "ALAPI MCP Tools,Call hundreds of API interfaces via MCP.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "alapi": {
            "command": "npx",
            "args": [
              "-y",
              "alapi-mcp-tools"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-alchemy",
    "icon": "https://avatars.githubusercontent.com/u/49798644?s=200&v=4",
    "name": "mcp-server-alchemy",
    "description": "Allow AI agents to interact with Alchemy's blockchain APIs.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-alchemy",
      "application": "https://github.com/alchemyplatform/alchemy-mcp-server"
    },
    "tags": [
      "web",
      "integration",
      "finance"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.5",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "fada72b0f9b4641b2277a71abaf66a793a8f9a9fdeb92dc6aacdcb3004f0b6ae",
      "reason": "Tool names are overly verbose and inconsistent in naming patterns. Most tools completely lack descriptions, making it impossible to understand their purpose, when to use them, or what they return. While parameter descriptions are generally adequate with good examples, the absence of tool-level descriptions creates significant gaps in usability. The documentation fails to explain basic functionality like what data sources are used or how tools differ from each other.",
      "score": "D"
    },
    "resources": {
      "tools": 9,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-alchemy-mcp-server",
    "name": "mcp-server-alchemy",
    "description": "Allow AI agents to interact with Alchemy's blockchain APIs.",
    "links": {
      "application": "https://github.com/alchemyplatform/alchemy-mcp-server"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "finance"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "alchemy": {
            "command": "npx",
            "args": [
              "-y",
              "@alchemy/mcp-server"
            ],
            "env": {
              "ALCHEMY_API_KEY": "YOUR_API_KEY"
            }
          }
        }
      }
    ],
    "stars": 32
  },
  {
    "id": "mcp-server-alibaba-cloud-ops",
    "icon": "https://github.com/aliyun/alibaba-cloud-ops-mcp-server/blob/master/image/alibaba-cloud.png",
    "name": "mcp-server-alibaba-cloud-ops",
    "description": "Alibaba Cloud integration, supporting ECS, Cloud Monitor, OOS and widely used cloud products.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-alibaba-cloud-ops",
      "application": "https://github.com/aliyun/alibaba-cloud-ops-mcp-server"
    },
    "tags": [
      "cloud",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.8.7",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "3e2f394f559cef1367995ff227119c7fab08c981f48049c87415185a6b8a9172",
      "reason": "Tools have clear names indicating their purpose but suffer from significant documentation issues. Most descriptions are in Chinese with minimal English translation, making them difficult for many users to understand. While parameter descriptions exist, they often lack clarity about purpose and usage. Many parameters have verbose, technical descriptions that don't clearly explain when or how to use them. The documentation would require significant effort for users to understand tool functionality and proper usage.",
      "score": "D"
    },
    "resources": {
      "tools": 34,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-alibaba-cloud-ops-mcp-server",
    "name": "mcp-server-alibaba-cloud-ops",
    "description": "An MCP server that enables AI assistants to operation resources on Alibaba Cloud, supporting ECS, Cloud Monitor, OOS and widely used cloud products.",
    "links": {
      "application": "https://github.com/aliyun/alibaba-cloud-ops-mcp-server"
    },
    "official": true,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration"
    ],
    "provider": "source",
    "stars": 27,
    "config": [
      {
        "mcpServers": {
          "alibaba-cloud-ops-mcp-server": {
            "timeout": 600,
            "command": "uvx",
            "args": [
              "alibaba-cloud-ops-mcp-server@latest"
            ],
            "env": {
              "ALIBABA_CLOUD_ACCESS_KEY_ID": "Your Access Key ID",
              "ALIBABA_CLOUD_ACCESS_KEY_SECRET": "Your Access Key SECRET"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-alibabacloud-tablestore-mcp-server",
    "name": "mcp-server-alibabacloud-tablestore",
    "description": "MCP service for Tablestore, features include adding documents, semantic search for documents based on vectors and scalars, RAG-friendly, and serverless.",
    "links": {
      "application": "https://github.com/aliyun/alibabacloud-tablestore-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database"
    ],
    "provider": "source",
    "config": [],
    "stars": 109
  },
  {
    "id": "mcp-server-all-in-one-model-context-protocol",
    "name": "mcp-server-all-in-one-model-context-protocol",
    "description": "Some useful tools for developer, almost everything an engineer need: confluence, Jira, Youtube, run script, knowledge base RAG, fetch URL, Manage youtube channel, emails, calendar, gitlab.",
    "links": {
      "application": "https://github.com/nguyenvanduocit/all-in-one-model-context-protocol"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration",
      "database",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 65
  },
  {
    "id": "mcp-server-alpaca-mcp",
    "name": "mcp-server-alpaca",
    "description": "An MCP Server for the Alpaca trading API to manage stock and crypto portfolios, place trades, and access market data.",
    "links": {
      "application": "https://github.com/laukikk/alpaca-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "alpaca": {
            "command": "uv",
            "args": [
              "--directory",
              "/ABSOLUTE/PATH/TO/PARENT/FOLDER/alpaca-mcp-server",
              "run",
              "src/server.py"
            ]
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-alpha-vantage-mcp",
    "name": "mcp-server-alpha-vantage",
    "description": "Alpha Vantage API integration to fetch both stock and crypto information.",
    "links": {
      "application": "https://github.com/berlinbra/alpha-vantage-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "finance",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "alpha-vantage-mcp": {
            "args": [
              "--directory",
              "/Users/{INSERT_USER}/YOUR/PATH/TO/alpha-vantage-mcp",
              "run",
              "alpha-vantage-mcp"
            ],
            "command": "uv",
            "env": {
              "ALPHA_VANTAGE_API_KEY": "<insert api key>"
            }
          }
        }
      }
    ],
    "stars": 32
  },
  {
    "id": "mcp-server-amazon-bedrock",
    "name": "mcp-server-amazon-bedrock",
    "description": "Use Amazon Nova Canvas model for image generation.",
    "links": {
      "application": "https://github.com/zxkane/mcp-server-amazon-bedrock"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "amazon-bedrock": {
            "command": "npx",
            "args": [
              "-y",
              "@zxkane/mcp-server-amazon-bedrock"
            ],
            "env": {
              "AWS_PROFILE": "your_profile_name",
              "AWS_ACCESS_KEY_ID": "your_access_key",
              "AWS_SECRET_ACCESS_KEY": "your_secret_key",
              "AWS_REGION": "us-east-1"
            }
          }
        }
      }
    ],
    "stars": 20
  },
  {
    "id": "mcp-server-ancestry-mcp",
    "name": "mcp-server-ancestry",
    "description": "Allows the AI to read .ged files and genetic data.",
    "links": {
      "application": "https://github.com/reeeeemo/ancestry-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "ancestry": {
            "command": "mcp-server-ancestry",
            "args": [
              "--gedcom-path",
              "path/to/your/gedcom/files"
            ]
          }
        }
      }
    ],
    "stars": 22
  },
  {
    "id": "mcp-server-anilist",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-anilist",
    "description": "An MCP server integrating AniList API for anime and manga information.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-anilist",
      "application": "https://github.com/yuna0x0/anilist-mcp"
    },
    "tags": [
      "research",
      "web",
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.2.4",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "92d9cded9f369c049b8473c609e8353159793b3b95193560ed7d1e68a75aa0f6",
      "reason": "Tool names are clear and descriptive, indicating specific AniList operations. Descriptions consistently explain functionality and include login requirements where applicable. Parameter descriptions are comprehensive with clear purposes, types, and constraints. Complex nested objects like filter parameters and options are well-documented with enum values and detailed explanations. The documentation thoroughly covers when to use tools and how parameters affect behavior.",
      "score": "A"
    },
    "resources": {
      "tools": 44,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-anilist-mcp",
    "name": "mcp-server-anilist",
    "description": "An MCP server integrating AniList API for anime and manga information.",
    "links": {
      "application": "https://github.com/yuna0x0/anilist-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "web",
      "integration",
      "development",
      "cloud"
    ],
    "provider": "npx",
    "stars": 26,
    "config": [
      {
        "mcpServers": {
          "anilist": {
            "command": "npx",
            "args": [
              "-y",
              "anilist-mcp"
            ],
            "env": {
              "ANILIST_TOKEN": "your_api_token"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-any-chat-completions-mcp",
    "name": "mcp-server-any-chat-completions",
    "description": "Chat with any other OpenAI SDK Compatible Chat Completions API, like Perplexity, Groq, xAI and more.",
    "links": {
      "application": "https://github.com/pyroprompts/any-chat-completions-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration",
      "web",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "chat-openai": {
            "command": "node",
            "args": [
              "/path/to/any-chat-completions-mcp/build/index.js"
            ],
            "env": {
              "AI_CHAT_KEY": "OPENAI_KEY",
              "AI_CHAT_NAME": "OpenAI",
              "AI_CHAT_MODEL": "gpt-4o",
              "AI_CHAT_BASE_URL": "https://api.openai.com/v1"
            }
          }
        }
      },
      {
        "mcpServers": {
          "chat-pyroprompts": {
            "command": "node",
            "args": [
              "/path/to/any-chat-completions-mcp/build/index.js"
            ],
            "env": {
              "AI_CHAT_KEY": "PYROPROMPTS_KEY",
              "AI_CHAT_NAME": "PyroPrompts",
              "AI_CHAT_MODEL": "ash",
              "AI_CHAT_BASE_URL": "https://api.pyroprompts.com/openaiv1"
            }
          },
          "chat-perplexity": {
            "command": "node",
            "args": [
              "/path/to/any-chat-completions-mcp/build/index.js"
            ],
            "env": {
              "AI_CHAT_KEY": "PERPLEXITY_KEY",
              "AI_CHAT_NAME": "Perplexity",
              "AI_CHAT_MODEL": "llama-3.1-sonar-small-128k-online",
              "AI_CHAT_BASE_URL": "https://api.perplexity.ai"
            }
          },
          "chat-openai": {
            "command": "node",
            "args": [
              "/path/to/any-chat-completions-mcp/build/index.js"
            ],
            "env": {
              "AI_CHAT_KEY": "OPENAI_KEY",
              "AI_CHAT_NAME": "OpenAI",
              "AI_CHAT_MODEL": "gpt-4o",
              "AI_CHAT_BASE_URL": "https://api.openai.com/v1"
            }
          }
        }
      }
    ],
    "stars": 105
  },
  {
    "id": "mcp-server-anyquery",
    "name": "mcp-server-anyquery",
    "description": "Query more than 40 apps with one binary using SQL. It can also connect to your PostgreSQL, MySQL, or SQLite compatible database. Local-first and private by design.",
    "links": {
      "application": "https://github.com/julien040/anyquery"
    },
    "official": false,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "development",
      "integration",
      "database"
    ],
    "provider": "github-release",
    "stars": 834,
    "config": [
      {
        "mcpServers": {
          "anyquery": {
            "command": "anyquery",
            "args": [
              "mcp",
              "--stdio"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-apache-airflow",
    "name": "mcp-server-apache-airflow",
    "description": "MCP server that connects to Apache Airflow using official client.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-apache-airflow",
      "application": "https://github.com/yangkyeongmo/mcp-server-apache-airflow"
    },
    "tags": [
      "integration",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.2.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": "D",
    "resources": {
      "tools": 65,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-apify",
    "name": "mcp-server-apify",
    "description": "Actors MCP Server: Use 3,000+ pre-built cloud tools to extract data from websites, e-commerce, social media, search engines, maps, and more.",
    "links": {
      "application": "https://github.com/apify/mcp-server-rag-web-browser"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research",
      "cloud"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "apify": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-server-apify"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-apify-actors",
    "icon": "https://apify.com/favicon.ico",
    "name": "mcp-server-apify-actors",
    "description": "Use 3,000+ pre-built cloud tools, known as Actors, to extract data from websites.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-apify-actors",
      "application": "https://github.com/apify/actors-mcp-server"
    },
    "tags": [
      "integration",
      "web",
      "research",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.2.4",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-apify-rag-web-browser",
    "icon": "https://apify.com/favicon.ico",
    "name": "mcp-server-apify-rag-web-browser",
    "description": "Use 3,000+ pre-built cloud tools to extract data from websites.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-apify-rag-web-browser",
      "application": "https://github.com/apify/mcp-server-rag-web-browser"
    },
    "tags": [
      "research",
      "cloud",
      "marketing"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "c5dd9c52bcaeaaa0e14031aeb2f8ad3f8b432ef28fa208ede5d203bb7bca2fbc",
      "reason": "Tool name clearly indicates search functionality. Description adequately explains what the tool does (Google search + web crawling) and provides basic usage guidance with tool recommendations. All parameters have clear descriptions explaining their purpose and constraints, with good examples for the query parameter. Minor weakness: description could better explain when to use this tool versus alternatives, but overall documentation is comprehensive and usable.",
      "score": "B"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-apimatic-mcp",
    "name": "mcp-server-apimatic",
    "description": "APIMatic MCP Server is used to validate OpenAPI specifications using APIMatics API. The server processes OpenAPI files and returns validation summaries by leveraging APIMatics API.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "storage",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "apimatic-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "apimatic-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-apktool-mcp-server",
    "name": "mcp-server-apktool",
    "description": "APKTool MCP Server is An MCP server for the Apk Tool to provide automation in reverse engineering of Android APKs.",
    "links": {
      "application": "https://github.com/zinja-coder/apktool-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "research",
      "security"
    ],
    "provider": "github-release",
    "config": [
      {
        "mcpServers": {
          "apktool-mcp-server": {
            "command": "/<path>/<to>/uv",
            "args": [
              "--directory",
              "</PATH/TO/>apktool-mcp-server/",
              "run",
              "apktool_mcp_server.py"
            ]
          }
        }
      }
    ],
    "stars": 73
  },
  {
    "id": "mcp-server-app-store-connect-mcp-server",
    "name": "mcp-server-app-store-connect",
    "description": "An MCP server to communicate with the App Store Connect API for iOS Developers.",
    "links": {
      "application": "https://github.com/JoshuaRileyDev/app-store-connect-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "app-store-connect": {
            "command": "npx",
            "args": [
              "-y",
              "@your-org/app-store-connect-mcp-server"
            ],
            "env": {
              "APP_STORE_CONNECT_KEY_ID": "YOUR_KEY_ID",
              "APP_STORE_CONNECT_ISSUER_ID": "YOUR_ISSUER_ID",
              "APP_STORE_CONNECT_P8_PATH": "/path/to/your/auth-key.p8"
            }
          }
        }
      }
    ],
    "stars": 45
  },
  {
    "id": "mcp-server-apple-notes-mcp",
    "name": "mcp-server-apple-notes",
    "description": "Allows the AI to read from your local Apple Notes database (macOS only).",
    "links": {
      "application": "https://github.com/sirmews/apple-notes-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "web",
      "storage",
      "research",
      "database"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "apple-notes-mcp": {
          "command": "uv",
          "args": [
            "--directory",
            "{project_dir}",
            "run",
            "apple-notes-mcp"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "apple-notes-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "{project_dir}",
              "run",
              "apple-notes-mcp"
            ]
          }
        }
      }
    ],
    "stars": 84
  },
  {
    "id": "mcp-server-apple-reminders",
    "name": "mcp-server-apple-reminders",
    "description": "An MCP server for interacting with Apple Reminders on macOS.",
    "links": {
      "application": "https://github.com/FradSer/mcp-server-apple-reminders"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "web",
      "development",
      "storage"
    ],
    "provider": "source",
    "stars": 38,
    "config": [
      {
        "mcpServers": {
          "apple-reminders": {
            "command": "mcp-server-apple-reminders",
            "args": []
          }
        }
      },
      {
        "mcpServers": {
          "apple-reminders": {
            "command": "mcp-server-apple-reminders",
            "args": []
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-apple-shortcuts",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-apple-shortcuts",
    "description": "An MCP Server Integration with Apple Shortcuts.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-apple-shortcuts",
      "application": "https://github.com/recursechat/mcp-server-apple-shortcuts"
    },
    "tags": [
      "automation",
      "integration"
    ],
    "official": false,
    "scope": "native",
    "mutitenant": false,
    "runtime": "node",
    "version": "1.0.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "22958228c0200de5adea2821cf71c8c70e13bdd291b8602f341e9d1897a40d14",
      "reason": "Tool names are clear and specific. Descriptions are brief but adequately convey basic functionality. Parameter descriptions are present and clear enough to understand purpose and expected input types, though they could be more detailed about constraints or usage scenarios.",
      "score": "C"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 1,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-armor-crypto",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-armor-crypto",
    "description": "Blockchain integration, staking, DeFi, swap, bridging, wallet, DCA, Orders, Coin Lookup, Tracking.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-armor-crypto",
      "application": "https://github.com/armorwallet/armor-crypto-mcp"
    },
    "tags": [
      "finance"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": false,
    "runtime": "python",
    "version": "0.2.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "ed81b78b4c9d6fb92ea11fb92134a204f1b2dbd49c40ffd3dd4de8b31bbe1543",
      "reason": "Tool names are clear and descriptive, indicating their purpose well. Most descriptions adequately explain functionality with 2-3 sentences and provide basic usage context. Parameter descriptions are generally clear with good detail about expected values and cross-references to other tools. Some tools like 'calculator' have excellent comprehensive descriptions, while others like 'wait_a_moment' and 'get_current_time' are more basic but adequate. Overall good documentation quality with minor gaps in some areas.",
      "score": "B"
    },
    "resources": {
      "tools": 37,
      "prompts": 1,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-armor-crypto-mcp",
    "name": "mcp-server-armor-crypto",
    "description": "MCP to interface with multiple blockchains, staking, DeFi, swap, bridging, wallet management, DCA, Limit Orders, Coin Lookup, Tracking and more.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "finance"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "armor-crypto-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "armor-crypto-mcp"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-arxiv-latex-mcp",
    "name": "mcp-server-arxiv-latex",
    "description": "Get the LaTeX source of arXiv papers to handle mathematical content and equations.",
    "links": {
      "application": "https://github.com/takashiishida/arxiv-latex-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "arxiv-latex-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "/ABSOLUTE/PATH/TO/arxiv-latex-mcp",
              "run",
              "arxiv-latex-mcp.py"
            ]
          }
        }
      }
    ],
    "stars": 7
  },
  {
    "id": "mcp-server-arxiv-mcp-server",
    "name": "mcp-server-arxiv",
    "description": "Search ArXiv research papers.",
    "links": {
      "application": "https://github.com/blazickjp/arxiv-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "arxiv-mcp-server": {
            "command": "uv",
            "args": [
              "tool",
              "run",
              "arxiv-mcp-server",
              "--storage-path",
              "/path/to/paper/storage"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "arxiv-mcp-server": {
            "command": "uv",
            "args": [
              "--directory",
              "path/to/cloned/arxiv-mcp-server",
              "run",
              "arxiv-mcp-server",
              "--storage-path",
              "/path/to/paper/storage"
            ]
          }
        }
      }
    ],
    "stars": 1021
  },
  {
    "id": "mcp-server-asana",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-asana",
    "description": "Asana API integration.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-asana",
      "application": "https://github.com/roychri/mcp-server-asana"
    },
    "tags": [
      "research",
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.7.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "37cd6c87b844f959df21d7166efeb2a9739e581b5938b74d5fe255557723fcfe",
      "reason": "Tool names are clear and consistently prefixed with 'asana_', indicating their purpose well. Most descriptions adequately explain functionality in 1-2 sentences. Parameter descriptions are generally clear with good detail for complex parameters like custom_fields and search filters. However, some descriptions are quite brief (e.g., 'Get detailed information about a specific task') and could benefit from more context about when to use each tool and what specific information they provide versus what they don't.",
      "score": "B"
    },
    "resources": {
      "tools": 22,
      "prompts": 3,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-aseprite-mcp",
    "name": "mcp-server-aseprite",
    "description": "MCP server using the Aseprite API to create pixel art.",
    "links": {
      "application": "https://github.com/diivi/aseprite-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "stars": 25,
    "config": [
      {
        "mcpServers": {
          "aseprite": {
            "command": "/opt/homebrew/bin/uv",
            "args": [
              "--directory",
              "/path/to/repo",
              "run",
              "-m",
              "aseprite_mcp"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-ashra-mcp",
    "name": "mcp-server-ashra",
    "description": "Extract structured data from any website. Just prompt and get JSON.",
    "links": {
      "application": "https://github.com/getrupt/ashra-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "web"
    ],
    "provider": "source",
    "stars": 17,
    "config": [
      {
        "mcpServers": {
          "ashra": {
            "command": "node",
            "args": [
              "YOUR_VALUE/build/index.js"
            ],
            "env": {
              "ASHRA_API_KEY": "YOUR_VALUE"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-assistant-mcp",
    "name": "mcp-server-assistant",
    "description": "Connects to your Pinecone Assistant and gives the agent context from its knowledge engine.",
    "links": {
      "application": "https://github.com/pinecone-io/assistant-mcp"
    },
    "official": true,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "pinecone-assistant": {
            "command": "docker",
            "args": [
              "run",
              "-i",
              "--rm",
              "-e",
              "PINECONE_API_KEY",
              "-e",
              "PINECONE_ASSISTANT_HOST",
              "pinecone/assistant-mcp"
            ],
            "env": {
              "PINECONE_API_KEY": "YOUR_VALUE",
              "PINECONE_ASSISTANT_HOST": "YOUR_VALUE"
            }
          }
        }
      }
    ],
    "stars": 14
  },
  {
    "id": "mcp-server-astra-db-mcp",
    "icon": "https://www.datastax.com/favicon-32x32.png",
    "name": "mcp-server-astra-db-mcp",
    "description": "MCP server for managing and interacting with Astra DB using language models.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-astra-db-mcp",
      "application": "https://github.com/datastax/astra-db-mcp"
    },
    "tags": [
      "database",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.2.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "8f01e8bab1802f3a5e24c8105a3fc820e00c99ae17149ba5f105104a75227cc2",
      "reason": "Tool names are clear and intuitive for database operations. Most descriptions are brief (1-2 sentences) but adequately explain basic functionality. Parameter descriptions are clear and specify purpose, though they lack detailed usage guidance. Some tools like 'OpenBrowser' seem unrelated to the Astra DB theme. The documentation provides sufficient information for basic usage but leaves some gaps around constraints, error conditions, and when to use specific tools over others.",
      "score": "C"
    },
    "resources": {
      "tools": 16,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-atla",
    "icon": "https://avatars.githubusercontent.com/u/145455090?s=200&v=5",
    "name": "mcp-server-atla",
    "description": "Enable AI agents to interact with the Atla API for state-of-the-art LLMJ evaluation.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-atla",
      "application": "https://github.com/atla-ai/atla-mcp-server"
    },
    "tags": [
      "integration",
      "cloud",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.1.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "34cf5d2588a4cbbd8fc0f4fa2864906a4406c031065594b9fec6ee12bdcd564d",
      "reason": "Tool names are highly specific and clearly indicate their evaluation purposes. Descriptions are comprehensive, explaining functionality, use cases, return formats, and underlying implementation details. All parameters have exceptionally detailed descriptions with clear guidance on proper usage, extensive examples, and specific formatting requirements. The evaluation_criteria parameter particularly excels with detailed rubric guidance and best practices. Documentation proactively addresses user questions about model selection, scoring formats, and proper criteria construction.",
      "score": "A"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-atlas-docs",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/atlas-docs/live/logo-1744788874628.png",
    "name": "mcp-server-atlas-docs",
    "description": "Provides AI assistants with technical docs for libraries and frameworks.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-atlas-docs",
      "application": "https://github.com/CartographAI/atlas-docs-mcp"
    },
    "tags": [
      "research",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.2.0",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "dff61ed395fdde10134ae91a7b89d887077fd7ae6009cb6564e3ba3176eb79e0",
      "reason": "Tool names are clear and intuitive, indicating specific documentation operations. Descriptions are comprehensive (3-4 sentences each) explaining functionality, when to use each tool, what they return, and their relationships to other tools. Parameter descriptions clearly explain purpose and provide concrete examples (like pagePath format). The toolset effectively guides users through a logical workflow from discovery to detailed retrieval.",
      "score": "A"
    },
    "resources": {
      "tools": 5,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-atlassian",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-atlassian",
    "description": "Integrates AI tools for Jira and Confluence tasks and automation.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-atlassian",
      "application": "https://github.com/sooperset/mcp-atlassian"
    },
    "tags": [
      "automation",
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.11.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "d1e40bc1c920e8410ef13f8303c9c7acedb7c915fdc27ad64be90849ceca3d9a",
      "reason": "Tool names are highly specific and intuitive, clearly indicating their purpose (e.g., 'jira_get_user_profile', 'confluence_create_page'). Descriptions are comprehensive and detailed, explaining functionality, when to use each tool, what they return, and important limitations. Parameter descriptions are exceptionally clear with extensive examples, format specifications, and usage guidance. Documentation proactively addresses user questions with concrete examples for complex parameters like JQL queries and field specifications.",
      "score": "A"
    },
    "resources": {
      "tools": 37,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-attestable-mcp-server",
    "name": "mcp-server-attestable",
    "description": "An MCP server running inside a trusted execution environment (TEE) via Gramine, showcasing remote attestation using RA-TLS. This allows an MCP client to verify the server before conencting.",
    "links": {
      "application": "https://github.com/co-browser/attestable-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "security",
      "cloud",
      "web"
    ],
    "provider": "docker",
    "config": [],
    "stars": 7
  },
  {
    "id": "mcp-server-attio",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-attio",
    "description": "Allows AI clients to manage records and notes in Attio CRM.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-attio",
      "application": "https://github.com/hmk/attio-mcp-server"
    },
    "tags": [
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.0.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "bfceb7a18de3c8e8d2d11a98ee338223cede3d1418be5f1220fa890c8b119197",
      "reason": "Tool names are clear and specific, indicating their purpose well. Descriptions are brief but adequate, covering basic functionality in 1-2 sentences. Parameter descriptions are clear and indicate purpose and expected input types. However, descriptions lack comprehensive detail about when to use each tool, what specific information they return, limitations, or relationship between different identifier types (URI vs ID). Documentation is usable but leaves some questions about tool behavior and constraints unanswered.",
      "score": "C"
    },
    "resources": {
      "tools": 4,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-attio-mcp-server",
    "name": "mcp-server-attio",
    "description": "Allows AI clients to manage records and notes in Attio CRM.",
    "links": {
      "application": "https://github.com/hmk/attio-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "attio": {
            "command": "npx",
            "args": [
              "attio-mcp-server"
            ],
            "env": {
              "ATTIO_API_KEY": "YOUR_ATTIO_API_KEY"
            }
          }
        }
      }
    ],
    "stars": 7
  },
  {
    "id": "mcp-server-audiense-insights",
    "icon": "https://resources.audiense.com/hubfs/favicon-1.png",
    "name": "mcp-server-audiense-insights",
    "description": "Extracts marketing insights and audience analysis from Audiense reports.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-audiense-insights",
      "application": "https://github.com/AudienseCo/mcp-audiense-insights"
    },
    "tags": [
      "marketing"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.2.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "87e9764ad601783288fc9dda977823c7f7009eb5450bc3e896e60fb2e96b9dd4",
      "reason": "Tool names are clear and descriptive, indicating their purpose well. Most descriptions adequately explain functionality with 2-3 sentences and provide context about what data is returned. Parameter descriptions are generally clear about purpose and expected values. Some tools like 'get-audience-content' and 'compare-audience-influencers' provide excellent detail about return data structure and business logic. Minor gaps include less detailed explanations for simpler tools like 'get-reports' and 'get-categories', but overall documentation is comprehensive enough for effective usage.",
      "score": "B"
    },
    "resources": {
      "tools": 8,
      "prompts": 3,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-aws-bedrock-kb-retrieval",
    "icon": "https://avatars.githubusercontent.com/u/3299148?s=200&v=4",
    "name": "mcp-server-aws-bedrock-kb-retrieval",
    "description": "Query Amazon Bedrock Knowledge Bases using natural language to retrieve relevant information.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-aws-bedrock-kb-retrieval",
      "application": "https://github.com/awslabs/mcp/tree/main/src/bedrock-kb-retrieval-mcp-server"
    },
    "tags": [
      "cloud",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "1.0.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-aws-canvas",
    "icon": "https://avatars.githubusercontent.com/u/3299148?s=200&v=4",
    "name": "mcp-server-aws-canvas",
    "description": "Generate images using Amazon Nova Canvas with text prompts and color guidance.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-aws-canvas",
      "application": "https://pypi.org/project/awslabs.nova-canvas-mcp-server/"
    },
    "tags": [
      "marketing",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "1.0.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-aws-cdk",
    "icon": "https://avatars.githubusercontent.com/u/3299148?s=200&v=4",
    "name": "mcp-server-aws-cdk",
    "description": "Explain CDK Nag rules, check suppressions, generate Bedrock schemas, find AWS patterns.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-aws-cdk",
      "application": "https://pypi.org/project/awslabs.cdk-mcp-server/"
    },
    "tags": [
      "cloud"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "1.0.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "fddb2ebfde25603af42e9e8980c30a8dfed7c449bde2ee0d9f91f274f5efd4b3",
      "reason": "Tool names are clear and specific, indicating their AWS CDK purposes well. However, descriptions vary significantly in quality - some tools like 'ExplainCDKNagRule' provide comprehensive explanations with examples and context, while others like 'CDKGeneralGuidance' have minimal descriptions. Parameter descriptions are basic but adequate, though some lack clear purpose explanations (e.g., 'code' vs 'file_path' distinction in CheckCDKNagSuppressions). The inconsistent documentation quality across tools prevents a higher grade despite some individual tools being well-documented.",
      "score": "C"
    },
    "resources": {
      "tools": 7,
      "prompts": 0,
      "resources": 1,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-aws-core",
    "icon": "https://avatars.githubusercontent.com/u/3299148?s=200&v=4",
    "name": "mcp-server-aws-core",
    "description": "Core AWS MCP server providing prompt understanding and server management capabilities.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-aws-core",
      "application": "https://pypi.org/project/awslabs.core-mcp-server/"
    },
    "tags": [
      "cloud"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "1.0.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "008247a131c22a9c3c2eb4f26f0efae9fde093050da4a04bb3950cb8abf6e632",
      "reason": "Tool name is vague and non-descriptive, description is tautological ('Prompt Understanding' tool for 'Prompt Understanding'), contains no actual functionality explanation, and has empty input schema with no parameters or guidance on what the tool actually does or when to use it.",
      "score": "F"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-aws-cost-analysis",
    "icon": "https://avatars.githubusercontent.com/u/3299148?s=200&v=4",
    "name": "mcp-server-aws-cost-analysis",
    "description": "Analyze CDK projects to identify AWS services used and get pricing information.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-aws-cost-analysis",
      "application": "https://pypi.org/project/awslabs.cost-analysis-mcp-server/"
    },
    "tags": [
      "cloud",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "1.0.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "558f502d5ef4bbe3aedddb658d85c6f789e37c577fd3d6ae3489d8f7a5a5f2bf",
      "reason": "Tool names are clear and specific, indicating their purposes well. Most descriptions adequately explain functionality with 2-3 sentences covering what the tool does and when to use it. The get_pricing_from_api and generate_cost_report tools have comprehensive descriptions with detailed usage guidance and examples. However, several parameters lack descriptions (project_path, service_code, region) or have minimal descriptions, and some tools like get_bedrock_patterns have very brief descriptions that could be more informative about their specific functionality.",
      "score": "B"
    },
    "resources": {
      "tools": 6,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-aws-diagram",
    "icon": "https://avatars.githubusercontent.com/u/3299148?s=200&v=4",
    "name": "mcp-server-aws-diagram",
    "description": "Create diagrams using the Python diagrams package: sequence, flow, and class diagrams.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-aws-diagram",
      "application": "https://github.com/awslabs/mcp/tree/main/src/aws-diagram-mcp-server"
    },
    "tags": [
      "development",
      "research"
    ],
    "official": true,
    "scope": "standalone",
    "mutitenant": true,
    "runtime": "python",
    "version": "1.0.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "72b4e29f9a86ece7ef3d09c7fb195fb5edc7a41983e78a7f46292adecd152d2a",
      "reason": "All three tools have excellent documentation quality. Tool names are clear and specific, descriptions are comprehensive (3-4+ sentences) explaining functionality, usage scenarios, and important limitations. Parameters have detailed descriptions with clear purpose and expected values. The generate_diagram tool particularly excels with extensive usage instructions, code requirements, and common patterns. All tools proactively address user questions and provide step-by-step guidance.",
      "score": "A"
    },
    "resources": {
      "tools": 3,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-aws-documentation",
    "icon": "https://avatars.githubusercontent.com/u/3299148?s=200&v=4",
    "name": "mcp-server-aws-documentation",
    "description": "Fetch, convert, and search AWS documentation pages, with recommendations for related content.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-aws-documentation",
      "application": "https://github.com/awslabs/mcp/tree/main/src/aws-documentation-mcp-server"
    },
    "tags": [
      "research",
      "cloud"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "1.0.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "01405029d7e8f48cc67d2ae50f72c8e0f4cf91ab3244a55b38fd0db5134cd72b",
      "reason": "Excellent documentation quality across all three tools. Tool names are clear and specific (read_documentation, search_documentation, recommend). Descriptions are comprehensive with detailed usage sections, clear examples, specific requirements, and practical guidance. Parameter descriptions are complete with purpose, constraints, and usage context clearly explained. Documentation proactively addresses common scenarios like handling long documents and finding new features.",
      "score": "A"
    },
    "resources": {
      "tools": 3,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-aws-kb-retrieval",
    "icon": "https://avatars.githubusercontent.com/u/3299148?s=200&v=4",
    "name": "mcp-server-aws-kb-retrieval",
    "description": "MCP server for AWS Knowledge Base retrieval using Bedrock Agent Runtime",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-aws-kb-retrieval",
      "application": "https://modelcontextprotocol.io"
    },
    "tags": [
      "research",
      "cloud"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.6.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "754c8d0597af5e512ade47118a01d5b7f57a3298ee77c2ae243da04d7bfcec97",
      "reason": "Tool name clearly indicates AWS Knowledge Base retrieval functionality. Description adequately explains what the tool does and its main parameters. Parameter descriptions are clear and specify their purpose. However, the description lacks detail about when to use it, what type of results it returns, or any limitations/constraints of the AWS KB service.",
      "score": "B"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-aws-lambda",
    "icon": "https://avatars.githubusercontent.com/u/3299148?s=200&v=4",
    "name": "mcp-server-aws-lambda",
    "description": "AWS Lambda integration to select and run Lambda function as MCP tools without code changes.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-aws-lambda",
      "application": "https://github.com/awslabs/mcp/tree/main/src/lambda-mcp-server"
    },
    "tags": [
      "integration",
      "cloud"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "1.0.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-aws-mcp-server",
    "name": "mcp-server-aws",
    "description": "A lightweight but powerful server that enables AI assistants to execute AWS CLI commands, use Unix pipes, and apply prompt templates for common AWS tasks in a safe Docker environment with multi-architecture support.",
    "links": {
      "application": "https://github.com/alexei-led/aws-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "development",
      "integration",
      "storage",
      "database",
      "cloud"
    ],
    "provider": "docker",
    "stars": 88,
    "config": [
      {
        "mcpServers": {
          "aws-mcp-server": {
            "command": "docker",
            "args": [
              "run",
              "-i",
              "--rm",
              "-v",
              "/Users/YOUR_USER_NAME/.aws:/home/appuser/.aws:ro",
              "ghcr.io/alexei-led/aws-mcp-server:latest"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-aws-nova-canvas",
    "name": "mcp-server-aws-nova-canvas",
    "description": "Generate images using Amazon Nova Canvas with text prompts and color guidance.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "aws-nova-canvas": {
            "command": "npx",
            "args": [
              "-y",
              "aws-nova-mcp"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-aws-terraform",
    "icon": "https://avatars.githubusercontent.com/u/3299148?s=200&v=4",
    "name": "mcp-server-aws-terraform",
    "description": "Terraform AWS best practices, infrastructure as code patterns, and security compliance with Checkov.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-aws-terraform",
      "application": "https://github.com/awslabs/mcp/tree/main/src/terraform-mcp-server"
    },
    "tags": [
      "research",
      "cloud"
    ],
    "official": true,
    "scope": "standalone",
    "mutitenant": true,
    "runtime": "python",
    "version": "1.0.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "5752c7ab8a5be36544e2424f9be44b5daa664820a1a114ea33233b6a255e32fb",
      "reason": "Excellent tool documentation with comprehensive descriptions that clearly explain functionality, usage context, and limitations. Tool names are highly specific and intuitive. Parameter descriptions are thorough with proper type constraints and clear purpose explanations. Each tool provides detailed examples, usage scenarios, and important contextual information like when to use specific parameters or constraints between options.",
      "score": "A"
    },
    "resources": {
      "tools": 7,
      "prompts": 0,
      "resources": 4,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-axiom",
    "icon": "https://axiom.co/favicon.ico",
    "name": "mcp-server-axiom",
    "description": "Query and analyze your Axiom logs, traces, and all other event data in natural language.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-axiom",
      "application": "https://github.com/axiomhq/mcp-server-axiom"
    },
    "tags": [
      "monitoring",
      "research",
      "translation"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "binary",
    "version": "v0.0.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-azure",
    "icon": "https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/acom_social_icon_azure",
    "name": "mcp-server-azure",
    "description": "Integrates AI agents with Azure services for enhanced functionality.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-azure",
      "application": "https://github.com/Azure/azure-mcp"
    },
    "tags": [
      "cloud",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "cbdca83f971944ddfc647341560c29bdac2b2effdf5a3a97abcb840300ab7a95",
      "reason": "Tool names are clear and follow consistent Azure service patterns with 'azmcp-' prefix. Descriptions adequately explain functionality and provide context for when to use each tool, though some could be more comprehensive. Most parameters have clear descriptions explaining their purpose and expected values. The toolset demonstrates good consistency across Azure services, but some descriptions lack detail about limitations or specific behaviors that would elevate them to excellent quality.",
      "score": "B"
    },
    "resources": {
      "tools": 54,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-azure-cli-mcp",
    "name": "mcp-server-azure-cli",
    "description": "A wrapper around the Azure CLI command line that allows you to talk directly to Azure.",
    "links": {
      "application": "https://github.com/jdubois/azure-cli-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "cloud",
      "development"
    ],
    "provider": "docker",
    "stars": 62,
    "config": [
      {
        "mcpServers": {
          "azure-cli": {
            "command": "java",
            "args": [
              "-jar",
              "~/Downloads/azure-cli-mcp.jar"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-azure-devops",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-azure-devops",
    "description": "Azure DevOps integration for repository management, work items, and pipelines.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-azure-devops",
      "application": "https://github.com/Tiberriver256/mcp-server-azure-devops"
    },
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.39",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "aff8d92e2f0861aafc94caf3f62be94b38ae36edd30479515d66d6c17b97f77a",
      "reason": "Tool names are clear and specific, indicating their Azure DevOps purpose well. Most descriptions adequately explain functionality in 1-2 sentences with good context about what each tool does. Parameter descriptions are generally clear and complete, explaining purpose, types, and expected values effectively. Some tools like 'get_all_repositories_tree' and search functions have particularly thorough documentation. Minor gaps exist in a few areas where descriptions could be slightly more comprehensive, but overall the documentation provides sufficient guidance for proper tool usage.",
      "score": "B"
    },
    "resources": {
      "tools": 32,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-azure-resource-graph-mcp-server",
    "name": "mcp-server-azure-resource-graph",
    "description": "A Model Context Protocol server for querying and analyzing Azure resources at scale using Azure Resource Graph, enabling AI assistants to explore and monitor Azure infrastructure.",
    "links": {
      "application": "https://github.com/hardik-id/azure-resource-graph-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "cloud",
      "development"
    ],
    "provider": "source",
    "stars": 3,
    "config": [
      {
        "mcpServers": {
          "azure-resource-graph-mcp-server": {
            "command": "node",
            "args": [
              "C:\\YOUR_WORKSPACE\\azure-resource-graph-mcp-server\\build\\index.js"
            ],
            "env": {
              "SUBSCRIPTION_ID": "xxxxxx-xx-xx-xx-xxxxxx"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-balldontlie-mcp",
    "name": "mcp-server-balldontlie",
    "description": "MCP server that integrates balldontlie api to provide information about players, teams and games for the NBA, NFL and MLB.",
    "links": {
      "application": "https://github.com/mikechao/balldontlie-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "unknown",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 1
  },
  {
    "id": "mcp-server-bankless-onchain",
    "icon": "https://avatars.githubusercontent.com/u/118560591?s=200&v=4",
    "name": "mcp-server-bankless-onchain",
    "description": "Query Onchain data, like ERC20 tokens, transaction history, smart contract state.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-bankless-onchain",
      "application": "https://bankless.com"
    },
    "tags": [
      "research",
      "finance"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.6",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "b7991cd4431d407b8d5c5ba5ba412802f05548709583887f5c7cdadb9231fb5e",
      "reason": "Most tool names are clear and descriptive. Basic descriptions are provided for all tools (1-2 sentences each) explaining core functionality. Parameter descriptions are present and understandable, though somewhat sparse. However, descriptions lack comprehensive details about when to use each tool, limitations, or edge cases. The complex 'read_contract' tool has detailed tuple handling instructions but other tools could benefit from more context about their specific use cases and blockchain-specific considerations.",
      "score": "C"
    },
    "resources": {
      "tools": 10,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-base",
    "icon": "https://avatars.githubusercontent.com/u/16627100?s=200&v=4",
    "name": "mcp-server-base",
    "description": "Onchain integration for Base Network and Coinbase API manage wallets, transfers, contracts and DeFi.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-base",
      "application": "https://github.com/base/base-mcp"
    },
    "tags": [
      "integration",
      "finance"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": false,
    "runtime": "node",
    "version": "1.0.13",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-base-mcp",
    "name": "mcp-server-base",
    "description": "Base Network integration for onchain tools, allowing interaction with Base Network and Coinbase API for wallet management, fund transfers, smart contracts, and DeFi operations.",
    "links": {
      "application": "https://github.com/base/base-mcp"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "base-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "base-mcp@latest"
            ],
            "env": {
              "COINBASE_API_KEY_NAME": "your_api_key_name",
              "COINBASE_API_PRIVATE_KEY": "your_private_key",
              "SEED_PHRASE": "your seed phrase here",
              "COINBASE_PROJECT_ID": "your_project_id",
              "ALCHEMY_API_KEY": "your_alchemy_api_key",
              "PINATA_JWT": "your_pinata_jwt",
              "OPENROUTER_API_KEY": "your_openrouter_api_key",
              "CHAIN_ID": "optional_for_base_sepolia_testnet"
            },
            "disabled": false,
            "autoApprove": []
          }
        }
      }
    ],
    "stars": 210
  },
  {
    "id": "mcp-server-baseline-mcp-server",
    "name": "mcp-server-baseline",
    "description": "MCP server that searches Baseline status using Web Platform API.",
    "links": {
      "application": "https://github.com/yamanoku/baseline-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "cloud",
      "research",
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "baseline-mcp-server": {
            "command": "deno",
            "args": [
              "run",
              "--allow-net=api.webstatus.dev",
              "jsr:@yamanoku/baseline-mcp-server"
            ]
          }
        }
      }
    ],
    "stars": 29
  },
  {
    "id": "mcp-server-basic-memory",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-basic-memory",
    "description": "Local-first knowledge management combining Zettelkasten with knowledge graphs",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-basic-memory",
      "application": "https://pypi.org/project/basic-memory/"
    },
    "tags": null,
    "official": false,
    "scope": "standalone",
    "mutitenant": false,
    "runtime": "python",
    "version": "0.12.3",
    "requiresConfiguration": false,
    "requiresStorage": true,
    "rating": {
      "hash": "b6188697e384bfa8beabec46ed8c36793664c58030b304cf26c034acab11ca6a",
      "reason": "Tool names are clear and intuitive, indicating their purposes well. Most descriptions adequately explain functionality, with some tools like 'build_context' and 'recent_activity' providing good detail about usage. However, parameter descriptions are largely missing or inadequate - most parameters only have generic titles without explaining their purpose, constraints, or how they affect tool behavior. The documentation leaves users guessing about parameter usage despite having clear tool-level descriptions.",
      "score": "C"
    },
    "resources": {
      "tools": 9,
      "prompts": 3,
      "resources": 1,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-bear-mcp-server",
    "name": "mcp-server-bear",
    "description": "Allows the AI to read from your Bear Notes (macOS only).",
    "links": {
      "application": "https://github.com/akseyh/bear-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration",
      "cloud",
      "research",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "bear": {
            "command": "docker",
            "args": [
              "run",
              "-v",
              "/Users/[YOUR_USER_NAME]/Library/Group Containers/9K33E3U3T4.net.shinyfrog.bear/Application Data:/app/db",
              "-i",
              "akseyh/bear-mcp-server"
            ]
          }
        }
      }
    ],
    "stars": 23
  },
  {
    "id": "mcp-server-beeper-mcp",
    "name": "mcp-server-beeper",
    "description": "Beeper provides transactions on BSC, including balance/token transfers, token swaps in Pancakeswap and beeper reward claims.",
    "links": {
      "application": "https://github.com/intentos-labs/beeper-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "beeper": {
            "command": "uv",
            "args": [
              "--directory",
              "path/to/beeper-mcp",
              "run",
              "src/beeper_mcp/server.py"
            ],
            "env": {
              "BEEPER_ACCOUNT": "your account, 0x...",
              "BEEPER_SECRET_KEY": "your private key or in .env",
              "BEEPER_TARGET_TOKEN": "default token address",
              "BEEPER_CHAIN": "chain type <bsc/bsc-testnet>"
            }
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-benborla-mysql",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-benborla-mysql",
    "description": "MySQL database integration in NodeJS with configurable access controls and schema inspection.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-benborla-mysql",
      "application": "https://github.com/benborla/mcp-server-mysql"
    },
    "tags": [
      "database",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "2.0.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "b5f9b05ca59dee53e652c8065237f6599f258c54e43d1b815fe8e545a272e75b",
      "reason": "Tool name is clear but description is poorly formatted with version placeholder '[vundefined]' and lacks essential details about connection requirements, supported MySQL features, or when to use it. The 'sql' parameter description is minimal, providing no guidance on query structure, constraints, or expected format.",
      "score": "D"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-bicscan-mcp",
    "name": "mcp-server-bicscan",
    "description": "Risk score / asset holdings of EVM blockchain address (EOA, CA, ENS) and even domain names.",
    "links": {
      "application": "https://github.com/ahnlabio/bicscan-mcp"
    },
    "official": true,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [],
    "stars": 3
  },
  {
    "id": "mcp-server-bigquery",
    "name": "mcp-server-lucashild-bigquery",
    "description": "BigQuery database integration with schema inspection and query capabilities.",
    "links": {
      "application": "https://github.com/LucasHild/mcp-server-bigquery"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "web",
      "development"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "bigquery": {
          "command": "uv",
          "args": [
            "--directory",
            "{{PATH_TO_REPO}}",
            "run",
            "mcp-server-bigquery",
            "--project",
            "{{GCP_PROJECT_ID}}",
            "--location",
            "{{GCP_LOCATION}}"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "bigquery": {
            "command": "uv",
            "args": [
              "--directory",
              "{{PATH_TO_REPO}}",
              "run",
              "mcp-server-bigquery",
              "--project",
              "{{GCP_PROJECT_ID}}",
              "--location",
              "{{GCP_LOCATION}}"
            ]
          }
        }
      }
    ],
    "stars": 68
  },
  {
    "id": "mcp-server-bilibili-js",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-bilibili-js",
    "description": "Search Bilibili content.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-bilibili-js",
      "application": "https://github.com/34892002/bilibili-mcp-js"
    },
    "tags": [
      "research",
      "web",
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.2",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "3a32785f84904eb4aedd266c73b40ae8a9ba7d274dae2b0d1bebd18e20cee2ed",
      "reason": "Tool name is clear and specific, but the description is extremely brief (only 7 Chinese characters meaning 'search Bilibili video content') without explaining functionality, usage context, or what information is returned. Parameter descriptions are minimal - just basic labels without explaining how they affect behavior or providing usage guidance.",
      "score": "D"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-bilibili-mcp-js",
    "name": "mcp-server-bilibili-js",
    "description": "An MCP server that supports searching for Bilibili content. Provides LangChain integration examples and test scripts.",
    "links": {
      "application": "https://github.com/34892002/bilibili-mcp-js"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "research",
      "web",
      "integration"
    ],
    "provider": "npx",
    "stars": 87,
    "config": [
      {
        "mcpServers": {
          "bilibili-search": {
            "command": "npx",
            "args": [
              "bilibili-mcp"
            ],
            "description": "B站视频搜索 MCP 服务，可以在AI应用中搜索B站视频内容。"
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-bilibili-mcp.git",
    "name": "mcp-server-bilibili.git",
    "description": "A FastMCP-based tool that fetches Bilibili's trending videos and exposes them via a standard MCP interface.",
    "links": {
      "application": "https://github.com/xspadex/bilibili-mcp.git"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "web"
    ],
    "provider": "npx",
    "config": []
  },
  {
    "id": "mcp-server-binary_ninja_mcp",
    "name": "mcp-server-binary_ninja_mcp",
    "description": "A Binary Ninja plugin, MCP server, and bridge that seamlessly integrates Binary Ninja with your favorite MCP client. It enables you to automate the process of performing binary analysis and reverse engineering.",
    "links": {
      "application": "https://github.com/fosdickio/binary_ninja_mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "research",
      "security"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "binary_ninja_mcp": {
            "command": "/ABSOLUTE/PATH/TO/binary_ninja_mcp/.venv/bin/python",
            "args": [
              "/ABSOLUTE/PATH/TO/binary_ninja_mcp/bridge/binja_mcp_bridge.py"
            ]
          }
        }
      }
    ],
    "stars": 39
  },
  {
    "id": "mcp-server-bing-search",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-bing-search",
    "description": "Web search capabilities using Microsoft Bing Search API.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-bing-search",
      "application": "https://github.com/leehanchung/bing-search-mcp"
    },
    "tags": [
      "research",
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.1.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "0efd2d7bb0c106a19ddca16a48351deccf6cac548a542adfb60c522d8c1762d3",
      "reason": "Tool names clearly indicate their purpose with the bing_ prefix showing the service provider. Descriptions adequately explain functionality and mention when to use each tool (general info, current events, visual content). However, parameter descriptions are completely missing from the input schema - all parameters only have title and type without descriptions explaining their purpose, constraints, or expected values like market codes or freshness options.",
      "score": "C"
    },
    "resources": {
      "tools": 3,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-bing-search-mcp",
    "name": "mcp-server-bing-search",
    "description": "Web search capabilities using Microsoft Bing Search API.",
    "links": {
      "application": "https://github.com/leehanchung/bing-search-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "bing-search": {
            "command": "uvx",
            "args": [
              "/path/to/your/bing-search-mcp"
            ],
            "env": {
              "BING_API_KEY": "your-bing-api-key"
            }
          }
        }
      }
    ],
    "stars": 34
  },
  {
    "id": "mcp-server-biomcp",
    "name": "mcp-server-biomcp",
    "description": "Biomedical research server providing access to PubMed, ClinicalTrials.gov, and MyVariant.info.",
    "links": {
      "application": "https://github.com/genomoncology/biomcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research",
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "biomcp": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "biomcp-python",
              "biomcp",
              "run"
            ]
          }
        }
      }
    ],
    "stars": 93
  },
  {
    "id": "mcp-server-bitcoin",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-bitcoin",
    "description": "A Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin blockchain.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-bitcoin",
      "application": "https://github.com/AbdelStark/bitcoin-mcp"
    },
    "tags": [
      "development",
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.0.6",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "02d92f7e54c7aed65eb36f02d51b5e60dfa595390a8c83a6256fad2a4ac85476",
      "reason": "Tool names are clear and specific, indicating Bitcoin/Lightning functionality well. However, descriptions are minimal one-liners that lack essential context about when to use each tool, what information they return, limitations, or usage scenarios. Parameter descriptions are basic but adequate. The documentation leaves significant gaps requiring users to infer tool purposes and behavior details.",
      "score": "D"
    },
    "resources": {
      "tools": 7,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-bitcoin-mcp",
    "name": "mcp-server-bitcoin",
    "description": "A Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin, allowing them to generate keys, validate addresses, decode transactions, query the blockchain, and more.",
    "links": {
      "application": "https://github.com/AbdelStark/bitcoin-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "bitcoin-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "bitcoin-mcp@latest"
            ]
          }
        }
      }
    ],
    "stars": 37
  },
  {
    "id": "mcp-server-bitrefill",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/bitrefill/live/logo-1744790288436.png",
    "name": "mcp-server-bitrefill",
    "description": "Provides Bitrefill services for AI assistants via the Model Context Protocol.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-bitrefill",
      "application": "https://github.com/bitrefill/bitrefill-mcp-server"
    },
    "tags": [
      "integration",
      "finance"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.3.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "79f90ee88d0f8c9984e8397e46d6d807e7f5955fe8cf261896b733056a013c0e",
      "reason": "Tool names are clear and purpose-specific. Most descriptions adequately explain functionality with good guidance on when to use tools (like search suggesting to use categories first). Parameter descriptions are generally clear with good examples and constraints. However, some tools like 'detail' have minimal descriptions, and several parameters in 'search' lack sufficient explanation of their purpose or impact on behavior.",
      "score": "B"
    },
    "resources": {
      "tools": 12,
      "prompts": 0,
      "resources": 7,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-blockbeats-mcp",
    "name": "mcp-server-blockbeats",
    "description": "An MCP server that delivers blockchain news and in-depth articles from BlockBeats for AI agents.",
    "links": {
      "application": "https://github.com/kukapay/blockbeats-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 3
  },
  {
    "id": "mcp-server-bluesky-context-server",
    "name": "mcp-server-bluesky-context",
    "description": "Bluesky instance integration for querying and interaction.",
    "links": {
      "application": "https://github.com/keturiosakys/bluesky-context-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "development",
      "communication"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "bluesky": {
            "command": "/Users/laurynas-fp/.bun/bin/bun",
            "args": [
              "YOUR_VALUE/bluesky-context-server/index.ts"
            ],
            "env": {
              "BLUESKY_APP_KEY": "",
              "BLUESKY_IDENTIFIER": ""
            }
          }
        }
      }
    ],
    "stars": 19
  },
  {
    "id": "mcp-server-books-mcp-server",
    "name": "mcp-server-books",
    "description": "This is an MCP server used for querying books, and it can be applied in common MCP clients, such as Cherry Studio.",
    "links": {
      "application": "https://github.com/VmLia/books-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "development"
    ],
    "provider": "source",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "books-mcp-server": {
            "name": "books-mcp",
            "type": "stdio",
            "description": "",
            "isActive": true,
            "registryUrl": "",
            "command": "uv",
            "args": [
              "--directory",
              "/Enter your local project directory/books-mcp-server",
              "run",
              "main.py"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-box",
    "name": "mcp-server-unknown-box",
    "description": "Interact with the Intelligent Content Management platform through Box AI.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "storage",
      "cloud"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "box": {
            "command": "npx",
            "args": [
              "-y",
              "box-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-box-mcp-server",
    "name": "mcp-server-hmk-box",
    "description": "Box integration for listing, reading and searching files.",
    "links": {
      "application": "https://github.com/hmk/box-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "box": {
            "command": "npx",
            "args": [
              "box-mcp-server"
            ],
            "env": {
              "BOX_JWT_BASE64": "YOUR_BASE64_ENCODED_JWT",
              "BOX_USER_ID": "123456"
            }
          }
        }
      }
    ],
    "stars": 6
  },
  {
    "id": "mcp-server-brave-search",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-brave-search",
    "description": "MCP server for Brave Search API integration",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-brave-search",
      "application": "https://modelcontextprotocol.io"
    },
    "tags": [
      "web",
      "research",
      "automation"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.6.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "8d72b2124439ca5ac8d884b157db2105f11127be34bbd35edbe2c340ee7cc6c9",
      "reason": "Both tools have clear, specific names that indicate their distinct purposes. Descriptions are comprehensive, explaining functionality, use cases, return data, and when to use each tool. All parameters include clear descriptions with constraints (character limits, result counts, pagination limits) and practical examples. The documentation proactively addresses user scenarios like 'near me' queries and fallback behavior.",
      "score": "A"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-brave-search-mcp",
    "name": "mcp-server-mikechao-brave-search",
    "description": "Web, Image, News, Video, and Local Point of Interest search capabilities using Brave's Search API.",
    "links": {
      "application": "https://github.com/mikechao/brave-search-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "research",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 1
  },
  {
    "id": "mcp-server-bridge-rates-mcp",
    "name": "mcp-server-bridge-rates",
    "description": "Delivering real-time cross-chain bridge rates and optimal transfer routes to onchain AI agents.",
    "links": {
      "application": "https://github.com/kukapay/bridge-rates-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "bridge-rates": {
            "command": "node",
            "args": [
              "/absolute/path/to/bridge-rates-mcp/index.js"
            ]
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-brightdata",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-brightdata",
    "description": "Discover, extract, and interact with the web - automated access across the public internet.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-brightdata",
      "application": "https://github.com/luminati-io/brightdata-mcp"
    },
    "tags": [
      "research",
      "web"
    ],
    "official": false,
    "scope": "native",
    "mutitenant": false,
    "runtime": "node",
    "version": "2.1.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "0fe77a22ce910ba578498e042eef70ebea6395a9ea5d180625006cb9b75e93cc",
      "reason": "Mixed quality documentation. While some tools like 'search_engine' have adequate descriptions with clear functionality and parameter explanations, the majority suffer from minimal descriptions and poor parameter documentation. Many tools lack essential details about URL format requirements, and parameter descriptions are often missing (e.g., 'query' parameter has no description). The large number of specialized tools with repetitive, brief descriptions and inadequate parameter guidance brings the overall quality to adequate level.",
      "score": "C"
    },
    "resources": {
      "tools": 48,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-browser-control-mcp",
    "name": "mcp-server-browser-control",
    "description": "An MCP server paired with a browser extension that enables LLM clients to control the user's browser (Firefox).",
    "links": {
      "application": "https://github.com/eyalzh/browser-control-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "research",
      "web"
    ],
    "provider": "source",
    "stars": 17,
    "config": [
      {
        "mcpServers": {
          "browser-control": {
            "command": "node",
            "args": [
              "/path/to/repo/mcp-server/dist/server.js"
            ],
            "env": {
              "EXTENSION_SECRET": "YOUR_VALUE"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-browser-kit",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-browser-kit",
    "description": "An MCP Server for interacting with manifest v2 compatible browsers.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-browser-kit",
      "application": "https://github.com/ndthanhdev/mcp-browser-kit"
    },
    "tags": [
      "web",
      "automation"
    ],
    "official": false,
    "scope": "native",
    "mutitenant": false,
    "runtime": "node",
    "version": "5.0.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "085d77ac7cb3f81bd64e94a0293733a58a6f24a3b70703dd19bf6c8626111587",
      "reason": "Tool names are highly specific and intuitive with clear functional indicators. Descriptions are comprehensive (3-4+ sentences each) with detailed explanations of functionality, usage context, workflow guidance, and manifest version limitations. All parameters have clear, complete descriptions explaining purpose and expected values. Documentation proactively addresses workflow sequences, browser compatibility, and common usage patterns, making it exceptionally clear when and how to use each tool.",
      "score": "A"
    },
    "resources": {
      "tools": 11,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-browser-use-mcp-server",
    "name": "mcp-server-browser-use",
    "description": "Browser-use packaged as an MCP server with SSE transport. includes a dockerfile to run chromium in docker + a vnc server.",
    "links": {
      "application": "https://github.com/co-browser/browser-use-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "web",
      "development",
      "integration",
      "cloud"
    ],
    "provider": "docker",
    "stars": 397,
    "config": [
      {
        "mcpServers": {
          "browser-use-mcp-server": {
            "url": "http://localhost:8000/sse"
          }
        }
      },
      {
        "mcpServers": {
          "browser-server": {
            "command": "browser-use-mcp-server",
            "args": [
              "run",
              "server",
              "--port",
              "8000",
              "--stdio",
              "--proxy-port",
              "9000"
            ],
            "env": {
              "OPENAI_API_KEY": "your-api-key"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-browserbase",
    "icon": "https://browserbase.com/favicon.ico",
    "name": "mcp-server-browserbase",
    "description": "Automate browser interactions in the cloud (e.g. web navigation, data extraction, form filling).",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-browserbase",
      "application": "https://github.com/browserbase/mcp-server-browserbase"
    },
    "tags": [
      "web",
      "cloud",
      "automation"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.5",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "74750b7055916481b100580aa6163a15c9b0717a079c6c311ea6228467c78be3",
      "reason": "While tool names are clear and indicate purpose, descriptions are inconsistent with many being overly brief (e.g., 'Close the current page...', 'Resize window...'). Critical parameter descriptions are missing or inadequate - width/height lack descriptions, sessionId appears without explanation, and dummy parameters suggest incomplete documentation. The toolset has significant gaps requiring users to infer functionality and usage details.",
      "score": "D"
    },
    "resources": {
      "tools": 19,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-bruno",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-bruno",
    "description": "An MCP server for interacting with Bruno API Client.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-bruno",
      "application": "https://github.com/hungthai1401/bruno-mcp"
    },
    "tags": [
      "integration",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.0",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "267b80956558743858b9c539df1de8f46b9ced6de30a5112578f599e0d020459",
      "reason": "Tool name is clear and indicates purpose. Description briefly explains functionality but lacks important details about what Bruno Collections are, when to use this tool, what output to expect, or any limitations. Parameter descriptions are basic but adequate - 'collection' and 'environment' are reasonably clear, though 'variables' could be more specific about format and usage.",
      "score": "C"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-bruno-mcp",
    "name": "mcp-server-bruno",
    "description": "An MCP server for interacting with Bruno API Client.",
    "links": {
      "application": "https://github.com/hungthai1401/bruno-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "bruno-runner": {
            "command": "npx",
            "args": [
              "-y",
              "bruno-mcp"
            ]
          }
        }
      }
    ],
    "stars": 9
  },
  {
    "id": "mcp-server-bucket",
    "name": "mcp-server-bucket",
    "description": "Flag features, manage company data, and control feature access using Bucket.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "bucket": {
            "command": "npx",
            "args": [
              "-y",
              "bucket-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-bugsnag",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-bugsnag",
    "description": "An MCP server for interacting with Bugsnag.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-bugsnag",
      "application": "https://github.com/tgeselle/bugsnag-mcp"
    },
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.1.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "67889fc67331c679d0ba1fa94be593902391b6470d6464992e761410b8b382a7",
      "reason": "Tool names are clear and indicate their Bugsnag-specific functionality well. Descriptions are brief but adequately explain the main purpose of each tool in 1-2 sentences. Parameter descriptions consistently identify their purpose (e.g., 'Bugsnag project ID', 'Maximum number of errors to return') and types are clear. However, descriptions lack guidance on when to use each tool, what specific information they return, or any usage limitations, leaving some user questions unanswered.",
      "score": "C"
    },
    "resources": {
      "tools": 11,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-bugsnag-mcp",
    "name": "mcp-server-bugsnag",
    "description": "An MCP server for interacting with Bugsnag.",
    "links": {
      "application": "https://github.com/tgeselle/bugsnag-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "bugsnag": {
            "command": "npx",
            "args": [
              "-y",
              "bugsnag-mcp-server"
            ],
            "env": {
              "BUGSNAG_API_KEY": "your-bugsnag-api-key"
            },
            "disabled": false,
            "alwaysAllow": []
          }
        }
      }
    ],
    "stars": 9
  },
  {
    "id": "mcp-server-cal-mcp",
    "name": "mcp-server-cal",
    "description": "An MCP server for Mathematical expression calculation.",
    "links": {
      "application": "https://github.com/pwh-pwh/cal-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "npx",
    "config": [],
    "stars": 7
  },
  {
    "id": "mcp-server-calculator",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-calculator",
    "description": "This server enables LLMs to use calculator for precise numerical calculations.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-calculator",
      "application": "https://github.com/githejie/mcp-server-calculator"
    },
    "tags": [
      "integration"
    ],
    "official": false,
    "scope": "standalone",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.2.0",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "c783abc4af6a09e97cebbdd5f8c7ed8e5af641db63ee3e282d761fadfb77781a",
      "reason": "The tool name 'calculate' is appropriately descriptive, but the description is minimal with only one brief sentence that doesn't explain what types of expressions are supported, when to use it, or any limitations. The parameter description is completely missing - 'expression' has no description field explaining what kind of input is expected or how it should be formatted.",
      "score": "D"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-ccxt",
    "name": "mcp-server-ccxt",
    "description": "An MCP server for accessing real-time crypto market data and trading via 20+ exchanges using the CCXT library. Supports spot, futures, OHLCV, balances, orders, and more.",
    "links": {
      "application": "https://github.com/doggybee/mcp-server-ccxt"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "ccxt": {
            "command": "mcp-server-ccxt"
          }
        }
      },
      {
        "mcpServers": {
          "ccxt": {
            "command": "node",
            "args": [
              "/path/to/mcp-server-ccxt/build/index.js"
            ]
          }
        }
      }
    ],
    "stars": 14
  },
  {
    "id": "mcp-server-chainlink-feeds-mcp",
    "name": "mcp-server-chainlink-feeds",
    "description": "Providing real-time access to Chainlink's decentralized on-chain price feeds.",
    "links": {
      "application": "https://github.com/kukapay/chainlink-feeds-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "chainlink-feeds-mcp": {
            "command": "node",
            "args": [
              "path/to/chainlink-feeds-mcp/index.js"
            ],
            "env": {
              "INFURA_API_KEY": "your_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 1
  },
  {
    "id": "mcp-server-chargebee",
    "icon": "https://www.chargebee.com/static/resources/brand/favicon.png",
    "name": "mcp-server-chargebee",
    "description": "MCP Server that connects AI agents to Chargebee platform.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-chargebee",
      "application": "https://github.com/chargebee/agentkit/tree/main/modelcontextprotocol"
    },
    "tags": [
      "finance"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.0.3",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "95187be9a453013a601f1ce6649cd1bbbe955ff8bdea813091988c108594bf91",
      "reason": "Tool names are clear and specific, indicating their distinct purposes (documentation search vs code planning). Descriptions adequately explain functionality and when to use each tool, with good differentiation between the two. Parameter descriptions are clear and include helpful guidance like 'Check the user's application language.' The enum constraints for language are well-defined. Minor improvement could be made in describing what type of content/format each tool returns, but overall provides sufficient guidance for proper usage.",
      "score": "B"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-chart",
    "icon": "https://avatars.githubusercontent.com/u/19199542?s=200&v=4",
    "name": "mcp-server-chart",
    "description": "A Model Context Protocol server for generating visual charts using AntV.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-chart",
      "application": "https://github.com/antvis/mcp-server-chart"
    },
    "tags": [
      "integration",
      "web",
      "development"
    ],
    "official": true,
    "scope": "standalone",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.4.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "3fefb72f84551967fee85457fc2de61fa51d592a5529d6ecc0277bd7ef030917",
      "reason": "Tool names are clear and descriptive, indicating chart types effectively. Descriptions adequately explain functionality and use cases with good examples, though some could be more concise. Parameter descriptions are generally clear with helpful examples and proper type specifications. Minor issues include some verbose descriptions and inconsistent detail levels across tools, but overall documentation provides solid guidance for usage.",
      "score": "B"
    },
    "resources": {
      "tools": 15,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-chess-mcp",
    "name": "mcp-server-chess",
    "description": "Access Chess.com player data, game records, and other public information through standardized MCP interfaces, allowing AI assistants to search and analyze chess information.",
    "links": {
      "application": "https://github.com/pab1it0/chess-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "gaming",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "chess": {
            "command": "uv",
            "args": [
              "--directory",
              "<full path to chess-mcp directory>",
              "run",
              "src/chess_mcp/main.py"
            ]
          }
        }
      }
    ],
    "stars": 30
  },
  {
    "id": "mcp-server-chroma",
    "icon": "https://trychroma.com/_next/static/media/chroma-logo.ae2d6e4b.svg",
    "name": "mcp-server-chroma",
    "description": "Embedding database for LLM applications with advanced search capabilities.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-chroma",
      "application": "https://github.com/chroma-core/chroma-mcp"
    },
    "tags": [
      "research",
      "database"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.2.4",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "e51bac8ccca2f1d4dd5e71986f26286e36e653c1b0911794f7eff253272b3993",
      "reason": "Tool names are clear and intuitive with consistent 'chroma_' prefixes. Descriptions are generally comprehensive, explaining functionality and providing detailed parameter information. Most parameters have adequate descriptions, though some technical HNSW parameters could benefit from more context about their practical impact. The query filtering examples in descriptions are particularly helpful for understanding complex parameters.",
      "score": "B"
    },
    "resources": {
      "tools": 12,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-chroma-mcp",
    "name": "mcp-server-chroma",
    "description": "Chroma MCP server to access local and cloud Chroma instances for retrieval capabilities.",
    "links": {
      "application": "https://github.com/chroma-core/chroma-mcp"
    },
    "official": true,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "integration",
      "research"
    ],
    "provider": "source",
    "config": [],
    "stars": 119
  },
  {
    "id": "mcp-server-chronulus-ai",
    "icon": "https://www.chronulus.com/favicon/chronulus-logo-blue-on-alpha-square-128x128.ico",
    "name": "mcp-server-chronulus-ai",
    "description": "Predict anything with Chronulus AI forecasting and prediction agents.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-chronulus-ai",
      "application": "https://github.com/ChronulusAI/chronulus-mcp"
    },
    "tags": [
      "integration",
      "finance",
      "automation"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.0.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "36fa23de6a53390638623d5bbdfe08b29f02bda8878233e460f6c18f27ff0afa",
      "reason": "All tool names are highly specific and clear, indicating their exact purpose. Descriptions are comprehensive (4-6 sentences each), thoroughly explaining functionality, when/how to use each tool, specific constraints, and expected inputs/outputs. Parameter descriptions are detailed and complete, with clear explanations of purpose, expected formats, and usage examples. The documentation proactively addresses common user scenarios and provides specific guidance for different input types and use cases.",
      "score": "A"
    },
    "resources": {
      "tools": 9,
      "prompts": 0,
      "resources": 2,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-chronulus-mcp",
    "name": "mcp-server-chronulus",
    "description": "Predict anything with Chronulus AI forecasting and prediction agents.",
    "links": {
      "application": "https://github.com/ChronulusAI/chronulus-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "storage",
      "cloud"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "chronulus-agents": {
            "command": "python",
            "args": [
              "-m",
              "chronulus_mcp"
            ],
            "env": {
              "CHRONULUS_API_KEY": "YOUR_VALUE"
            }
          }
        }
      }
    ],
    "stars": 57
  },
  {
    "id": "mcp-server-chucknorris-mcp",
    "name": "mcp-server-chucknorris",
    "description": "Specialized LLM enhancement prompts and jailbreaks with dynamic schema adaptation.",
    "links": {
      "application": "https://github.com/pollinations/chucknorris-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": []
  },
  {
    "id": "mcp-server-circleci",
    "icon": "https://circleci.com/favicon.ico",
    "name": "mcp-server-circleci",
    "description": "Enable AI Agents to fix build failures from CircleCI.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-circleci",
      "application": "https://github.com/CircleCI-Public/mcp-server-circleci"
    },
    "tags": [
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.9.0",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "38b9f9bdb3c8717b967704343e7158863b8bac83b92a75a89697900696bd9975",
      "reason": "The toolset provides clear, comprehensive descriptions with detailed usage scenarios and parameter explanations. Tool names are specific and intuitive (get_build_failure_logs, find_flaky_tests, etc.). Most descriptions thoroughly explain functionality, use cases, and constraints with good detail. Parameter descriptions are mostly clear with examples and format specifications. However, some descriptions are excessively verbose with repetitive warnings and instructions that could be more concise, and a few parameter descriptions lack complete clarity about their exact purpose or constraints.",
      "score": "B"
    },
    "resources": {
      "tools": 11,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-claude-debugs-for-you",
    "name": "mcp-server-claude-debugs-for-you",
    "description": "An MCP Server and VS Code Extension which enables (language agnostic) automatic debugging via breakpoints and expression evaluation.",
    "links": {
      "application": "https://github.com/jasonjmcghee/claude-debugs-for-you"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "debug": {
            "command": "node",
            "args": [
              "/path/to/mcp-debug.js"
            ]
          }
        }
      }
    ],
    "stars": 303
  },
  {
    "id": "mcp-server-cli-mcp-server",
    "name": "mcp-server-mladensu-cli",
    "description": "Command line interface with secure execution and customizable security policies.",
    "links": {
      "application": "https://github.com/MladenSU/cli-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "automation",
      "web",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "cli-mcp-server": {
            "command": "uvx",
            "args": [
              "cli-mcp-server"
            ],
            "env": {
              "ALLOWED_DIR": "</your/desired/dir>",
              "ALLOWED_COMMANDS": "ls,cat,pwd,echo",
              "ALLOWED_FLAGS": "-l,-a,--help,--version",
              "MAX_COMMAND_LENGTH": "1024",
              "COMMAND_TIMEOUT": "30",
              "ALLOW_SHELL_OPERATORS": "false"
            }
          }
        }
      }
    ],
    "stars": 77
  },
  {
    "id": "mcp-server-clickhouse",
    "name": "mcp-server-unknown-clickhouse",
    "description": "Query your ClickHouse database server.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research",
      "development",
      "database"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "clickhouse": {
            "command": "npx",
            "args": [
              "-y",
              "clickhouse-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-climatiq-mcp-server",
    "name": "mcp-server-climatiq",
    "description": "A Model Context Protocol (MCP) server for accessing the Climatiq API to calculate carbon emissions. This allows AI assistants to perform real-time carbon calculations and provide climate impact insights.",
    "links": {
      "application": "https://github.com/jagan-shanmugam/climatiq-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "development",
      "database"
    ],
    "provider": "source",
    "mcpServers": {
      "mcpServers": {
        "climatiq-mcp-server": {
          "command": "climatiq-mcp-server",
          "env": {
            "CLIMATIQ_API_KEY": "your_climatiq_api_key"
          }
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "climatiq-mcp-server": {
            "command": "climatiq-mcp-server",
            "env": {
              "CLIMATIQ_API_KEY": "your_climatiq_api_key"
            }
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-cloudflare",
    "name": "mcp-server-cloudflare",
    "description": "Deploy, configure & interrogate your resources on the Cloudflare developer platform (e.g. Workers/KV/R2/D1).",
    "links": {
      "application": "https://github.com/cloudflare/mcp-server-cloudflare"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "cloud",
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "cloudflare": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-server-cloudflare"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-coda",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-coda",
    "description": "MCP server for Coda.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-coda",
      "application": "https://github.com/orellazri/coda-mcp"
    },
    "tags": [
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": false,
    "runtime": "node",
    "version": "1.2.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "9135e75217b21222213c6c2b96e7e854217323de74c56e15237fa9fb13c96503",
      "reason": "Tool names are clear and specific with consistent 'coda_' prefix indicating purpose. Descriptions are brief (1 sentence each) but adequately explain basic functionality. Parameter descriptions are clear and indicate purpose and expected input types. However, descriptions lack context about when to use tools, what they return, limitations, or usage scenarios, requiring users to infer some details about tool behavior and appropriate usage contexts.",
      "score": "C"
    },
    "resources": {
      "tools": 8,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-coda-mcp",
    "name": "mcp-server-coda",
    "description": "MCP server for Coda.",
    "links": {
      "application": "https://github.com/orellazri/coda-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "coda": {
            "command": "npx",
            "args": [
              "-y",
              "coda-mcp@latest"
            ],
            "env": {
              "API_KEY": "...",
              "DOC_ID": "..."
            }
          }
        }
      }
    ],
    "stars": 5
  },
  {
    "id": "mcp-server-codelogic",
    "icon": "https://codelogic.com/wp-content/themes/codelogic/assets/img/favicon.png",
    "name": "mcp-server-codelogic",
    "description": "CodeLogic, provides access to code dependency analytics, risk analysis, and impact assessment.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-codelogic",
      "application": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server"
    },
    "tags": [
      "integration",
      "development",
      "database"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "1.0.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "6ec61b44eda16a1fcf261c99322fe3335be654e0df27882bb1d15481073e02af",
      "reason": "Tool names are clear and specific, indicating their exact purpose (method impact analysis vs database impact analysis). Descriptions are comprehensive, explaining functionality, recommended workflows, and when to use each tool. Parameter descriptions are detailed with clear purposes, types, and constraints (enum values for entity_type). The documentation proactively addresses usage scenarios and provides step-by-step guidance.",
      "score": "A"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-codelogic-mcp-server",
    "name": "mcp-server-codelogic",
    "description": "Official MCP server for CodeLogic, providing access to code dependency analytics, architectural risk analysis, and impact assessment tools.",
    "links": {
      "application": "https://github.com/CodeLogicIncEngineering/codelogic-mcp-server"
    },
    "official": true,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "development",
      "database"
    ],
    "provider": "source",
    "mcpServers": {
      "mcpServers": {
        "codelogic-mcp-server": {
          "command": "uvx",
          "args": [
            "codelogic-mcp-server@latest"
          ],
          "env": {
            "CODELOGIC_SERVER_HOST": "<url to the server e.g. https://myco.app.codelogic.com>",
            "CODELOGIC_USERNAME": "<my username>",
            "CODELOGIC_PASSWORD": "<my password>",
            "CODELOGIC_WORKSPACE_NAME": "<my workspace>"
          }
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "codelogic-mcp-server": {
            "command": "uvx",
            "args": [
              "codelogic-mcp-server@latest"
            ],
            "env": {
              "CODELOGIC_SERVER_HOST": "<url to the server e.g. https://myco.app.codelogic.com>",
              "CODELOGIC_USERNAME": "<my username>",
              "CODELOGIC_PASSWORD": "<my password>",
              "CODELOGIC_WORKSPACE_NAME": "<my workspace>",
              "CODELOGIC_DEBUG_MODE": "true"
            }
          }
        }
      }
    ],
    "stars": 9
  },
  {
    "id": "mcp-server-codemcp",
    "name": "mcp-server-codemcp",
    "description": "Coding agent with basic read, write and command line tools.",
    "links": {
      "application": "https://github.com/ezyang/codemcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "codemcp": {
            "command": "/Users/<username>/.local/bin/uvx",
            "args": [
              "--from",
              "git+https://github.com/ezyang/codemcp@prod",
              "codemcp"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "codemcp": {
            "command": "python",
            "args": [
              "-m",
              "codemcp"
            ]
          }
        }
      }
    ],
    "stars": 1210
  },
  {
    "id": "mcp-server-codex",
    "icon": "https://avatars.githubusercontent.com/u/175457154?s=200&v=4",
    "name": "mcp-server-codex",
    "description": "Codex API integration for real-time enriched blockchain and market data on 60+ networks.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-codex",
      "application": "https://github.com/Codex-Data/codex-mcp"
    },
    "tags": [
      "integration",
      "finance",
      "database",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "30e398e8fb04885fef01049793c974e7c0a29ccf921b8566200a79b1e361e56f",
      "reason": "Tool names are clear and consistently structured, indicating purpose well. Most descriptions are concise (1-2 sentences) and explain core functionality adequately. Parameter descriptions are generally clear with good type information and constraints. However, descriptions could be more comprehensive - they lack guidance on when to use tools, what information is vs isn't provided, and important limitations. Some tools like 'filter_tokens' have very brief descriptions despite complex schemas. The extensive use of JSON Schema references shows good structure but some parameter descriptions rely heavily on references rather than standalone clarity.",
      "score": "B"
    },
    "resources": {
      "tools": 25,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-codex-mcp",
    "name": "mcp-server-codex",
    "description": "Codex API integration for real-time enriched blockchain and market data on 60+ networks.",
    "links": {
      "application": "https://github.com/Codex-Data/codex-mcp"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "database",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "codex-data": {
            "command": "npx",
            "args": [
              "-y",
              "@codex-data/codex-mcp"
            ],
            "env": {
              "CODEX_API_KEY": "<your-codex-api-key>"
            }
          }
        }
      }
    ],
    "stars": 6
  },
  {
    "id": "mcp-server-cognee-mcp",
    "name": "mcp-server-cognee",
    "description": "Memory manager for AI apps and Agents using various graph and vector stores and allowing ingestion from 30+ data sources.",
    "links": {
      "application": "https://github.com/topoteretes/cognee/tree/dev/cognee-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "web",
      "integration",
      "database",
      "research"
    ],
    "provider": "source",
    "config": [],
    "stars": 2063
  },
  {
    "id": "mcp-server-coin-mcp-server",
    "name": "mcp-server-coin",
    "description": "Bitget API to fetch cryptocurrency price.",
    "links": {
      "application": "https://github.com/pwh-pwh/coin-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "coin-mcp": {
            "command": "deno",
            "args": [
              "run",
              "--allow-net",
              "--allow-read",
              "--allow-env",
              "https://deno.land/x/coin_mcp_server/main.ts"
            ]
          }
        }
      }
    ],
    "stars": 19
  },
  {
    "id": "mcp-server-coincap",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-coincap",
    "description": "Real-time cryptocurrency market data integration using CoinCap's public API.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-coincap",
      "application": "https://github.com/QuantGeekDev/coincap-mcp"
    },
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.9.3",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "b9971edf9e11ce9ecb326f0db6f9d04c4379cace5c0dfed18ae3f6c8184e92ac",
      "reason": "Tool names are clear but descriptions are minimal (5-6 words each) providing insufficient context about functionality, limitations, or usage scenarios. The bitcoin_price tool lacks any parameters despite likely needing configuration options, and parameter descriptions are basic without explaining constraints or expected formats.",
      "score": "D"
    },
    "resources": {
      "tools": 3,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-coincap-mcp",
    "name": "mcp-server-coincap",
    "description": "Real-time cryptocurrency market data integration using CoinCap's public API, providing access to crypto prices and market information without API keys.",
    "links": {
      "application": "https://github.com/QuantGeekDev/coincap-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mongodb": {
            "command": "npx",
            "args": [
              "coincap-mcp"
            ]
          }
        }
      }
    ],
    "stars": 65
  },
  {
    "id": "mcp-server-coinmarket-mcp-server",
    "name": "mcp-server-coinmarket",
    "description": "Coinmarket API integration to fetch cryptocurrency listings and quotes.",
    "links": {
      "application": "https://github.com/anjor/coinmarket-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "coinmarket_service": {
            "command": "uv",
            "args": [
              "--directory",
              "/Users/anjor/repos/anjor/coinmarket_service",
              "run",
              "coinmarket_service"
            ],
            "env": {
              "COINMARKET_API_KEY": "YOUR_VALUE"
            }
          }
        }
      }
    ],
    "stars": 31
  },
  {
    "id": "mcp-server-cointelegraph-mcp",
    "name": "mcp-server-cointelegraph",
    "description": "Providing real-time access to the latest news from Cointelegraph.",
    "links": {
      "application": "https://github.com/kukapay/cointelegraph-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "web",
      "finance",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 0
  },
  {
    "id": "mcp-server-comet-opik",
    "name": "mcp-server-comet-opik",
    "description": "Query and analyze your Opik logs, traces, prompts and all other telemetry data from your LLMs in natural language.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "monitoring",
      "research",
      "translation"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "comet-opik": {
            "command": "npx",
            "args": [
              "-y",
              "opik-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-commands",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-commands",
    "description": "Run any command with `run_command` and `run_script` tools.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-commands",
      "application": "https://github.com/g0t4/mcp-server-commands"
    },
    "tags": [
      "development",
      "automation"
    ],
    "official": false,
    "scope": "standalone",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.5.0",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "c4b5cff78ae412ee2d0f5a35fcb3f60b6c111e6892aff7c9170bea56cdb0039c",
      "reason": "Tool name clearly indicates purpose. Description is brief but adequately explains functionality. Parameter descriptions are clear and helpful, especially the stdin parameter with good examples. However, the main description lacks important details about security considerations, command output handling, and usage limitations that would be expected for a system command execution tool.",
      "score": "C"
    },
    "resources": {
      "tools": 1,
      "prompts": 1,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-confluence-mcp-server",
    "name": "mcp-server-confluence",
    "description": "Get Confluence data via CQL and read pages.",
    "links": {
      "application": "https://github.com/KS-GEN-AI/confluence-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "web",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "Confluence communication server": {
            "command": "node",
            "args": [
              "/PATH_TO_THE_PROJECT/build/index.js"
            ],
            "env": {
              "CONFLUENCE_URL": "https://XXXXXXXX.atlassian.net/wiki",
              "CONFLUENCE_API_MAIL": "Your email",
              "CONFLUENCE_API_KEY": "KEY_FROM: https://id.atlassian.com/manage-profile/security/api-tokens"
            }
          }
        }
      }
    ],
    "stars": 9
  },
  {
    "id": "mcp-server-contentful",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-contentful",
    "description": "Update, create, delete content, content-models and assets in your Contentful Space.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-contentful",
      "application": "https://github.com/ivo-toby/contentful-mcp"
    },
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.16.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "b677f50cbc5926b3c92fd2f123831fdac21d54497c661782d22a2d0415de9dbf",
      "reason": "Tool names are clear and intuitive, indicating their Contentful-specific purposes well. Most descriptions adequately explain functionality and usage context, with some providing excellent detail (like create_entry and update_entry with locale requirements). However, many tools have minimal descriptions that lack comprehensive guidance on when to use them or important limitations. Parameter descriptions are generally clear with good use of constraints and defaults, though some could benefit from more detailed explanations of their purpose and impact on tool behavior.",
      "score": "B"
    },
    "resources": {
      "tools": 35,
      "prompts": 14,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-contentful-mcp",
    "name": "mcp-server-contentful",
    "description": "Update, create, delete content, content-models and assets in your Contentful Space.",
    "links": {
      "application": "https://github.com/ivo-toby/contentful-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "contentful": {
            "command": "npx",
            "args": [
              "-y",
              "@ivotoby/contentful-management-mcp-server"
            ],
            "env": {
              "CONTENTFUL_MANAGEMENT_ACCESS_TOKEN": "<Your CMA token>"
            }
          }
        }
      }
    ],
    "stars": 30
  },
  {
    "id": "mcp-server-context-7",
    "icon": "https://avatars.githubusercontent.com/u/74989412?s=200&v=4",
    "name": "mcp-server-context-7",
    "description": "Context7 MCP - Up-to-date Docs For Any Cursor Prompt.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-context-7",
      "application": "https://github.com/upstash/context7#readme"
    },
    "tags": [
      "development",
      "research",
      "integration"
    ],
    "official": true,
    "scope": "standalone",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.12",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "babc51d91a9965b5078e3c119f857456f8b920be2dc5f9b3c7c56087a1deb940",
      "reason": "Tool names are clear and specific, indicating their purpose effectively. Descriptions are comprehensive and detailed, explaining not only what each tool does but also when and how to use them, including important workflow requirements and selection criteria. Parameter descriptions are complete with clear explanations of purpose, format requirements, and constraints. The documentation proactively addresses the relationship between tools and provides thorough guidance for proper usage.",
      "score": "A"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-convex",
    "name": "mcp-server-unknown-unknown-convex",
    "description": "Introspect and query your apps deployed to Convex.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "convex": {
            "command": "npx",
            "args": [
              "-y",
              "convex-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-convex-mcp-server",
    "name": "mcp-server-unknown-unknown-convex",
    "description": "Convex database integration to introspect tables, functions, and run oneoff queries (Source).",
    "links": {
      "application": "https://stack.convex.dev/convex-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "database",
      "web",
      "integration",
      "storage",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": []
  },
  {
    "id": "mcp-server-couchbase",
    "icon": "https://avatars.githubusercontent.com/u/605755?s=200&v=4",
    "name": "mcp-server-couchbase",
    "description": "Interact with the data stored in Couchbase clusters using natural language.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-couchbase",
      "application": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase"
    },
    "tags": [
      "translation"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.3.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "2b1c669fa6b74a709f2aeffaf24ec7e6441fe8d062105ea8540ddbd69e83c394",
      "reason": "Tool names are clear and specific, indicating their database operations well. Descriptions provide basic functionality but lack important context like usage scenarios, limitations, or error conditions. Parameter documentation is minimal with only generic titles like 'Collection Name' and 'Document Id' without explaining their purpose or format requirements. The toolset covers essential Couchbase operations but needs more comprehensive documentation to guide proper usage.",
      "score": "C"
    },
    "resources": {
      "tools": 6,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-cric-wuye-ai",
    "name": "mcp-server-cric-wuye-ai",
    "description": "Interact with capabilities of the CRIC Wuye AI platform, an intelligent assistant specifically for the property management industry.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "cric-wuye-ai": {
            "command": "npx",
            "args": [
              "-y",
              "cricwuye-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-crypto-feargreed-mcp",
    "name": "mcp-server-crypto-feargreed",
    "description": "Providing real-time and historical Crypto Fear & Greed Index data.",
    "links": {
      "application": "https://github.com/kukapay/crypto-feargreed-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "crypto-feargreed-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "/your/path/to/crypto-feargreed-mcp",
              "run",
              "main.py"
            ]
          }
        }
      }
    ],
    "stars": 19
  },
  {
    "id": "mcp-server-crypto-indicators-mcp",
    "name": "mcp-server-crypto-indicators",
    "description": "An MCP server providing a range of cryptocurrency technical analysis indicators and strategie.",
    "links": {
      "application": "https://github.com/kukapay/crypto-indicators-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "crypto-indicators-mcp": {
            "command": "node",
            "args": [
              "path/to/crypto-indicators-mcp/index.js"
            ],
            "env": {
              "EXCHANGE_NAME": "binance"
            }
          }
        }
      }
    ],
    "stars": 17
  },
  {
    "id": "mcp-server-crypto-news-mcp",
    "name": "mcp-server-crypto-news",
    "description": "An MCP server that provides real-time cryptocurrency news sourced from NewsData for AI agents.",
    "links": {
      "application": "https://github.com/kukapay/crypto-news-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "Crypto News": {
            "command": "python",
            "args": [
              "path/to/crypto-news-mcp/main.py"
            ],
            "env": {
              "NEWS_API_KEY": "your_newsdata_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 3
  },
  {
    "id": "mcp-server-crypto-portfolio-mcp",
    "name": "mcp-server-crypto-portfolio",
    "description": "An MCP server for tracking and managing cryptocurrency portfolio allocations.",
    "links": {
      "application": "https://github.com/kukapay/crypto-portfolio-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "finance",
      "development",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "crypto-portfolio-mcp": {
            "command": "python",
            "args": [
              "path/to/crypto-portfolio-mcp/main.py"
            ]
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-crypto-rss-mcp",
    "name": "mcp-server-crypto-rss",
    "description": "An MCP server that aggregates real-time cryptocurrency news from multiple RSS feeds.",
    "links": {
      "application": "https://github.com/kukapay/crypto-rss-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "development",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "Crypto RSS Reader": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/crypto-rss-mcp",
              "run",
              "crypto-rss-mcp"
            ]
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-crypto-sentiment-mcp",
    "name": "mcp-server-crypto-sentiment",
    "description": "An MCP server that delivers cryptocurrency sentiment analysis to AI agents.",
    "links": {
      "application": "https://github.com/kukapay/crypto-sentiment-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "crypto-sentiment-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "path/to/crypto-sentiment-mcp",
              "run",
              "main.py"
            ],
            "env": {
              "SANTIMENT_API_KEY": "your_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 10
  },
  {
    "id": "mcp-server-crypto-trending-mcp",
    "name": "mcp-server-crypto-trending",
    "description": "Tracking the latest trending tokens on CoinGecko.",
    "links": {
      "application": "https://github.com/kukapay/crypto-trending-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "web",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "crypto-trending": {
            "command": "uv",
            "args": [
              "--directory",
              "/absolute/path/to/crypto-trending-mcp",
              "run",
              "main.py"
            ]
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-crypto-whitepapers-mcp",
    "name": "mcp-server-crypto-whitepapers",
    "description": "Serving as a structured knowledge base of crypto whitepapers.",
    "links": {
      "application": "https://github.com/kukapay/crypto-whitepapers-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "crypto-whitepapers": {
            "command": "uv",
            "args": [
              "--directory",
              "/absolute/path/to/crypto-whitepapers-mcprun",
              "crypto-whitepapers-mcp"
            ]
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-cryptopanic-mcp-server",
    "name": "mcp-server-cryptopanic",
    "description": "Providing latest cryptocurrency news to AI agents, powered by CryptoPanic.",
    "links": {
      "application": "https://github.com/kukapay/cryptopanic-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "cryptopanic-mcp-server": {
            "command": "uv",
            "args": [
              "--directory",
              "/your/path/to/cryptopanic-mcp-server",
              "run",
              "main.py"
            ],
            "env": {
              "CRYPTOPANIC_API_KEY": ""
            }
          }
        }
      }
    ],
    "stars": 27
  },
  {
    "id": "mcp-server-cua",
    "name": "mcp-server-cua",
    "description": "MCP server for the Computer-Use Agent (CUA), allowing you to run CUA through Claude Desktop or other MCP clients.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "cua": {
            "command": "npx",
            "args": [
              "-y",
              "cua-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-currents",
    "name": "mcp-server-currents",
    "description": "Enable AI Agents to fix Playwright test failures reported to Currents.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "currents": {
            "command": "npx",
            "args": [
              "-y",
              "currents-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-cve-search_mcp",
    "name": "mcp-server-cve-search_mcp",
    "description": "A Model Context Protocol (MCP) server for querying the CVE-Search API. This server provides comprehensive access to CVE-Search, browse vendor and productget CVE per CVE-IDget the last updated CVEs.",
    "links": {
      "application": "https://github.com/roadwy/cve-search_mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "security",
      "integration",
      "research"
    ],
    "provider": "source",
    "config": [],
    "stars": 14
  },
  {
    "id": "mcp-server-cyberchef-api-mcp-server",
    "name": "mcp-server-cyberchef-api",
    "description": "MCP server for interacting with the CyberChef server API which will allow an MCP client to utilise the CyberChef operations.",
    "links": {
      "application": "https://github.com/slouchd/cyberchef-api-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "security",
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "CyberChef API MCP Server": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "mcp[cli]",
              "--directory",
              "cyberchef-api-mcp-server/cyberchef_api_mcp_server/",
              "mcp",
              "run",
              "server.py"
            ],
            "env": {
              "CYBERCHEF_API_URL": "your-cyberchef-api-url"
            }
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-dappier",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/dappier/live/logo-1744879375857.png",
    "name": "mcp-server-dappier",
    "description": "Real-time web search and access to premium media data.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-dappier",
      "application": "https://github.com/dappierai/dappier-mcp"
    },
    "tags": [
      "web",
      "research",
      "finance"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.3.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "46ba82ebda67426d8f7040ec189ee3edad3047c72df4deeecbf8a896d4ec72be",
      "reason": "Both tools have excellent documentation quality. Tool names clearly indicate purpose ('real_time_search' and 'ai_recommendations'). Descriptions are comprehensive, explaining functionality, when to use each tool, and what they return. All parameters have detailed descriptions with clear guidance on usage, including enumerated values with explanations for model/algorithm selection. The documentation proactively addresses user scenarios and provides complete context for proper tool usage.",
      "score": "A"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-dart",
    "icon": "http://app.itsdart.com/static/img/favicon.png",
    "name": "mcp-server-dart",
    "description": "AI-powered project management server for task and document management.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-dart",
      "application": "https://github.com/its-dart/dart-mcp-server"
    },
    "tags": [
      "research",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.14",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "f317a10e6a3d91f1bd47f233f56a5463dbadafc8a726148d65032b13c195156e",
      "reason": "Tool names are clear and intuitive, indicating their purpose well. Descriptions adequately explain functionality and when to use each tool, though some could be more comprehensive. Parameter descriptions are generally clear and complete, with good use of constraints like regex patterns for IDs. The toolset provides solid documentation that would enable effective usage, with only minor gaps in detail that prevent it from reaching the highest grade.",
      "score": "B"
    },
    "resources": {
      "tools": 12,
      "prompts": 3,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-data-exploration",
    "name": "mcp-server-data-exploration",
    "description": "Enables autonomous data exploration on .csv-based datasets, providing intelligent insights with minimal effort.",
    "links": {
      "application": "https://github.com/reading-plus-ai/mcp-server-data-exploration"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [],
    "provider": "source",
    "mcpServers": {
      "mcpServers": {
        "mcp-server-ds": {
          "command": "uv",
          "args": [
            "--directory",
            "/Users/username/src/mcp-server-ds",
            "run",
            "mcp-server-ds"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "mcp-server-ds": {
            "command": "uv",
            "args": [
              "--directory",
              "/Users/username/src/mcp-server-ds",
              "run",
              "mcp-server-ds"
            ]
          }
        }
      }
    ],
    "stars": 312
  },
  {
    "id": "mcp-server-databricks-genie-MCP",
    "name": "mcp-server-databricks-genie",
    "description": "A server that connects to the Databricks Genie API, allowing LLMs to ask natural language questions, run SQL queries, and interact with Databricks conversational agents.",
    "links": {
      "application": "https://github.com/yashshingvi/databricks-genie-MCP"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "database"
    ],
    "provider": "npx",
    "config": [],
    "stars": 0
  },
  {
    "id": "mcp-server-dataworks",
    "name": "mcp-server-dataworks",
    "description": "A Model Context Protocol (MCP) server that provides tools for AI, allowing it to interact with the DataWorks Open API through a standardized interface. This implementation is based on the Aliyun Open API and enables AI agents to perform cloud resources operations seamlessly.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "cloud",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "dataworks": {
            "command": "npx",
            "args": [
              "-y",
              "dataworks-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-davinci-resolve-mcp",
    "name": "mcp-server-davinci-resolve",
    "description": "MCP server integration for DaVinci Resolve providing powerful tools for video editing, color grading, media management, and project control.",
    "links": {
      "application": "https://github.com/samuelgursky/davinci-resolve-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "source",
    "stars": 151,
    "config": [
      {
        "mcpServers": {
          "davinci-resolve": {
            "name": "DaVinci Resolve MCP",
            "command": "/path/to/your/venv/bin/python",
            "args": [
              "/path/to/your/davinci-resolve-mcp/src/main.py"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "davinci-resolve": {
            "name": "DaVinci Resolve MCP",
            "command": "C:\\path\\to\\venv\\Scripts\\python.exe",
            "args": [
              "C:\\path\\to\\davinci-resolve-mcp\\src\\main.py"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "davinci-resolve": {
            "name": "DaVinci Resolve MCP",
            "command": "/path/to/your/venv/bin/python",
            "args": [
              "/path/to/your/davinci-resolve-mcp/src/main.py"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-dbt",
    "name": "mcp-server-unknown-dbt",
    "description": "Official MCP server for dbt (data build tool) providing integration with dbt Core/Cloud CLI, project metadata discovery, model information, and semantic layer querying capabilities.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research",
      "development",
      "cloud"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "dbt": {
            "command": "npx",
            "args": [
              "-y",
              "dbt-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-dbt-mcp",
    "name": "mcp-server-dbt",
    "description": "Official MCP server for dbt (data build tool) providing integration with dbt Core/Cloud CLI, project metadata discovery, model information, and semantic layer querying capabilities.",
    "links": {
      "application": "https://github.com/dbt-labs/dbt-mcp"
    },
    "official": true,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "development",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "dbt-mcp": {
            "command": "/Users/YOUR_VALUE/.dbt-mcp/.venv/bin/mcp",
            "args": [
              "run",
              "/Users/YOUR_VALUE/.dbt-mcp/.venv/lib/python3.12/site-packages/dbt_mcp/main.py"
            ],
            "env": {}
          }
        }
      }
    ],
    "stars": 154
  },
  {
    "id": "mcp-server-dealx",
    "name": "mcp-server-dealx",
    "description": "MCP Server for DealX platform.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "dealx": {
            "command": "npx",
            "args": [
              "-y",
              "dealx-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-deep-research",
    "name": "mcp-server-deep-research",
    "description": "MCP server providing OpenAI/Perplexity-like autonomous deep research, structured query elaboration, and concise reporting.",
    "links": {
      "application": "https://github.com/reading-plus-ai/mcp-server-deep-research"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research"
    ],
    "provider": "source",
    "mcpServers": {
      "mcpServers": {
        "mcp-server-deep-research": {
          "command": "uv",
          "args": [
            "--directory",
            "/Users/username/repos/mcp-server-application/mcp-server-deep-research",
            "run",
            "mcp-server-deep-research"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "mcp-server-deep-research": {
            "command": "uv",
            "args": [
              "--directory",
              "/Users/username/repos/mcp-server-application/mcp-server-deep-research",
              "run",
              "mcp-server-deep-research"
            ]
          }
        }
      }
    ],
    "stars": 54
  },
  {
    "id": "mcp-server-defi-yields-mcp",
    "name": "mcp-server-defi-yields",
    "description": "An MCP server for AI agents to explore DeFi yield opportunities.",
    "links": {
      "application": "https://github.com/kukapay/defi-yields-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "defi-yields-mcp": {
            "command": "uvx",
            "args": [
              "defi-yields-mcp"
            ]
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-desktop-commander",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/desktop-commander/live/logo-1744790813733.png",
    "name": "mcp-server-desktop-commander",
    "description": "A swiss-army-knife that can manage/execute programs and read/write/search/edit code and text files.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-desktop-commander",
      "application": "https://github.com/wonderwhy-er/DesktopCommanderMCP"
    },
    "tags": [
      "integration",
      "development",
      "research"
    ],
    "official": false,
    "scope": "native",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.2.2",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "05e647e0fc1e67ef2a1f7acb79e1662d3fe56da9f243945e322bfaefb8ce442f",
      "reason": "Tool names are highly specific and intuitive, clearly indicating purpose. Descriptions are comprehensive, explaining functionality, when to use tools, limitations, and important warnings. Most parameters have clear descriptions of purpose and expected values. Strong documentation includes practical guidance, security warnings, and cross-references between tools. Minor gaps include some parameters lacking detailed descriptions (e.g., 'timeoutMs', 'shell' parameter purposes), and a few overly verbose descriptions could be more concise while maintaining clarity.",
      "score": "B"
    },
    "resources": {
      "tools": 18,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-dev-mcp",
    "name": "mcp-server-dev",
    "description": "Model Context Protocol (MCP) server that interacts with Shopify Dev.",
    "links": {
      "application": "https://github.com/Shopify/dev-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "shopify-dev-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "@shopify/dev-mcp@latest"
            ]
          }
        }
      }
    ],
    "stars": 200
  },
  {
    "id": "mcp-server-devhub",
    "icon": "https://www.devhub.com/img/upload/favicon-196x196-dh.png",
    "name": "mcp-server-devhub",
    "description": "Manage content and operations in DevHub CMS using MCP.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-devhub",
      "application": "https://github.com/devhub/devhub-cms-mcp"
    },
    "tags": [
      "automation",
      "web",
      "research"
    ],
    "official": true,
    "scope": "native",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.3.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "b6f6c8ad0cdd10a3cf39532afb3fed7de95807e0079bd7867a432e09047c05e5",
      "reason": "Tool names are clear and purpose-specific. Most descriptions adequately explain functionality with 2-3 sentences and provide context about when to use each tool. Parameter descriptions are generally clear about purpose and expected input types. Some tools like get_hours_of_operation and update_hours provide excellent detail with examples, while others like get_blog_post are more minimal but still adequate. A few parameters lack complete descriptions (e.g., hours_type enum values, new_hours structure details), preventing an A grade.",
      "score": "B"
    },
    "resources": {
      "tools": 10,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-dexpaprika",
    "name": "mcp-server-dexpaprika",
    "description": "Access real-time DEX analytics across 20+ blockchains with DexPaprika API, tracking 5M+ tokens, pools, volumes, and historical market data. Built by CoinPaprika.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "finance",
      "marketing",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "dexpaprika": {
            "command": "npx",
            "args": [
              "-y",
              "dexpaprika-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-dicom-mcp",
    "name": "mcp-server-dicom",
    "description": "DICOM integration to query, read, and move medical images and reports from PACS and other DICOM compliant systems.",
    "links": {
      "application": "https://github.com/ChristianHinge/dicom-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "cloud",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "dicom": {
            "command": "uv",
            "args": [
              "tool",
              "dicom-mcp",
              "/path/to/your_config.yaml"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "arxiv-mcp-server": {
            "command": "uv",
            "args": [
              "--directory",
              "path/to/cloned/dicom-mcp",
              "run",
              "dicom-mcp",
              "/path/to/your_config.yaml"
            ]
          }
        }
      }
    ],
    "stars": 28
  },
  {
    "id": "mcp-server-didlogic_mcp",
    "name": "mcp-server-didlogic_mcp",
    "description": "An MCP server for DIDLogic. Adds functionality to manage SIP endpoints, numbers and destinations.",
    "links": {
      "application": "https://github.com/UserAd/didlogic_mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "communication"
    ],
    "provider": "source",
    "mcpServers": {
      "mcpServers": {
        "didlogic": {
          "command": "uvx",
          "args": [
            "didlogic_mcp"
          ],
          "env": {
            "DIDLOGIC_API_KEY": "YOUR_DIDLOGIC_KEY"
          }
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "didlogic": {
            "command": "uvx",
            "args": [
              "didlogic_mcp"
            ],
            "env": {
              "DIDLOGIC_API_KEY": "YOUR_DIDLOGIC_KEY"
            }
          }
        }
      }
    ],
    "stars": 1
  },
  {
    "id": "mcp-server-discogs-mcp-server",
    "name": "mcp-server-discogs",
    "description": "MCP server to interact with the Discogs API.",
    "links": {
      "application": "https://github.com/cswkim/discogs-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "web",
      "integration",
      "cloud"
    ],
    "provider": "npx",
    "stars": 9,
    "config": [
      {
        "mcpServers": {
          "discogs": {
            "command": "npx",
            "args": [
              "-y",
              "discogs-mcp-server"
            ],
            "env": {
              "DISCOGS_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-docker",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-docker",
    "description": "Integrate with Docker to manage containers, images, volumes, and networks.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-docker",
      "application": "https://github.com/ckreiling/mcp-server-docker"
    },
    "tags": [
      "integration",
      "development",
      "cloud"
    ],
    "official": false,
    "scope": "native",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.2.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "ec78d2739c5353311b6780c8e0753a3cc09f08b27cf85ff90931c879db2ff754",
      "reason": "Tool names are clear and Docker-specific, adequately indicating their functionality. Most descriptions are brief but functional, clearly stating what each tool does. However, many descriptions lack guidance on when to use tools or important limitations. Parameter descriptions are generally adequate with clear purposes, though some could benefit from more detail about constraints and usage patterns. The toolset provides basic usability but leaves some user questions unanswered, particularly around Docker-specific nuances and best practices.",
      "score": "C"
    },
    "resources": {
      "tools": 19,
      "prompts": 1,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-docker-mcp",
    "name": "mcp-server-quantgeekdev-docker",
    "description": "Docker container management and operations through MCP.",
    "links": {
      "application": "https://github.com/QuantGeekDev/docker-mcp"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "cloud",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "docker-mcp": {
            "command": "uvx",
            "args": [
              "docker-mcp"
            ]
          }
        }
      }
    ],
    "stars": 256
  },
  {
    "id": "mcp-server-doit",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/doit/live/logo-1744869144771.png",
    "name": "mcp-server-doit",
    "description": "Access DoiT API for analyzing cloud data and troubleshooting.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-doit",
      "application": "https://github.com/doitintl/doit-mcp-server"
    },
    "tags": [
      "research",
      "cloud",
      "web"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.33",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "f1d919f5d09a2b26d9d7d2f1991861ac72990298df9725b0688688a42179e5c0",
      "reason": "Most tool names are adequately descriptive, but descriptions are consistently brief and lack crucial detail about functionality, limitations, and when to use each tool. Many parameter descriptions are minimal (e.g., 'incident ID', 'anomaly ID') without explaining their purpose or expected format. The 'run_query' tool has extensive schema documentation but a confusing description that relies heavily on examples rather than clear explanation of core functionality.",
      "score": "D"
    },
    "resources": {
      "tools": 14,
      "prompts": 10,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-dolphindb-mcp-server",
    "name": "mcp-server-dolphindb",
    "description": "TDolphinDB database integration with schema inspection and query capabilities.",
    "links": {
      "application": "https://github.com/tradercjz/dolphindb-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database"
    ],
    "provider": "source",
    "config": [],
    "stars": 2
  },
  {
    "id": "mcp-server-domain-lookup-mcp",
    "name": "mcp-server-domain-lookup",
    "description": "Domain name lookup service, first via RDAP and then as a fallback via WHOIS.",
    "links": {
      "application": "https://github.com/dotemacs/domain-lookup-mcp"
    },
    "official": false,
    "runtime": "binary",
    "scope": "unknown",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 0
  },
  {
    "id": "mcp-server-droidmind",
    "name": "mcp-server-droidmind",
    "description": "Control Android devices with AI through MCP, enabling device control, debugging, system analysis, and UI automation with a comprehensive security framework.",
    "links": {
      "application": "https://github.com/hyperb1iss/droidmind"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "storage",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 123
  },
  {
    "id": "mcp-server-duckdb",
    "name": "mcp-server-duckdb",
    "description": "DuckDB database integration with schema inspection and query capabilities.",
    "links": {
      "application": "https://github.com/ktanaka101/mcp-server-duckdb"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "web",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "duckdb": {
            "command": "uvx",
            "args": [
              "mcp-server-duckdb",
              "--db-path",
              "~/mcp-server-duckdb/data/data.db"
            ]
          }
        }
      }
    ],
    "stars": 102
  },
  {
    "id": "mcp-server-duckduckgo",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/duckduckgo/live/logo-1745330531634.png",
    "name": "mcp-server-duckduckgo",
    "description": "Provides web search and content fetching using DuckDuckGo.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-duckduckgo",
      "application": "https://github.com/nickclyde/duckduckgo-mcp-server"
    },
    "tags": [
      "web",
      "research",
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.1.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "bc867e06b4c29a68dfd0bdfb62d85eaf1bcb4133c8ef516c7890e860dff6af5e",
      "reason": "Tool names are clear and indicate purpose well. Descriptions briefly outline main functionality but lack important details like what 'formatted results' means for search, what content formats are supported for fetch_content, when to use each tool, and any limitations. Parameter descriptions are minimal with only basic titles, missing explanations of expected formats or constraints.",
      "score": "C"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-duckduckgo-mcp-server",
    "name": "mcp-server-duckduckgo",
    "description": "Web search using DuckDuckGo.",
    "links": {
      "application": "https://github.com/nickclyde/duckduckgo-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "ddg-search": {
            "command": "uvx",
            "args": [
              "duckduckgo-mcp-server"
            ]
          }
        }
      }
    ],
    "stars": 135
  },
  {
    "id": "mcp-server-duckduckgo-mpc-server",
    "name": "mcp-server-duckduckgo-mpc",
    "description": "This is a TypeScript-based MCP server that provides DuckDuckGo search functionality.",
    "links": {
      "application": "https://github.com/zhsama/duckduckgo-mpc-server/"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "research",
      "integration"
    ],
    "provider": "npx",
    "config": [],
    "stars": 33
  },
  {
    "id": "mcp-server-dumplingai",
    "name": "mcp-server-dumplingai",
    "description": "Access data, web scraping, and document conversion APIs by Dumpling AI.",
    "links": {
      "application": "https://github.com/Dumpling-AI/mcp-server-dumplingai"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "integration",
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "dumplingai": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-server-dumplingai"
            ],
            "env": {
              "DUMPLING_API_KEY": "YOUR_VALUE"
            }
          }
        }
      }
    ],
    "stars": 5
  },
  {
    "id": "mcp-server-dune-analytics-mcp",
    "name": "mcp-server-dune-analytics",
    "description": "An MCP server that bridges Dune Analytics data to AI agents.",
    "links": {
      "application": "https://github.com/kukapay/dune-analytics-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [],
    "stars": 14
  },
  {
    "id": "mcp-server-e2b",
    "icon": "https://e2b.dev/favicon.ico",
    "name": "mcp-server-e2b",
    "description": "Adds code interpreting capabilities to the Claude Desktop app.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-e2b",
      "application": "https://github.com/e2b-dev/mcp-server"
    },
    "tags": [
      "automation",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.2.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "90a552bfe6c3f643bf7316f9acafd0c51d4cafd44194d5f90c2d25355ea9eb90",
      "reason": "Tool name is clear but the description is minimal (one sentence) and lacks important details about when to use it, what outputs to expect, or limitations. The 'code' parameter has no description whatsoever, leaving users to guess what type of Python code is acceptable or how it should be formatted.",
      "score": "D"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-edgeone-pages-mcp",
    "name": "mcp-server-edgeone-pages",
    "description": "An MCP service for deploying HTML content to EdgeOne Pages and obtaining a publicly accessible URL.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "cloud"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "edgeone-pages-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "edgeone-pages-mcp"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-edubase",
    "name": "mcp-server-edubase",
    "description": "Interact with EduBase, a comprehensive e-learning platform with advanced quizzing, exam management, and content organization capabilities.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "edubase": {
            "command": "npx",
            "args": [
              "-y",
              "edubase-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-elasticsearch",
    "icon": "https://www.elastic.co/favicon.ico",
    "name": "mcp-server-elasticsearch",
    "description": "Connects to Elasticsearch for natural language data queries.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-elasticsearch",
      "application": "https://github.com/elastic/mcp-server-elasticsearch"
    },
    "tags": [
      "database",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "0c98216b510fc637fba98eb6092ee1fd1c4b8662e1dcb2a3d8a69314c89d1aa9",
      "reason": "Tool names are clear and indicate purpose well. Descriptions are brief but adequately explain basic functionality. Parameter descriptions are present and clear about their purpose, with good constraints like minLength. However, descriptions lack detail about when to use each tool, what specific information they return, and important usage context that would help an LLM make informed decisions about tool selection.",
      "score": "C"
    },
    "resources": {
      "tools": 3,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-elasticsearch-mcp-server",
    "name": "mcp-server-elasticsearch",
    "description": "MCP Server implementation that provides Elasticsearch interaction.",
    "links": {
      "application": "https://github.com/cr7258/elasticsearch-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "cloud",
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 123
  },
  {
    "id": "mcp-server-element-fm",
    "name": "mcp-server-element-fm",
    "description": "Create and publish unlimited podcast shows and episodes with ELEMENT.FM.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "elementfm": {
            "command": "npx",
            "args": [
              "-y",
              "elementfm-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-elevenlabs",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/elevenlabs/live/logo-1744878539557.png",
    "name": "mcp-server-elevenlabs",
    "description": "Enables voice synthesis and audio processing via APIs.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-elevenlabs",
      "application": "https://github.com/elevenlabs/elevenlabs-mcp"
    },
    "tags": [
      "integration",
      "communication"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.4.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "68055298e6670c263f5f191436fcb64c8bca1b528117e7ac7d81521b8622256e",
      "reason": "The toolset demonstrates good documentation quality overall. Most tools have clear, descriptive names that indicate their purpose, and the main functionality tools (text_to_speech, speech_to_text, text_to_sound_effects) feature comprehensive descriptions with detailed parameter explanations, ranges, and usage guidance. Cost warnings are consistently included for API-calling tools. However, some simpler tools like list_models, get_voice, and play_audio have minimal descriptions that could be more informative. Parameter descriptions in input schemas are often basic (just titles) rather than detailed explanations, though the main descriptions compensate for this in many cases.",
      "score": "B"
    },
    "resources": {
      "tools": 20,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-esignatures",
    "name": "mcp-server-esignatures",
    "description": "Contract and template management for drafting, reviewing, and sending binding contracts.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "finance"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "esignatures": {
            "command": "npx",
            "args": [
              "-y",
              "esignatures-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-esp-mcp",
    "name": "mcp-server-esp",
    "description": "Workflow for fixing build issues in ESP32 series chips using ESP-IDF.",
    "links": {
      "application": "https://github.com/horw/esp-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "standalone",
    "tags": [],
    "provider": "source",
    "config": [],
    "stars": 15
  },
  {
    "id": "mcp-server-esxi-mcp-server",
    "name": "mcp-server-esxi",
    "description": "A VMware ESXi/vCenter management server based on MCP (Model Control Protocol), providing simple REST API interfaces for virtual machine management.",
    "links": {
      "application": "https://github.com/bright8192/esxi-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration"
    ],
    "provider": "source",
    "stars": 14,
    "config": []
  },
  {
    "id": "mcp-server-etf-flow-mcp",
    "name": "mcp-server-etf-flow",
    "description": "Delivering crypto ETF flow data to power AI agents' decision-making.",
    "links": {
      "application": "https://github.com/kukapay/etf-flow-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "etf-flow-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "/absolute/path/to/etf-flow-mcp",
              "run",
              "etf-flow-mcp"
            ],
            "env": {
              "COINGLASS_API_KEY": "your_coinglass_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-everart",
    "name": "mcp-server-everart",
    "description": "AI image generation using various models.",
    "links": {
      "application": "https://github.com/modelcontextprotocol/servers/tree/main/src/everart"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 976,
    "config": [
      {
        "mcpServers": {
          "everart": {
            "command": "npx",
            "args": [
              "-y",
              "@modelcontextprotocol/server-everart"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-everything",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-everything",
    "description": "MCP server that exercises all the features of the MCP protocol",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-everything",
      "application": "https://modelcontextprotocol.io"
    },
    "tags": [
      "automation",
      "development"
    ],
    "official": false,
    "scope": "standalone",
    "mutitenant": true,
    "runtime": "node",
    "version": "2025.5.12",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "7858108bd191e9d83dcc2c11e0730298b1d4f5594cb70681efaaf9b084b3f8d4",
      "reason": "Tool names are clear but descriptions are overly brief (mostly one sentence fragments). While parameter descriptions exist and indicate basic purpose, the tool descriptions lack context about when to use them, what they return, or their limitations. Most descriptions read like tautological statements rather than informative guidance.",
      "score": "D"
    },
    "resources": {
      "tools": 8,
      "prompts": 3,
      "resources": 100,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-everything-wrong",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-everything-wrong",
    "description": "Show case common MCP server security concerns",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-everything-wrong",
      "application": "https://pypi.org/project/mcp-server-everything-wrong/"
    },
    "tags": [
      "security"
    ],
    "official": false,
    "scope": "native",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.2.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "7a627caad4bcc93383f326102012da65cb531153d11e71556794137426ea3a52",
      "reason": "Multiple tools have malicious instructions embedded in descriptions (shadowing_attack, joke_teller, echo), making them unsafe and misleading. Basic tools like greet, env_var lack any meaningful description of functionality. Parameter descriptions are minimal or missing entirely. The toolset appears designed to demonstrate security vulnerabilities rather than provide legitimate functionality.",
      "score": "F"
    },
    "resources": {
      "tools": 8,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-evm",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-evm",
    "description": "Comprehensive blockchain services for 30+ networks, on native tokens, ERC20, NFTs, smart contracts.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-evm",
      "application": "https://github.com/mcpdotdirect/evm-mcp-server"
    },
    "tags": [
      "integration",
      "finance",
      "database",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.2.0",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "4322faabc4e150b24a6091ec6e3861c5c1115e737c49b2fd39d26a8fcf1bc951",
      "reason": "Tool names are clear and specific, indicating their purposes well. Most descriptions adequately explain functionality with 2-3 sentences covering what the tool does and when to use it. Parameter descriptions are comprehensive with good examples and context. However, some tools like 'get_transaction_receipt' and 'estimate_gas' have minimal descriptions, and there's some redundancy with similar tools (get_erc20_balance vs get_token_balance_erc20, transfer_erc20 vs transfer_token) that could confuse usage scenarios.",
      "score": "B"
    },
    "resources": {
      "tools": 28,
      "prompts": 7,
      "resources": 3,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-evm-mcp-server",
    "name": "mcp-server-evm",
    "description": "Comprehensive blockchain services for 30+ EVM networks, supporting native tokens, ERC20, NFTs, smart contracts, transactions, and ENS resolution.",
    "links": {
      "application": "https://github.com/mcpdotdirect/evm-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "finance",
      "database",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "evm-mcp-server": {
            "command": "npx",
            "args": [
              "-y",
              "@mcpdotdirect/evm-mcp-server"
            ]
          },
          "evm-mcp-http": {
            "command": "npx",
            "args": [
              "-y",
              "@mcpdotdirect/evm-mcp-server",
              "--http"
            ]
          }
        }
      }
    ],
    "stars": 217
  },
  {
    "id": "mcp-server-exa",
    "icon": "https://exa.ai/images/favicon-32x32.png",
    "name": "mcp-server-exa",
    "description": "MCP server enabling AI models to perform real-time web searches.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-exa",
      "application": "https://github.com/exa-labs/exa-mcp-server"
    },
    "tags": [
      "web",
      "research"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.3.10",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "b84820f5de98f117043fc747185e8baca46d2d760ba56af75f37220bae1ee310",
      "reason": "The tool name clearly indicates web search functionality with Exa AI. The description adequately explains what the tool does (web search and content scraping) and mentions key capabilities like configurable results and real-time search. Both parameters have clear descriptions with the query purpose obvious and numResults including default value. However, the description could be more specific about when to use it versus other search tools and what type of content/format is returned.",
      "score": "B"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-excel-mcp-server",
    "name": "mcp-server-excel",
    "description": "An Excel manipulation server providing workbook creation, data operations, formatting, and advanced features (charts, pivot tables, formulae).",
    "links": {
      "application": "https://github.com/haris-musa/excel-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "excel": {
            "url": "http://localhost:8000/sse",
            "env": {
              "EXCEL_FILES_PATH": "/path/to/excel/files"
            }
          }
        }
      }
    ],
    "stars": 405
  },
  {
    "id": "mcp-server-facebook-ads-mcp-server",
    "name": "mcp-server-facebook-ads",
    "description": "MCP server acting as an interface to the Facebook Ads, enabling programmatic access to Facebook Ads data and management features.",
    "links": {
      "application": "https://github.com/gomarble-ai/facebook-ads-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "marketing"
    ],
    "provider": "source",
    "config": [],
    "stars": 31
  },
  {
    "id": "mcp-server-fantasy-pl-mcp",
    "name": "mcp-server-fantasy-pl",
    "description": "An MCP server for real-time Fantasy Premier League data and analysis tools.",
    "links": {
      "application": "https://github.com/rishijatia/fantasy-pl-mcp/"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "gaming",
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "fantasy-pl": {
            "command": "python",
            "args": [
              "-m",
              "fpl_mcp"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "fantasy-pl": {
            "command": "/full/path/to/your/venv/bin/fpl-mcp"
          }
        }
      },
      {
        "mcpServers": {
          "fantasy-pl": {
            "command": "/full/path/to/your/venv/bin/fpl-mcp"
          }
        }
      },
      {
        "mcpServers": {
          "fantasy-pl": {
            "command": "python",
            "args": [
              "-m",
              "fpl_mcp"
            ]
          }
        }
      }
    ],
    "stars": 19
  },
  {
    "id": "mcp-server-fastmcp",
    "name": "mcp-server-fastmcp",
    "description": "A high-level framework for building MCP servers in TypeScript.",
    "links": {
      "application": "https://github.com/punkpeye/fastmcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "unknown",
    "tags": [
      "integration",
      "storage",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "my-mcp-server": {
            "command": "npx",
            "args": [
              "tsx",
              "/PATH/TO/YOUR_PROJECT/src/index.ts"
            ],
            "env": {
              "YOUR_ENV_VAR": "value"
            }
          }
        }
      }
    ],
    "stars": 1390
  },
  {
    "id": "mcp-server-fetch",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-fetch",
    "description": "A Model Context Protocol server providing tools to fetch and convert web content for usage by LLMs",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-fetch",
      "application": "https://pypi.org/project/mcp-server-fetch/"
    },
    "tags": [
      "research",
      "web",
      "automation"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "2025.4.7",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "bbd373efacbbad1af86d75cd2fbc422c938d6b7e63b528f78aa0f56968022584",
      "reason": "Tool name is clear and intuitive. Description adequately explains functionality and includes helpful context about internet access capabilities. All parameters have clear descriptions with proper constraints and defaults. The description could be more concise and focus less on historical context, but overall documentation is comprehensive and usable.",
      "score": "B"
    },
    "resources": {
      "tools": 1,
      "prompts": 1,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-fetch-mcp",
    "name": "mcp-server-zcaceres-fetch",
    "description": "An MCP server to flexibly fetch JSON, text, and HTML data.",
    "links": {
      "application": "https://github.com/zcaceres/fetch-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "fetch": {
            "command": "node",
            "args": [
              "{ABSOLUTE PATH TO FILE HERE}/dist/index.js"
            ]
          }
        }
      }
    ],
    "stars": 314
  },
  {
    "id": "mcp-server-fetcher-mcp",
    "name": "mcp-server-fetcher",
    "description": "MCP server for fetching web page content using Playwright headless browser, supporting Javascript rendering and intelligent content extraction, and outputting Markdown or HTML format.",
    "links": {
      "application": "https://github.com/jae-jae/fetcher-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "web",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "fetcher": {
            "command": "npx",
            "args": [
              "-y",
              "fetcher-mcp"
            ]
          }
        }
      }
    ],
    "stars": 639
  },
  {
    "id": "mcp-server-fewsats",
    "name": "mcp-server-fewsats",
    "description": "Enable AI Agents to purchase anything in a secure way using Fewsats.",
    "links": {
      "application": "https://github.com/fewsats/fewsats-mcp-server"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "security"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "fewsats": {
            "command": "npx",
            "args": [
              "-y",
              "fewsats-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-ffmpeg-mcp.git",
    "name": "mcp-server-ffmpeg.git",
    "description": "Using ffmpeg command line to achieve an mcp server, can be very convenient, through the dialogue to achieve the local video search, tailoring, stitching, playback and other functions.",
    "links": {
      "application": "https://github.com/video-creator/ffmpeg-mcp.git"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [],
    "provider": "source",
    "config": []
  },
  {
    "id": "mcp-server-fibery",
    "icon": "https://fibery.io/favicon.svg",
    "name": "mcp-server-fibery",
    "description": "Integrates Fibery workspace with LLMs using natural language queries.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-fibery",
      "application": "https://github.com/Fibery-inc/fibery-mcp-server"
    },
    "tags": [
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.1.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "e593528dac7972bd7436205c764a632647218bf7c2dda6d9a3da3c7264bbc69c",
      "reason": "Tool names are clear and purposeful. Most descriptions adequately explain functionality with good context, especially the complex query_database tool which includes comprehensive examples. Parameter descriptions are generally clear with proper type information. However, some tools like current_date and list_databases have overly brief descriptions that could benefit from more detail about when to use them and what they return.",
      "score": "B"
    },
    "resources": {
      "tools": 7,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-figma",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-figma",
    "description": "Provide coding agents direct access to Figma data to help them one-shot design implementation.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-figma",
      "application": "https://github.com/GLips/Figma-Context-MCP"
    },
    "tags": [
      "development",
      "integration",
      "web"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.4.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "fd695653425bed661dfe970d4616bc1c01148ead230f531a91b976f4411e4973",
      "reason": "The toolset provides adequate documentation with clear tool names and basic functionality descriptions. However, the descriptions are somewhat brief and could better explain usage context and limitations. Parameter documentation is generally clear but inconsistent in detail - some parameters like 'depth' have comprehensive descriptions while others like 'fileName' are minimal. The documentation is functional but leaves some questions unanswered about when to use each tool and their specific constraints.",
      "score": "C"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-filesystem",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-filesystem",
    "description": "MCP server for filesystem access",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-filesystem",
      "application": "https://modelcontextprotocol.io"
    },
    "tags": [
      "automation",
      "development",
      "research"
    ],
    "official": false,
    "scope": "native",
    "mutitenant": true,
    "runtime": "node",
    "version": "2025.3.28",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "b98c05ea2263fbb845157f6e94253a37661a8fe5edcc7c49210ed381d0683b1d",
      "reason": "Tool names are clear and intuitive, indicating purpose immediately. Descriptions are comprehensive (3-4 sentences) explaining functionality, use cases, and limitations including security boundaries. Parameters have clear descriptions with explicit constraints and purpose. Documentation addresses common scenarios and proactively explains security limitations with 'allowed directories' throughout.",
      "score": "A"
    },
    "resources": {
      "tools": 11,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-finData-mcp-server",
    "name": "mcp-server-finData",
    "description": "An MCP server for accessing professional financial data, supporting multiple data providers such as Tushare.",
    "links": {
      "application": "https://github.com/zlinzzzz/finData-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "development",
      "finance"
    ],
    "provider": "source",
    "config": [],
    "stars": 7
  },
  {
    "id": "mcp-server-financial-datasets",
    "name": "mcp-server-financial-datasets",
    "description": "Stock market API made for AI agents.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "finance",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "financial-datasets": {
            "command": "npx",
            "args": [
              "-y",
              "financial-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-firebase-mcp",
    "name": "mcp-server-firebase",
    "description": "Firebase services including Auth, Firestore and Storage.",
    "links": {
      "application": "https://github.com/gannonh/firebase-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "database",
      "integration"
    ],
    "provider": "npx",
    "config": [],
    "stars": 110
  },
  {
    "id": "mcp-server-firecrawl",
    "icon": "https://firecrawl.dev/favicon.ico",
    "name": "mcp-server-firecrawl",
    "description": "Integrates Firecrawl for web scraping and data extraction.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-firecrawl",
      "application": "https://github.com/mendableai/firecrawl-mcp-server"
    },
    "tags": [
      "web",
      "automation"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.11.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "3b5c2fba1abf2c85157a670f90a560ddccdfae071f3ff8461ac463a07e426841",
      "reason": "Excellent documentation across all tools. Each tool has a comprehensive description explaining what it does, when to use it, when not to use it, common mistakes, and detailed usage examples. Parameter descriptions are clear and complete, explaining purpose, constraints, and expected values. The documentation proactively addresses typical user questions and provides concrete guidance for proper tool selection and usage.",
      "score": "A"
    },
    "resources": {
      "tools": 8,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-firefly-mcp",
    "name": "mcp-server-firefly",
    "description": "Integrates, discovers, manages, and codifies cloud resources with Firefly.",
    "links": {
      "application": "https://github.com/gofireflyio/firefly-mcp"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 8
  },
  {
    "id": "mcp-server-fireproof",
    "name": "mcp-server-fireproof",
    "description": "Immutable ledger database with live synchronization.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "database"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "fireproof": {
            "command": "npx",
            "args": [
              "-y",
              "fireproof-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-firstcycling-mcp",
    "name": "mcp-server-firstcycling",
    "description": "Access cycling race data, results, and statistics through natural language. Features include retrieving start lists, race results, and rider information from firstcycling.com.",
    "links": {
      "application": "https://github.com/r-huijts/firstcycling-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "firstcycling": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/server/directory",
              "run",
              "firstcycling.py"
            ]
          }
        }
      }
    ],
    "stars": 6
  },
  {
    "id": "mcp-server-flipt",
    "name": "mcp-server-flipt",
    "description": "Enable AI assistants to interact with your feature flags in Flipt.",
    "links": {
      "application": "https://github.com/flipt-io/mcp-server-flipt"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 1
  },
  {
    "id": "mcp-server-forevervm",
    "name": "mcp-server-forevervm",
    "description": "Run Python in a code sandbox.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "forevervm": {
            "command": "npx",
            "args": [
              "-y",
              "forevervm-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-freqtrade-mcp",
    "name": "mcp-server-freqtrade",
    "description": "An MCP server that integrates with the Freqtrade cryptocurrency trading bot.",
    "links": {
      "application": "https://github.com/kukapay/freqtrade-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 20
  },
  {
    "id": "mcp-server-freshdesk_mcp",
    "name": "mcp-server-freshdesk_mcp",
    "description": "MCP server that integrates with Freshdesk, enabling AI models to interact with Freshdesk modules and perform various support operations.",
    "links": {
      "application": "https://github.com/effytech/freshdesk_mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "freshdesk-mcp": {
          "command": "uvx",
          "args": [
            "freshdesk-mcp"
          ],
          "env": {
            "FRESHDESK_API_KEY": "<YOUR_FRESHDESK_API_KEY>",
            "FRESHDESK_DOMAIN": "<YOUR_FRESHDESK_DOMAIN>"
          }
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "freshdesk-mcp": {
            "command": "uvx",
            "args": [
              "freshdesk-mcp"
            ],
            "env": {
              "FRESHDESK_API_KEY": "YOUR_VALUE",
              "FRESHDESK_DOMAIN": "YOUR_VALUE"
            }
          }
        }
      }
    ],
    "stars": 7
  },
  {
    "id": "mcp-server-funding-rates-mcp",
    "name": "mcp-server-funding-rates",
    "description": "Providing real-time funding rate data across major crypto exchanges.",
    "links": {
      "application": "https://github.com/kukapay/funding-rates-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "funding-rates-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "/absolute/path/to/funding-rates-mcp",
              "run",
              "funding-rates-mcp"
            ]
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-g-search-mcp",
    "name": "mcp-server-g-search",
    "description": "A powerful MCP server for Google search that enables parallel searching with multiple keywords simultaneously.",
    "links": {
      "application": "https://github.com/jae-jae/g-search-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "web",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "g-search": {
            "command": "npx",
            "args": [
              "-y",
              "g-search-mcp"
            ]
          }
        }
      }
    ],
    "stars": 105
  },
  {
    "id": "mcp-server-gateway",
    "name": "mcp-server-gateway",
    "description": "MCP and MCP SSE Server that automatically generate API based on database schema and data. Supports PostgreSQL, Clickhouse, MySQL, Snowflake, BigQuery, Supabase.",
    "links": {
      "application": "https://github.com/centralmind/gateway"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "database",
      "cloud",
      "integration",
      "development"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "gateway": {
            "command": "PATH_TO_GATEWAY_BINARY",
            "args": [
              "start",
              "--config",
              "PATH_TO_GATEWAY_YAML_CONFIG",
              "mcp-stdio"
            ]
          }
        }
      }
    ],
    "stars": 289
  },
  {
    "id": "mcp-server-gdrive",
    "name": "mcp-server-gdrive",
    "description": "Google Drive integration for listing, reading, and searching files.",
    "links": {
      "application": "https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "web",
      "integration",
      "storage",
      "database",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "memory": {
            "command": "npx",
            "args": [
              "-y",
              "@modelcontextprotocol/server-memory"
            ]
          }
        }
      }
    ],
    "stars": 42546
  },
  {
    "id": "mcp-server-genai-toolbox",
    "name": "mcp-server-genai-toolbox",
    "description": "Open source MCP server specializing in easy, fast, and secure tools for Databases.",
    "links": {
      "application": "https://github.com/googleapis/genai-toolbox"
    },
    "official": false,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "database",
      "cloud",
      "integration",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 795
  },
  {
    "id": "mcp-server-gin-mcp",
    "name": "mcp-server-gin",
    "description": "A zero-configuration Go library to automatically expose existing Gin web framework APIs as MCP tools.",
    "links": {
      "application": "https://github.com/ckanthony/gin-mcp"
    },
    "official": false,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 18
  },
  {
    "id": "mcp-server-giphy",
    "name": "mcp-server-giphy",
    "description": "Search and retrieve GIFs from Giphy's vast library through the Giphy API.",
    "links": {
      "application": "https://github.com/magarcia/mcp-server-giphy"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "giphy": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-server-giphy"
            ],
            "env": {
              "GIPHY_API_KEY": "<YOUR_API_KEY>"
            }
          }
        }
      }
    ],
    "stars": 7
  },
  {
    "id": "mcp-server-gistpad-mcp",
    "name": "mcp-server-gistpad",
    "description": "Use GitHub Gists to manage and access your personal knowledge, daily notes, and reusable prompts. This acts as a companion to and the GistPad VS Code extension.",
    "links": {
      "application": "https://github.com/lostintangent/gistpad-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "gistpad": {
            "command": "npx",
            "args": [
              "-y",
              "gistpad-mcp"
            ],
            "env": {
              "GITHUB_TOKEN": "<YOUR_PAT>"
            }
          }
        }
      }
    ],
    "stars": 7
  },
  {
    "id": "mcp-server-git",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-git",
    "description": "Tools to read, search, and manipulate Git repositories.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-git",
      "application": "https://github.com/modelcontextprotocol/servers/tree/main/src/git"
    },
    "tags": [
      "development",
      "research"
    ],
    "official": true,
    "scope": "native",
    "mutitenant": true,
    "runtime": "python",
    "version": "2025.1.14",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "18b4c8497f11485b3f48fff007b4aa926308d8d90ca6a03bb18f098a67bd9eab",
      "reason": "Tool names are clear and intuitive with consistent git_ prefix. However, descriptions are overly brief (mostly single short phrases) and lack essential context about when to use each tool, what information they provide, expected input formats, or limitations. Parameter descriptions are missing entirely - all parameters only have generic titles like 'Repo Path' without explaining their purpose, expected format, or constraints.",
      "score": "D"
    },
    "resources": {
      "tools": 11,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-git-mcp",
    "name": "mcp-server-idosal-git",
    "description": "Gitmcp.io is a generic remote MCP server to connect to ANY GitHub repository or project for documentation.",
    "links": {
      "application": "https://github.com/idosal/git-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "gitmcp": {
            "command": "npx",
            "args": [
              "mcp-remote",
              "https://gitmcp.io/{owner}/{repo}"
            ]
          }
        }
      }
    ],
    "stars": 1899
  },
  {
    "id": "mcp-server-gitea-mcp",
    "name": "mcp-server-gitea",
    "description": "Interactive with Gitea instances with MCP.",
    "links": {
      "application": "https://gitea.com/gitea/gitea-mcp"
    },
    "official": true,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "research",
      "development",
      "database"
    ],
    "provider": "github-release",
    "config": []
  },
  {
    "id": "mcp-server-gitee",
    "name": "mcp-server-gitee",
    "description": "Gitee API integration, repository, issue, and pull request management, and more.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "gitee": {
            "command": "npx",
            "args": [
              "-y",
              "gitee-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-github",
    "icon": "https://avatars.githubusercontent.com/u/9919?s=200&v=4",
    "name": "mcp-server-github",
    "description": "GitHub's official MCP Server",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-github",
      "application": "https://github.com/github/github-mcp-server"
    },
    "tags": [
      "development",
      "automation",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "binary",
    "version": "v0.4.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "b6cd535a065583de34feba6649a7a8de5f437ec884d51c7f6819d8cfe89a4410",
      "reason": "Tool names are clear and specific indicating GitHub functionality. Most descriptions adequately explain what each tool does and when to use it, with some excellent examples like 'list_notifications' providing comprehensive context. Parameter descriptions are generally clear with good use of enums and constraints. However, some tools have minimal descriptions (e.g., 'get_tag', 'list_branches') and a few complex tools could benefit from more detailed usage guidance.",
      "score": "B"
    },
    "resources": {
      "tools": 51,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-github-chat",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/github-chat/live/logo-1744789806714.png",
    "name": "mcp-server-github-chat",
    "description": "Analyzes and queries GitHub repositories using the GitHub Chat API.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-github-chat",
      "application": "https://github.com/AsyncFuncAI/github-chat-mcp"
    },
    "tags": [
      "automation",
      "web"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.1.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "7e10c0fac6308fe0407363bb48548a3e81d3f3283adc598be5fae667128dc441",
      "reason": "Tool names are clear and specific, indicating their purposes well. Descriptions adequately explain functionality and include important usage requirements (indexing prerequisite). Most parameters have clear descriptions with proper format specifications. The conversation_history parameter structure is complex but documented, though could benefit from clearer explanation of the object structure within the array.",
      "score": "B"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-github-enterprise-mcp",
    "name": "mcp-server-github-enterprise",
    "description": "MCP server for GitHub Enterprise API integration.",
    "links": {
      "application": "https://github.com/ddukbg/github-enterprise-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "github-enterprise": {
            "command": "npx",
            "args": [
              "-y",
              "@ddukbg/github-enterprise-mcp",
              "--token=YOUR_GITHUB_TOKEN",
              "--github-enterprise-url=YOUR_GITHUB_ENTERPRISE_URL"
            ]
          }
        }
      }
    ],
    "stars": 14
  },
  {
    "id": "mcp-server-github-mcp-server",
    "name": "mcp-server-github",
    "description": "Official GitHub server for integration with repository management, PRs, issues, and more.",
    "links": {
      "application": "https://github.com/github/github-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "research",
      "development"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "github": {
            "command": "docker",
            "args": [
              "run",
              "-i",
              "--rm",
              "-e",
              "GITHUB_PERSONAL_ACCESS_TOKEN",
              "ghcr.io/github/github-mcp-server"
            ],
            "env": {
              "GITHUB_PERSONAL_ACCESS_TOKEN": "YOUR_VALUE"
            }
          }
        }
      }
    ],
    "stars": 12727
  },
  {
    "id": "mcp-server-github-official",
    "name": "mcp-server-github-official",
    "description": "GitHub's official MCP Server.",
    "links": {
      "application": "https://github.com/github/github-mcp-server"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "github-official": {
            "command": "npx",
            "args": [
              "-y",
              "@modelcontextprotocol/server-github"
            ],
            "env": {
              "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-github-repo-mcp",
    "name": "mcp-server-github-repo",
    "description": "GitHub Repo MCP allow your AI assistants browse GitHub repositories, explore directories, and view file contents.",
    "links": {
      "application": "https://github.com/Ryan0204/github-repo-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "github-repo-mcp": {
            "command": "wsl",
            "args": [
              "bash",
              "-c",
              "cmd /c npx -y github-repo-mcp"
            ],
            "enabled": true
          }
        }
      },
      {
        "mcpServers": {
          "github-repo-mcp": {
            "command": "wsl",
            "args": [
              "bash",
              "-c",
              "'/home/[username]/.nvm/versions/node/v20.18.0/bin/npx github-repo-mcp'"
            ],
            "enabled": true
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-gitlab",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-gitlab",
    "description": "MCP server for using the GitLab API",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-gitlab",
      "application": "https://modelcontextprotocol.io"
    },
    "tags": [
      "research",
      "development",
      "automation"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": false,
    "runtime": "node",
    "version": "2025.4.25",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "af719205e4131aad812075e7b36ef8bd4b8b807cabbb6ffad444a5d2f0cc2f94",
      "reason": "Tool names are clear and descriptive, indicating their GitLab-specific functionality well. However, descriptions are overly brief (1-2 words each) and fail to explain when to use each tool, what they return, or important limitations. Parameter descriptions are basic but adequate, clearly indicating purpose and expected input types. The documentation provides minimal functional context, leaving users to infer usage scenarios and behavior details.",
      "score": "C"
    },
    "resources": {
      "tools": 9,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-gitlab-mr-mcp",
    "name": "mcp-server-gitlab-mr",
    "description": "Interact seamlessly with issues and merge requests of your GitLab projects.",
    "links": {
      "application": "https://github.com/kopfrechner/gitlab-mr-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 25
  },
  {
    "id": "mcp-server-glif",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/glif/live/logo-1744789771251.jpeg",
    "name": "mcp-server-glif",
    "description": "Run AI workflows and manage glifs through the Model Context Protocol.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-glif",
      "application": "https://github.com/glifxyz/glif-mcp-server"
    },
    "tags": [
      "automation",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.9.9",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "a679b504f1df04eb06beb8427b9864fabfce3b21a20c5e0449dd8a2af964aa9a",
      "reason": "Tool names are clear and indicate purpose well, but descriptions are consistently brief and lack important context. Most descriptions are single phrases that don't explain when to use the tools, what they return, or any limitations. Parameter descriptions are minimal - many just restate the parameter name without explaining purpose or expected format. The toolset would benefit from more comprehensive descriptions explaining functionality, usage scenarios, and parameter details.",
      "score": "D"
    },
    "resources": {
      "tools": 10,
      "prompts": 1,
      "resources": 3,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-gnuradioMCP",
    "name": "mcp-server-gnuradioMCP",
    "description": "An MCP server for GNU Radio that enables LLMs to autonomously create and modify RF `.grc` flowcharts.",
    "links": {
      "application": "https://github.com/yoelbassin/gnuradioMCP"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "mcpServers": {
      "mcpServers": {
        "GnuradioMCP": {
          "command": "uv",
          "args": [
            "--directory",
            "/path/to/gnuradioMCP",
            "run",
            "main.py"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "GnuradioMCP": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/gnuradioMCP",
              "run",
              "main.py"
            ]
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-godoc-mcp",
    "name": "mcp-server-mrjoshuak-godoc",
    "description": "Token-efficient Go documentation server that provides AI assistants with smart access to package docs and types without reading entire source files.",
    "links": {
      "application": "https://github.com/mrjoshuak/godoc-mcp"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "github",
    "config": [],
    "stars": 49
  },
  {
    "id": "mcp-server-godoc-mcp-server",
    "name": "mcp-server-yikakia-godoc",
    "description": "Query Go package information on pkg.go.dev.",
    "links": {
      "application": "https://github.com/yikakia/godoc-mcp-server"
    },
    "official": false,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 13
  },
  {
    "id": "mcp-server-godot-mcp",
    "name": "mcp-server-godot",
    "description": "An MCP server for interacting with the Godot game engine, providing tools for editing, running, debugging, and managing scenes in Godot projects.",
    "links": {
      "application": "https://github.com/Coding-Solo/godot-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development",
      "gaming"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "godot": {
            "command": "node",
            "args": [
              "/absolute/path/to/godot-mcp/build/index.js"
            ],
            "env": {
              "DEBUG": "true"
            },
            "disabled": false,
            "autoApprove": [
              "launch_editor",
              "run_project",
              "get_debug_output",
              "stop_project",
              "get_godot_version",
              "list_projects",
              "get_project_info",
              "create_scene",
              "add_node",
              "load_sprite",
              "export_mesh_library",
              "save_scene",
              "get_uid",
              "update_project_uids"
            ]
          }
        }
      }
    ],
    "stars": 338
  },
  {
    "id": "mcp-server-google-bigquery",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-google-bigquery",
    "description": "A server that lets your LLM securely query BigQuery.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-google-bigquery",
      "application": "https://github.com/ergut/mcp-bigquery-server"
    },
    "tags": [
      "integration",
      "database",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "188a377a02dad53ae7fdce175a00802fee0ca710bfa251d35ca863f0f9ad3dba",
      "reason": "Tool name is too generic ('query' could apply to any database). Description is minimal, only stating it runs read-only queries without explaining when to use it, what data sources are available, or output format. The 'sql' parameter completely lacks description, and 'maximumBytesBilled' has minimal context about its purpose or format expectations.",
      "score": "D"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-google-calendar-mcp",
    "name": "mcp-server-google-calendar",
    "description": "An MCP server to interface with the Google Calendar API. Based on TypeScript.",
    "links": {
      "application": "https://github.com/takumi0706/google-calendar-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "communication"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "google-calendar": {
            "command": "npx",
            "args": [
              "-y",
              "@takumi0706/google-calendar-mcp"
            ],
            "env": {
              "GOOGLE_CLIENT_ID": "your_client_id",
              "GOOGLE_CLIENT_SECRET": "your_client_secret",
              "GOOGLE_REDIRECT_URI": "http://localhost:4153/oauth2callback",
              "USE_MANUAL_AUTH": "true"
            }
          }
        }
      }
    ],
    "stars": 21
  },
  {
    "id": "mcp-server-google-drive",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-google-drive",
    "description": "File access and search capabilities for Google Drive.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-google-drive",
      "application": "https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive"
    },
    "tags": [
      "research",
      "web",
      "cloud"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "2025.1.14",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-google-maps",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-google-maps",
    "description": "MCP server for using the Google Maps API",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-google-maps",
      "application": "https://modelcontextprotocol.io"
    },
    "tags": [
      "research",
      "web"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": false,
    "runtime": "node",
    "version": "0.6.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "503d6a386d17c4cb3fe803d3d8f8d1d41a6e67c9e24573e108088d0097f02aed",
      "reason": "Tool names are clear and intuitive with 'maps_' prefix indicating purpose. Most descriptions are brief but adequate (1-2 sentences) explaining core functionality. Parameter descriptions are basic but sufficient to understand purpose and types. However, descriptions lack detail about when to use each tool, what specific information is returned, limitations, or constraints beyond basic enum values. Some tools like maps_search_places and maps_place_details could benefit from more context about their relationship and usage scenarios.",
      "score": "C"
    },
    "resources": {
      "tools": 7,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-gotohuman",
    "name": "mcp-server-gotohuman",
    "description": "Human-in-the-loop platform - Allow AI agents and automations to send requests for approval to your gotoHuman inbox.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "web"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "gotohuman": {
            "command": "npx",
            "args": [
              "-y",
              "gotohuman-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-gqai",
    "name": "mcp-server-gqai",
    "description": "Define tools using regular GraphQL queries/mutations and gqai automatically generates an MCP server for you.",
    "links": {
      "application": "https://github.com/fotoetienne/gqai"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "native",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 7
  },
  {
    "id": "mcp-server-gradle-mcp-server",
    "name": "mcp-server-gradle",
    "description": "Gradle integration using the Gradle Tooling API to inspect projects, execute tasks, and run tests with per-test result reporting.",
    "links": {
      "application": "https://github.com/IlyaGulya/gradle-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "native",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "github-release",
    "config": [
      {
        "mcpServers": {
          "gradle-mcp-server": {
            "command": "java",
            "args": [
              "-jar",
              "<absolute_path_to_home>/mcp-servers/gradle-mcp-server/gradle-mcp-server-all.jar"
            ],
            "env": {},
            "disabled": false,
            "autoApprove": []
          }
        }
      }
    ],
    "stars": 13
  },
  {
    "id": "mcp-server-grafana",
    "icon": "https://grafana.com/favicon.ico",
    "name": "mcp-server-grafana",
    "description": "Access and manage Grafana dashboards and datasources.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-grafana",
      "application": "https://github.com/grafana/mcp-grafana"
    },
    "tags": [
      "web",
      "monitoring"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "binary",
    "version": "v0.4.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "3c936ef58d07747eb064cdd5148435e078e02eaaa08e0b80c4b27d69deb97d82",
      "reason": "Tool names are clear and specific, consistently indicating their purpose. Most descriptions are comprehensive (2-3+ sentences) and explain functionality, usage context, and key behaviors. The majority of parameters have clear, detailed descriptions explaining their purpose and expected values. Minor gaps exist in some parameter descriptions (e.g., missing constraints for severity/status enums, some brief descriptions like 'userId'), but overall documentation quality is good with strong clarity and usability.",
      "score": "B"
    },
    "resources": {
      "tools": 35,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-grafana-loki-mcp",
    "name": "mcp-server-grafana-loki",
    "description": "An MCP server that allows querying Loki logs through the Grafana API.",
    "links": {
      "application": "https://github.com/tumf/grafana-loki-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "monitoring",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "loki": {
            "command": "uvx",
            "args": [
              "grafana-loki-mcp",
              "-u",
              "GRAFANA_URL",
              "-k",
              "GRAFANA_API_KEY"
            ]
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-graphlit",
    "icon": "https://framerusercontent.com/images/KCOWBYLKunDff1Dr452y6EfjiU.png",
    "name": "mcp-server-graphlit",
    "description": "Integrates your MCP client with Graphlit to ingest and search content from dev tools.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-graphlit",
      "application": "https://github.com/graphlit/graphlit-mcp-server"
    },
    "tags": [
      "research",
      "integration",
      "web",
      "cloud"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.20250531001",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "bc195cbc073ce125068c44159ebda8b82a5d2e47b228ba31d33b4bbaaeb450d6",
      "reason": "All tools have clear, specific names that indicate their purpose. Descriptions are comprehensive and detailed, explaining what each tool does, when to use it, required environment variables, and important limitations. Parameter descriptions are thorough with clear explanations of purpose, constraints, and expected formats (like ISO 8601). The documentation proactively addresses common usage scenarios and provides helpful context like URL format examples and authentication requirements.",
      "score": "A"
    },
    "resources": {
      "tools": 64,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-graphlit-mcp-server",
    "name": "mcp-server-graphlit-graphlit",
    "description": "Ingest anything from Slack, Discord, websites, Google Drive, Linear or GitHub into a Graphlit project - and then search and retrieve relevant knowledge within an MCP client like Cursor, Windsurf or Cline.",
    "links": {
      "application": "https://github.com/graphlit/graphlit-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "graphlit-mcp-server": {
            "command": "npx",
            "args": [
              "-y",
              "graphlit-mcp-server"
            ],
            "env": {
              "GRAPHLIT_ORGANIZATION_ID": "your-organization-id",
              "GRAPHLIT_ENVIRONMENT_ID": "your-environment-id",
              "GRAPHLIT_JWT_SECRET": "your-jwt-secret"
            }
          }
        }
      }
    ],
    "stars": 234
  },
  {
    "id": "mcp-server-grasp",
    "name": "mcp-server-grasp",
    "description": "Self-hosted browser using agent with built-in MCP and A2A support.",
    "links": {
      "application": "https://github.com/aircodelabs/grasp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "web",
      "integration",
      "cloud"
    ],
    "provider": "docker",
    "stars": 23,
    "config": []
  },
  {
    "id": "mcp-server-greptimedb",
    "name": "mcp-server-unknown-greptimedb",
    "description": "Provides AI assistants with a secure and structured way to explore and analyze data in GreptimeDB.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "security"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "greptimedb": {
            "command": "npx",
            "args": [
              "-y",
              "greptimedb-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-greptimedb-mcp-server",
    "name": "mcp-server-greptimeteam-greptimedb",
    "description": "MCP Server for querying GreptimeDB.",
    "links": {
      "application": "https://github.com/GreptimeTeam/greptimedb-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "greptimedb": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/greptimedb-mcp-server",
              "run",
              "-m",
              "greptimedb_mcp_server.server"
            ],
            "env": {
              "GREPTIMEDB_HOST": "localhost",
              "GREPTIMEDB_PORT": "4002",
              "GREPTIMEDB_USER": "root",
              "GREPTIMEDB_PASSWORD": "",
              "GREPTIMEDB_DATABASE": "public"
            }
          }
        }
      }
    ],
    "stars": 15
  },
  {
    "id": "mcp-server-gtasks-mcp",
    "name": "mcp-server-gtasks",
    "description": "An MCP server to Manage Google Tasks.",
    "links": {
      "application": "https://github.com/zcaceres/gtasks-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "communication",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "gtasks": {
            "command": "/opt/homebrew/bin/node",
            "args": [
              "{ABSOLUTE PATH TO FILE HERE}/dist/index.js"
            ]
          }
        }
      }
    ],
    "stars": 37
  },
  {
    "id": "mcp-server-gyazo",
    "icon": "https://gyazo.com/favicon.ico",
    "name": "mcp-server-gyazo",
    "description": "Integrates Gyazo images for AI assistants via Model Context Protocol.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-gyazo",
      "application": "https://github.com/nota/gyazo-mcp-server"
    },
    "tags": [
      "web",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "14e3a0e155b2ea859f142e5425e735d06205162516287eb1dcdefc6d4dd89396",
      "reason": "Tool names are clear and specific to Gyazo functionality. Descriptions are brief but adequate, covering basic functionality in 1-2 sentences. Parameter descriptions are generally clear with good constraint specifications (min/max values, character limits). However, descriptions lack comprehensive details about when to use each tool, what specific information is returned, and important limitations. The gyazo_latest_image tool has an unusual required 'name' parameter that lacks clear justification in the documentation.",
      "score": "C"
    },
    "resources": {
      "tools": 4,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-hackle-mcp",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/hackle/live/logo-1745472701666.png",
    "name": "mcp-server-hackle-mcp",
    "description": "A/B test data query tools for Hackle API.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-hackle-mcp",
      "application": "https://github.com/hackle-io/hackle-mcp"
    },
    "tags": [
      "automation",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.3.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "6a636b265ca991fe39260047e267fffaf91d28cec2b0dcd943ee425db67a44cb",
      "reason": "Tool names are clear and follow consistent patterns, and most descriptions adequately explain basic functionality. However, descriptions are quite brief (1-2 sentences) and lack important context about when to use tools, what data they return, or usage limitations. Parameter descriptions are minimal with many missing entirely (pageNumber, pageSize, searchKeyword lack descriptions across multiple tools). While the schema constraints are well-defined, the overall documentation leaves users needing to infer many usage details.",
      "score": "C"
    },
    "resources": {
      "tools": 19,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-hackmd-mcp",
    "name": "mcp-server-hackmd",
    "description": "Allows AI models to interact with HackMD.",
    "links": {
      "application": "https://github.com/yuna0x0/hackmd-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "cloud",
      "web",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "hackmd": {
            "command": "npx",
            "args": [
              "-y",
              "hackmd-mcp"
            ],
            "env": {
              "HACKMD_API_TOKEN": "your_api_token"
            }
          }
        }
      }
    ],
    "stars": 19
  },
  {
    "id": "mcp-server-harness",
    "icon": "https://avatars.githubusercontent.com/u/34780278?s=200&v=4",
    "name": "mcp-server-harness",
    "description": "Provides seamless integration with Harness APIs.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-harness",
      "application": "https://github.com/harness/mcp-server"
    },
    "tags": [
      "development",
      "automation",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "go",
    "version": "v1.0.0-beta",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "1a2b01f0d9583e19f120015d926bb67fa5adab77be1b02ebce6f13c705ab59bd",
      "reason": "Tool names are clear and consistently indicate their purpose (create_, get_, list_, download_, fetch_). Descriptions are concise and adequately explain functionality, though they could be more comprehensive. Parameter descriptions are generally clear and specify purpose and expected values. Most tools properly indicate required vs optional parameters. However, descriptions lack detail about when to use tools, what specific information they provide, and potential limitations. Some inconsistencies exist in pagination parameter naming (page vs limit) and default values.",
      "score": "B"
    },
    "resources": {
      "tools": 17,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-heroku",
    "icon": "https://www.herokucdn.com/favicons/favicon.ico",
    "name": "mcp-server-heroku",
    "description": "Facilitate LLMs interaction with Heroku Platform resources.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-heroku",
      "application": "https://github.com/heroku/heroku-mcp-server"
    },
    "tags": [
      "integration",
      "cloud",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.6",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "84d790d5da6432b387695a5ad45c3850aa61189cdd11fa950bb0793ba38a36fa",
      "reason": "Tool names are clear and parameter documentation is generally adequate, but many tool descriptions are overly terse and cryptic, using shorthand notation instead of complete explanations. While functional, the documentation often lacks sufficient context about usage scenarios and expected outcomes, requiring users to infer details.",
      "score": "C"
    },
    "resources": {
      "tools": 37,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-heurist-mesh-mcp-server",
    "name": "mcp-server-heurist-mesh",
    "description": "Access specialized web3 AI agents for blockchain analysis, smart contract security auditing, token metrics evaluation, and on-chain interactions through the Heurist Mesh network. Provides comprehensive tools for DeFi analysis, NFT valuation, and transaction monitoring across multiple blockchains.",
    "links": {
      "application": "https://github.com/heurist-network/heurist-mesh-mcp-server"
    },
    "official": true,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "finance",
      "research"
    ],
    "provider": "docker",
    "config": [],
    "stars": 42
  },
  {
    "id": "mcp-server-higress-ops-mcp-server",
    "name": "mcp-server-higress-ops",
    "description": "MCP server that provides comprehensive tools for managing Higress gateway configurations and operations.",
    "links": {
      "application": "https://github.com/higress-group/higress-ops-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 13
  },
  {
    "id": "mcp-server-hko-mcp",
    "name": "mcp-server-hko",
    "description": "MCP server with basic demonstration of getting weather from Hong Kong Observatory.",
    "links": {
      "application": "https://github.com/louiscklaw/hko-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 0
  },
  {
    "id": "mcp-server-hn-server",
    "name": "mcp-server-pskill9-hn",
    "description": "Parses the HTML content from news.ycombinator.com (Hacker News) and provides structured data for different types of stories (top, new, ask, show, jobs).",
    "links": {
      "application": "https://github.com/pskill9/hn-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "hacker-news": {
            "command": "node",
            "args": [
              "/path/to/hn-server/build/index.js"
            ]
          }
        }
      }
    ],
    "stars": 26
  },
  {
    "id": "mcp-server-hologres",
    "name": "mcp-server-hologres",
    "description": "Connect to a Hologres instance, get table metadata, query and analyze data.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "hologres": {
            "command": "npx",
            "args": [
              "-y",
              "hologres-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-home-assistant",
    "name": "mcp-server-home-assistant",
    "description": "Expose all Home Assistant voice intents through a Model Context Protocol Server allowing home control.",
    "links": {
      "application": "https://github.com/allenporter/mcp-server-home-assistant"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 45
  },
  {
    "id": "mcp-server-homeassistant-mcp",
    "name": "mcp-server-homeassistant",
    "description": "Access Home Assistant data and control devices (lights, switches, thermostats, etc).",
    "links": {
      "application": "https://github.com/tevonsb/homeassistant-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "cloud"
    ],
    "provider": "npx",
    "config": [],
    "stars": 249
  },
  {
    "id": "mcp-server-hydrolix",
    "name": "mcp-server-unknown-hydrolix",
    "description": "Hydrolix time-series datalake integration providing schema exploration and query capabilities to LLM-based workflows.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "hydrolix": {
            "command": "npx",
            "args": [
              "-y",
              "hydrolix-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-hyperbrowser",
    "icon": "https://hyperbrowser-assets-bucket.s3.us-east-1.amazonaws.com/Hyperbrowser-logo.png",
    "name": "mcp-server-hyperbrowser",
    "description": "Scrapes, extracts data, and automates web page interactions.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-hyperbrowser",
      "application": "https://github.com/hyperbrowserai/mcp"
    },
    "tags": [
      "web",
      "automation"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.25",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "d3735b0592cf84256a9cecc9ce486264bc71aa0d63fd7f37b886d3aa06ee0251",
      "reason": "The toolset demonstrates good documentation quality overall. Tool names are clear and purposeful, descriptions adequately explain functionality and use cases (though some could be more concise), and parameter documentation is comprehensive with proper constraints and defaults. The three agent tools have excellent detailed descriptions explaining their specific strengths and optimal use cases. However, some descriptions are verbose, a few parameters like 'ignoreSitemap' and 'schema' lack adequate explanation, and there's inconsistent detail across tools, preventing an A grade.",
      "score": "B"
    },
    "resources": {
      "tools": 10,
      "prompts": 0,
      "resources": 54,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-iaptic",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/iaptic/live/logo-1744789672300.png",
    "name": "mcp-server-iaptic",
    "description": "Connect AIs to Iaptic data for customer and transaction insights.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-iaptic",
      "application": "https://github.com/iaptic/mcp-server-iaptic"
    },
    "tags": [
      "integration",
      "database"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "3f43f4a003eaecc3b114d18bb132f4bf2f9477c0cf661eccb70cf1d3c8c0bda2",
      "reason": "Excellent documentation quality across all tools. Names are clear and specific, descriptions are comprehensive (2-4 sentences) covering functionality, usage context, and key limitations, and parameters include detailed descriptions with examples and constraints. The toolset consistently provides complete information needed for effective usage, with proper bullet-point formatting and helpful details like default values, format examples, and important notes.",
      "score": "A"
    },
    "resources": {
      "tools": 16,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-ibm-wxflows",
    "name": "mcp-server-ibm-wxflows",
    "description": "Tool platform by IBM to build, test and deploy tools for any data source.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "ibm-wxflows": {
            "command": "npx",
            "args": [
              "-y",
              "ibmwxflows-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-ida-pro-mcp",
    "name": "mcp-server-ida-pro",
    "description": "MCP server for IDA Pro, allowing you to perform binary analysis with AI assistants. This plugin implement decompilation, disassembly and allows you to generate malware analysis reports automatically.",
    "links": {
      "application": "https://github.com/mrexodia/ida-pro-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "security",
      "research",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "github.com/mrexodia/ida-pro-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "c:\\MCP\\ida-pro-mcp",
              "run",
              "server.py",
              "--install-plugin"
            ],
            "timeout": 1800,
            "disabled": false,
            "autoApprove": [
              "check_connection",
              "get_metadata",
              "get_function_by_name",
              "get_function_by_address",
              "get_current_address",
              "get_current_function",
              "convert_number",
              "list_functions",
              "list_strings",
              "search_strings",
              "decompile_function",
              "disassemble_function",
              "get_xrefs_to",
              "get_entry_points",
              "set_comment",
              "rename_local_variable",
              "rename_global_variable",
              "set_global_variable_type",
              "rename_function",
              "set_function_prototype",
              "declare_c_type",
              "set_local_variable_type"
            ],
            "alwaysAllow": [
              "check_connection",
              "get_metadata",
              "get_function_by_name",
              "get_function_by_address",
              "get_current_address",
              "get_current_function",
              "convert_number",
              "list_functions",
              "list_strings",
              "search_strings",
              "decompile_function",
              "disassemble_function",
              "get_xrefs_to",
              "get_entry_points",
              "set_comment",
              "rename_local_variable",
              "rename_global_variable",
              "set_global_variable_type",
              "rename_function",
              "set_function_prototype",
              "declare_c_type",
              "set_local_variable_type"
            ]
          }
        }
      }
    ],
    "stars": 1683
  },
  {
    "id": "mcp-server-imagen3-mcp",
    "name": "mcp-server-imagen3",
    "description": "A powerful image generation tool using Google's Imagen 3.0 API through MCP. Generate high-quality images from text prompts with advanced photography, artistic, and photorealistic controls.",
    "links": {
      "application": "https://github.com/hamflx/imagen3-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "stars": 11,
    "config": [
      {
        "mcpServers": {
          "imagen3": {
            "command": "C:\\bin\\imagen3-mcp.exe",
            "env": {
              "GEMINI_API_KEY": "<GEMINI_API_KEY>"
            }
          }
        }
      },
      {
        "mcpServers": {
          "imagen3": {
            "command": "C:\\bin\\imagen3-mcp.exe",
            "env": {
              "GEMINI_API_KEY": "<GEMINI_API_KEY>"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-imessage-query-fastmcp-mcp-server",
    "name": "mcp-server-imessage-query-fastmcp",
    "description": "An MCP server that provides safe access to your iMessage database through Model Context Protocol (MCP), enabling LLMs to query and analyze iMessage conversations with proper phone number validation and attachment handling.",
    "links": {
      "application": "https://github.com/hannesrudolph/imessage-query-fastmcp-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "communication"
    ],
    "provider": "source",
    "config": [],
    "stars": 44
  },
  {
    "id": "mcp-server-inbox-zero",
    "name": "mcp-server-inbox-zero",
    "description": "AI personal assistant for email Inbox Zero.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "communication"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "inbox-zero": {
            "command": "npx",
            "args": [
              "-y",
              "inboxzero-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-influxdb-mcp-server",
    "name": "mcp-server-influxdb",
    "description": "Run queries against InfluxDB OSS API v2.",
    "links": {
      "application": "https://github.com/idoru/influxdb-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "database",
      "cloud",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "influxdb": {
            "command": "npx",
            "args": [
              "influxdb-mcp-server"
            ],
            "env": {
              "INFLUXDB_TOKEN": "your_token",
              "INFLUXDB_URL": "http://localhost:8086",
              "INFLUXDB_ORG": "your_org"
            }
          }
        }
      }
    ],
    "stars": 5
  },
  {
    "id": "mcp-server-inkeep",
    "name": "mcp-server-inkeep",
    "description": "RAG Search over your content powered by Inkeep.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "inkeep": {
            "command": "npx",
            "args": [
              "-y",
              "inkeep-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-inoyu-mcp-unomi-server",
    "name": "mcp-server-inoyu-unomi",
    "description": "An MCP server to access and updates profiles on an Apache Unomi CDP server.",
    "links": {
      "application": "https://github.com/sergehuber/inoyu-mcp-unomi-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "unomi-server": {
            "command": "npx",
            "args": [
              "@inoyu/mcp-unomi-server"
            ],
            "env": {
              "UNOMI_BASE_URL": "http://your-unomi-server:8181",
              "UNOMI_USERNAME": "your-username",
              "UNOMI_PASSWORD": "your-password",
              "UNOMI_PROFILE_ID": "your-profile-id",
              "UNOMI_KEY": "your-unomi-key",
              "UNOMI_EMAIL": "your-email@example.com",
              "UNOMI_SOURCE_ID": "claude-desktop"
            }
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-integration-app",
    "name": "mcp-server-integration-app",
    "description": "Interact with any other SaaS applications on behalf of your customers.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "integration-app": {
            "command": "npx",
            "args": [
              "-y",
              "integration-app-mcp"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-investor-agent",
    "name": "mcp-server-investor-agent",
    "description": "Yahoo Finance integration to fetch stock market data including options recommendations.",
    "links": {
      "application": "https://github.com/ferdousbhai/investor-agent"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research",
      "finance"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "investor": {
            "command": "path/to/uvx/command/uvx",
            "args": [
              "investor-agent"
            ]
          }
        }
      }
    ],
    "stars": 77
  },
  {
    "id": "mcp-server-ios-simulator-mcp",
    "name": "mcp-server-ios-simulator",
    "description": "A Model Context Protocol (MCP) server for interacting with iOS simulators. This server allows you to interact with iOS simulators by getting information about them, controlling UI interactions, and inspecting UI elements.",
    "links": {
      "application": "https://github.com/joshuayoes/ios-simulator-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "ios-simulator": {
            "command": "npx",
            "args": [
              "-y",
              "ios-simulator-mcp"
            ]
          }
        }
      }
    ],
    "stars": 293
  },
  {
    "id": "mcp-server-ipfind-mcp-server",
    "name": "mcp-server-ipfind",
    "description": "IP Address location service using the IP Find API.",
    "links": {
      "application": "https://github.com/ipfind/ipfind-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "ipfind": {
            "command": "npx",
            "args": [
              "-y",
              "@ipfind/ipfind-mcp-server"
            ],
            "env": {
              "IPFIND_API_KEY": "<API KEY GOES HERE>"
            }
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-ipinfo",
    "name": "mcp-server-ipinfo",
    "description": "IP address geolocation and network information using IPInfo API.",
    "links": {
      "application": "https://github.com/briandconnelly/mcp-server-ipinfo"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 18
  },
  {
    "id": "mcp-server-isaac-sim-mcp",
    "name": "mcp-server-isaac-sim",
    "description": "An MCP Server and an extension enables natural language control of NVIDIA Isaac Sim, Lab, OpenUSD and etc.",
    "links": {
      "application": "https://github.com/omni-mcp/isaac-sim-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "development",
      "integration",
      "database"
    ],
    "provider": "source",
    "stars": 27,
    "config": [
      {
        "mcpServers": {
          "isaac-sim": {
            "command": "uv run /home/ubuntu/Documents/isaac-sim-mcp/isaac_mcp/server.py"
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-iterm-mcp",
    "name": "mcp-server-iterm",
    "description": "A Model Context Protocol server that provides access to iTerm. You can run commands and ask questions about what you see in the iTerm terminal.",
    "links": {
      "application": "https://github.com/ferrislucas/iterm-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "automation",
      "web",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "iterm-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "iterm-mcp"
            ]
          }
        }
      }
    ],
    "stars": 295
  },
  {
    "id": "mcp-server-jadx-ai-mcp",
    "name": "mcp-server-jadx-ai",
    "description": "JADX-AI-MCP is a plugin and MCP Server for the JADX decompiler that integrates directly with Model Context Protocol (MCP) to provide live reverse engineering support with LLMs like Claude.",
    "links": {
      "application": "https://github.com/zinja-coder/jadx-ai-mcp"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "security",
      "integration",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "jadx-mcp-server": {
            "command": "/home/<YOUR_USERNAME/.local/bin/uv",
            "args": [
              "--directory",
              "</PATH/TO/>jadx_mcp_server/",
              "run",
              "jadx_mcp.py"
            ]
          }
        }
      }
    ],
    "stars": 209
  },
  {
    "id": "mcp-server-jdbc",
    "name": "mcp-server-quarkiverse-jdbc",
    "description": "Connect to any JDBC-compatible database and query, insert, update, delete, and more.",
    "links": {
      "application": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jdbc"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "database",
      "cloud",
      "integration",
      "storage",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 113
  },
  {
    "id": "mcp-server-jetbrains",
    "icon": "https://avatars.githubusercontent.com/u/878437?s=200&v=4",
    "name": "mcp-server-jetbrains",
    "description": "Connect to JetBrains IDE.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-jetbrains",
      "application": "https://github.com/JetBrains/mcpProxy"
    },
    "tags": [
      "automation",
      "integration",
      "development"
    ],
    "official": true,
    "scope": "native",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.8.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-jfx",
    "name": "mcp-server-jfx",
    "description": "Draw on JavaFX canvas.",
    "links": {
      "application": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jfx"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration",
      "cloud",
      "storage",
      "research",
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [],
    "stars": 113
  },
  {
    "id": "mcp-server-jira-mcp",
    "name": "mcp-server-nguyenvanduocit-jira",
    "description": "A Go-based MCP connector for Jira that enables AI assistants like Claude to interact with Atlassian Jira. This tool provides a seamless interface for AI models to perform common Jira operations including issue management, sprint planning, and workflow transitions.",
    "links": {
      "application": "https://github.com/nguyenvanduocit/jira-mcp"
    },
    "official": false,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "cloud",
      "research",
      "development"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "jira": {
            "command": "/path/to/jira-mcp",
            "args": [
              "-env",
              "/path/to/.env"
            ]
          }
        }
      }
    ],
    "stars": 15
  },
  {
    "id": "mcp-server-jira-mcp-server",
    "name": "mcp-server-ks-gen-ai-jira",
    "description": "Read jira data via JQL and api and execute requests to create and edit tickets.",
    "links": {
      "application": "https://github.com/KS-GEN-AI/jira-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "web"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "Jira communication server": {
            "command": "node",
            "args": [
              "/PATH_TO_THE_PROJECT/build/index.js"
            ],
            "env": {
              "JIRA_URL": "https://XXXXXXXX.atlassian.net",
              "JIRA_API_MAIL": "Your email",
              "JIRA_API_KEY": "KEY_FROM : https://id.atlassian.com/manage-profile/security/api-tokens"
            }
          }
        }
      }
    ],
    "stars": 20
  },
  {
    "id": "mcp-server-jmeter-mcp-server",
    "name": "mcp-server-jmeter",
    "description": "JMeter MCP Server for performance testing.",
    "links": {
      "application": "https://github.com/QAInsights/jmeter-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "jmeter": {
            "command": "/path/to/uv",
            "args": [
              "--directory",
              "/path/to/jmeter-mcp-server",
              "run",
              "jmeter_server.py"
            ]
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-job-searchoor",
    "name": "mcp-server-job-searchoor",
    "description": "An MCP server for searching job listings with filters for date, keywords, remote work options, and more.",
    "links": {
      "application": "https://github.com/0xDAEF0F/job-searchoor"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "job-search": {
            "command": "npx",
            "args": [
              "-y",
              "job-searchoor"
            ]
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-js",
    "name": "mcp-server-js",
    "description": "Execute any LLM-generated code in a secure and scalable sandbox environment and create your own MCP tools using JavaScript or Python, with full support for NPM and PyPI packages.",
    "links": {
      "application": "https://github.com/yepcode/mcp-server-js"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "web",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 9
  },
  {
    "id": "mcp-server-jupiter-mcp",
    "name": "mcp-server-jupiter",
    "description": "An MCP server for executing token swaps on the Solana blockchain using Jupiter's new Ultra API.",
    "links": {
      "application": "https://github.com/kukapay/jupiter-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "Jupiter-MCP": {
            "command": "node",
            "args": [
              "path/to/jupiter-mcp/server/index.js"
            ],
            "env": {
              "SOLANA_RPC_URL": "solana rpc url you can access",
              "PRIVATE_KEY": "your private key"
            }
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-jupyter-mcp-server",
    "name": "mcp-server-jupyter",
    "description": "Model Context Protocol (MCP) Server for Jupyter.",
    "links": {
      "application": "https://github.com/datalayer/jupyter-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "cloud",
      "storage",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 247
  },
  {
    "id": "mcp-server-jupyter-notebook-mcp",
    "name": "mcp-server-jupyter-notebook",
    "description": "Connects Jupyter Notebook to Claude AI, allowing Claude to directly interact with and control Jupyter Notebooks.",
    "links": {
      "application": "https://github.com/jjsantos01/jupyter-notebook-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "jupyter": {
            "command": "uv",
            "args": [
              "--directory",
              "/ABSOLUTE/PATH/TO/PARENT/REPO/FOLDER/src",
              "run",
              "jupyter_mcp_server.py"
            ]
          }
        }
      }
    ],
    "stars": 43
  },
  {
    "id": "mcp-server-jvm-mcp-server",
    "name": "mcp-server-jvm",
    "description": "An implementation project of a JVM-based MCP (Model Context Protocol) server.",
    "links": {
      "application": "https://github.com/xzq-xu/jvm-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "jvm-mcp-server": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/jvm-mcp-server",
              "run",
              "--env-file",
              "/path/to/jvm-mcp-server/.env",
              "jvm-mcp-server"
            ]
          }
        }
      }
    ],
    "stars": 52
  },
  {
    "id": "mcp-server-k6-mcp-server",
    "name": "mcp-server-k6",
    "description": "Grafana k6 MCP Server for performance testing.",
    "links": {
      "application": "https://github.com/QAInsights/k6-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "k6": {
            "command": "/path/to/bin/uv",
            "args": [
              "--directory",
              "/path/to/k6-mcp-server",
              "run",
              "k6_server.py"
            ]
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-k8m",
    "name": "mcp-server-k8m",
    "description": "Provides MCP multi-cluster Kubernetes management and operations, featuring a management interface, logging, and nearly 50 built-in tools covering common DevOps and development scenarios. Supports both standard and CRD resources.",
    "links": {
      "application": "https://github.com/weibaohui/k8m"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "cloud",
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 239
  },
  {
    "id": "mcp-server-k8s-mcp-server",
    "name": "mcp-server-alexei-led-k8s",
    "description": "A lightweight yet robust server that empowers AI assistants to securely execute Kubernetes CLI commands (`kubectl`, `helm`, `istioctl`, and `argocd`) using Unix pipes in a safe Docker environment with multi-architecture support.",
    "links": {
      "application": "https://github.com/alexei-led/k8s-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "cloud",
      "development",
      "database"
    ],
    "provider": "source",
    "stars": 77,
    "config": [
      {
        "mcpServers": {
          "kubernetes": {
            "command": "docker",
            "args": [
              "run",
              "-i",
              "--rm",
              "-v",
              "/Users/YOUR_USER_NAME/.kube:/home/appuser/.kube:ro",
              "ghcr.io/alexei-led/k8s-mcp-server:latest"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-kaggle-mcp",
    "name": "mcp-server-kaggle",
    "description": "Connects to Kaggle, ability to download and analyze datasets.",
    "links": {
      "application": "https://github.com/arrismo/kaggle-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "research"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "kaggle-mcp": {
            "command": "kaggle-mcp",
            "cwd": "YOUR_VALUE/kaggle-mcp"
          }
        }
      }
    ],
    "stars": 5
  },
  {
    "id": "mcp-server-kagi-search",
    "name": "mcp-server-kagi-search",
    "description": "Search the web using Kagi's search API.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "kagi-search": {
            "command": "npx",
            "args": [
              "-y",
              "kagi-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-kagisearch",
    "icon": "https://kagi.com/favicon.ico",
    "name": "mcp-server-kagisearch",
    "description": "MCP server for search queries and video summarization.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-kagisearch",
      "application": "https://github.com/kagisearch/kagimcp"
    },
    "tags": [
      "research",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.1.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "6ceab26e129283972684cc6c697e0e9628e88eb880f2c4af387c9ee2fd9450ff",
      "reason": "Good documentation overall with clear, descriptive names and comprehensive descriptions that explain functionality and usage context. The kagi_search_fetch tool provides excellent detail about result numbering and query handling. Parameter descriptions are clear with helpful examples and constraints specified (enums, defaults). Minor areas for improvement include more specific guidance on query optimization and target language format examples, but the documentation effectively communicates tool purposes and usage patterns.",
      "score": "B"
    },
    "resources": {
      "tools": 2,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-keboola",
    "name": "mcp-server-unknown-keboola",
    "description": "Build robust data workflows, integrations, and analytics on a single intuitive platform.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "marketing"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "keboola": {
            "command": "npx",
            "args": [
              "-y",
              "keboola-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-keboola-mcp-server",
    "name": "mcp-server-keboola-keboola",
    "description": "Interact with Keboola Connection Data Platform. This server provides tools for listing and accessing data from Keboola Storage API.",
    "links": {
      "application": "https://github.com/keboola/keboola-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "integration",
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "keboola": {
            "command": "wsl.exe",
            "args": [
              "bash",
              "-c",
              "'source /wsl_path/to/keboola-mcp-server/.env",
              "&&",
              "/wsl_path/to/keboola-mcp-server/.venv/bin/python -m keboola_mcp_server.cli --transport stdio'"
            ]
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-keep-mcp",
    "name": "mcp-server-keep",
    "description": "Read, create, update and delete Google Keep notes.",
    "links": {
      "application": "https://github.com/feuerdev/keep-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research",
      "integration"
    ],
    "provider": "source",
    "mcpServers": {
      "mcpServers": {
        "keep-mcp-pipx": {
          "command": "pipx",
          "args": [
            "run",
            "keep-mcp"
          ],
          "env": {
            "GOOGLE_EMAIL": "Your Google Email",
            "GOOGLE_MASTER_TOKEN": "Your Google Master Token - see README.md"
          }
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "keep-mcp-pipx": {
            "command": "pipx",
            "args": [
              "run",
              "keep-mcp"
            ],
            "env": {
              "GOOGLE_EMAIL": "Your Google Email",
              "GOOGLE_MASTER_TOKEN": "Your Google Master Token - see README.md"
            }
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-kokoro-tts-mcp",
    "name": "mcp-server-kokoro-tts",
    "description": "MCP Server that uses the open weight Kokoro TTS models to convert text-to-speech. Can convert text to MP3 on a local driver or auto-upload to an S3 bucket.",
    "links": {
      "application": "https://github.com/mberg/kokoro-tts-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [],
    "provider": "github-release",
    "config": [],
    "stars": 18
  },
  {
    "id": "mcp-server-kom",
    "name": "mcp-server-kom",
    "description": "Provides MCP multi-cluster Kubernetes management and operations. It can be integrated as an SDK into your own project and includes nearly 50 built-in tools covering common DevOps and development scenarios. Supports both standard and CRD resources.",
    "links": {
      "application": "https://github.com/weibaohui/kom"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "cloud",
      "integration",
      "development",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "kom": {
            "type": "sse",
            "url": "http://IP:9096/sse"
          }
        }
      },
      {
        "mcpServers": {
          "k8m": {
            "command": "path/to/kom",
            "args": []
          }
        }
      },
      {
        "mcpServers": {
          "k8m": {
            "command": "path/to/kom",
            "args": []
          }
        }
      }
    ],
    "stars": 101
  },
  {
    "id": "mcp-server-kubectl-mcp-server",
    "name": "mcp-server-kubectl",
    "description": "A Model Context Protocol (MCP) server for Kubernetes that enables AI assistants like Claude, Cursor, and others to interact with Kubernetes clusters through natural language.",
    "links": {
      "application": "https://github.com/rohitg00/kubectl-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "cloud",
      "development",
      "integration"
    ],
    "provider": "source",
    "stars": 389,
    "config": [
      {
        "mcpServers": {
          "kubernetes": {
            "command": "python",
            "args": [
              "-m",
              "kubectl_mcp_tool.minimal_wrapper"
            ],
            "env": {
              "KUBECONFIG": "/path/to/your/.kube/config"
            }
          }
        }
      },
      {
        "mcpServers": {
          "kubernetes": {
            "command": "python",
            "args": [
              "-m",
              "kubectl_mcp_tool.minimal_wrapper"
            ],
            "env": {
              "KUBECONFIG": "/path/to/your/.kube/config",
              "PATH": "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin"
            }
          }
        }
      },
      {
        "mcpServers": {
          "kubernetes": {
            "command": "python",
            "args": [
              "-m",
              "kubectl_mcp_tool.minimal_wrapper"
            ],
            "env": {
              "KUBECONFIG": "/path/to/your/.kube/config"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-kubernetes",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-kubernetes",
    "description": "Typescript implementation of Kubernetes cluster operations for pods, deployments, services.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-kubernetes",
      "application": "https://github.com/Flux159/mcp-server-kubernetes"
    },
    "tags": [
      "development",
      "integration",
      "cloud"
    ],
    "official": false,
    "scope": "native",
    "mutitenant": true,
    "runtime": "node",
    "version": "2.2.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "e55e7e30e62793adeffc257f7d4f2c389efd2375ff58fadbb999ef2a03847943",
      "reason": "The toolset provides good documentation with mostly clear tool names and adequate descriptions. Most tools have well-documented parameters with clear descriptions and appropriate constraints. However, some tools like 'cleanup' and 'port_forward' have minimal descriptions, and a few parameters lack sufficient detail about their purpose and usage context. The documentation is generally functional but could benefit from more comprehensive descriptions for complex operations.",
      "score": "B"
    },
    "resources": {
      "tools": 20,
      "prompts": 0,
      "resources": 5,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-kubernetes-mcp-server",
    "name": "mcp-server-manusa-kubernetes",
    "description": "A powerful Kubernetes MCP server with additional support for OpenShift. Besides providing CRUD operations for **any** Kubernetes resource, this server provides specialized tools to interact with your cluster.",
    "links": {
      "application": "https://github.com/manusa/kubernetes-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "cloud",
      "development"
    ],
    "provider": "npx",
    "stars": 139,
    "config": []
  },
  {
    "id": "mcp-server-langfuse",
    "name": "mcp-server-langfuse",
    "description": "MCP server to access and manage LLM application prompts created with Langfuse) Prompt Management.",
    "links": {
      "application": "https://github.com/langfuse/mcp-server-langfuse"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "langfuse": {
            "command": "node",
            "args": [
              "<absolute-path>/build/index.js"
            ],
            "env": {
              "LANGFUSE_PUBLIC_KEY": "your-public-key",
              "LANGFUSE_SECRET_KEY": "your-secret-key",
              "LANGFUSE_BASEURL": "https://cloud.langfuse.com"
            }
          }
        }
      }
    ],
    "stars": 66
  },
  {
    "id": "mcp-server-langfuse-prompt-management",
    "name": "mcp-server-langfuse-prompt-management",
    "description": "Open-source tool for collaborative editing, versioning, evaluating, and releasing prompts.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "langfuse-prompt-management": {
            "command": "npx",
            "args": [
              "-y",
              "langfuse-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-lara-mcp",
    "name": "mcp-server-lara",
    "description": "MCP Server for Lara Translate API, enabling powerful translation capabilities with support for language detection and context-aware translations.",
    "links": {
      "application": "https://github.com/translated/lara-mcp"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "lara-translate": {
            "command": "npx",
            "args": [
              "-y",
              "@translated/lara-mcp@latest"
            ],
            "env": {
              "LARA_ACCESS_KEY_ID": "<YOUR_ACCESS_KEY_ID>",
              "LARA_ACCESS_KEY_SECRET": "<YOUR_ACCESS_KEY_SECRET>"
            }
          }
        }
      }
    ],
    "stars": 47
  },
  {
    "id": "mcp-server-lara-translate",
    "icon": "https://laratranslate.com/favicon.ico",
    "name": "mcp-server-lara-translate",
    "description": "MCP server enabling powerful language translation capabilities.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-lara-translate",
      "application": "https://github.com/translated/lara-mcp"
    },
    "tags": [
      "translation",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.0.10",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "aae4a9143d093451b104509b4daf885b884a0009f8283b397c77fd0a29c25573",
      "reason": "The toolset demonstrates good documentation quality with clear, descriptive tool names and comprehensive descriptions that explain functionality and usage context. Parameter documentation is generally thorough with helpful examples and format specifications. However, some descriptions could be more concise (particularly the translate tool), and a few parameters lack complete constraint details. The overall documentation provides sufficient guidance for effective tool usage with only minor gaps.",
      "score": "B"
    },
    "resources": {
      "tools": 10,
      "prompts": 0,
      "resources": 2,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-last9",
    "name": "mcp-server-unknown-last9",
    "description": "Seamlessly bring real-time production contextlogs, metrics, and tracesinto your local environment to auto-fix code faster.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "monitoring",
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "last9": {
            "command": "npx",
            "args": [
              "-y",
              "last9-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-last9-mcp-server",
    "name": "mcp-server-last9-last9",
    "description": "Seamlessly bring real-time production contextlogs, metrics, and tracesinto your local environment to auto-fix code faster.",
    "links": {
      "application": "https://github.com/last9/last9-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "development",
      "integration",
      "monitoring"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "last9": {
            "command": "/opt/homebrew/bin/last9-mcp",
            "env": {
              "LAST9_AUTH_TOKEN": "<your_auth_token>",
              "LAST9_BASE_URL": "<last9_otlp_host>",
              "LAST9_REFRESH_TOKEN": "<refresh_token_from_last9_dashboard>"
            }
          }
        }
      },
      {
        "mcpServers": {
          "last9": {
            "command": "/opt/homebrew/bin/last9-mcp",
            "env": {
              "LAST9_AUTH_TOKEN": "<auth_token>",
              "LAST9_BASE_URL": "<last9_otlp_host>",
              "LAST9_REFRESH_TOKEN": "<write_refresh_token>"
            }
          }
        }
      },
      {
        "mcpServers": {
          "last9": {
            "command": "/opt/homebrew/bin/last9-mcp",
            "env": {
              "LAST9_AUTH_TOKEN": "<auth_token>",
              "LAST9_BASE_URL": "<last9_otlp_host>",
              "LAST9_REFRESH_TOKEN": "<refresh_token>"
            }
          }
        }
      }
    ],
    "stars": 30
  },
  {
    "id": "mcp-server-ledger",
    "name": "mcp-server-ledger",
    "description": "A ledger-cli integration for managing financial transactions and generating reports.",
    "links": {
      "application": "https://github.com/minhyeoky/mcp-server-ledger"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "finance",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "ledger": {
            "command": "uv",
            "args": [
              "run",
              "--env-file",
              "/path/to/your/.env",
              "--with",
              "mcp[cli]",
              "mcp",
              "run",
              "YOUR_VALUE/main.py"
            ]
          }
        }
      }
    ],
    "stars": 8
  },
  {
    "id": "mcp-server-leetcode",
    "name": "mcp-server-doggybee-leetcode",
    "description": "An MCP server that enables AI models to search, retrieve, and solve LeetCode problems. Supports metadata filtering, user profiles, submissions, and contest data access.",
    "links": {
      "application": "https://github.com/doggybee/mcp-server-leetcode"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "leetcode": {
            "command": "mcp-server-leetcode"
          }
        }
      },
      {
        "mcpServers": {
          "leetcode": {
            "command": "node",
            "args": [
              "/path/to/dist/index.js"
            ]
          }
        }
      }
    ],
    "stars": 6
  },
  {
    "id": "mcp-server-leetcode-mcp-server",
    "name": "mcp-server-jinzcdev-leetcode",
    "description": "MCP server enabling automated access to **LeetCode**'s programming problems, solutions, submissions and public data with optional authentication for user-specific features (e.g., notes), supporting both `leetcode.com` (global) and `leetcode.cn` (China) sites.",
    "links": {
      "application": "https://github.com/jinzcdev/leetcode-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 6
  },
  {
    "id": "mcp-server-line-bot",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/line/live/logo-1745429370311.png",
    "name": "mcp-server-line-bot",
    "description": "Connects AI Agent to LINE for messaging interactions.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-line-bot",
      "application": "https://github.com/line/line-bot-mcp-server"
    },
    "tags": [
      "communication"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.2.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "6ce427c9c026e72c96981ac49f0110b7a34c874a08b0ca5337b18d2751c40c7f",
      "reason": "Good documentation overall with clear, descriptive tool names and comprehensive descriptions that explain functionality, usage context, and important warnings. Parameter descriptions are mostly clear with proper constraints specified. Minor weaknesses include some repetitive descriptions across similar tools and the generic 'dummy' default for userId parameters could be better explained.",
      "score": "B"
    },
    "resources": {
      "tools": 6,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-line-bot-mcp-server",
    "name": "mcp-server-line-bot",
    "description": "MCP Server for Integrating LINE Official Account.",
    "links": {
      "application": "https://github.com/line/line-bot-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "communication"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "line-bot": {
            "command": "node",
            "args": [
              "PATH/TO/line-bot-mcp-server/dist/index.js"
            ],
            "env": {
              "CHANNEL_ACCESS_TOKEN": "FILL_HERE",
              "DESTINATION_USER_ID": "FILL_HERE"
            }
          }
        }
      }
    ],
    "stars": 344
  },
  {
    "id": "mcp-server-line-official-account",
    "name": "mcp-server-line-official-account",
    "description": "Integrates the LINE Messaging API to connect an AI Agent to the LINE Official Account.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "communication",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "line-official-account": {
            "command": "npx",
            "args": [
              "-y",
              "line-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-lingo-dev",
    "name": "mcp-server-lingo-dev",
    "description": "Make your AI agent speak every language on the planet, using Lingo.dev Localization Engine.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development",
      "translation"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "lingodev": {
            "command": "npx",
            "args": [
              "-y",
              "lingo-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-lldb-mcp",
    "name": "mcp-server-lldb",
    "description": "An MCP server for LLDB enabling AI binary and core file analysis, debugging, disassembling.",
    "links": {
      "application": "https://github.com/stass/lldb-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "mcpServers": {
      "mcpServers": {
        "lldb-mcp": {
          "command": "python3",
          "args": [
            "/path/to/lldb-mcp/lldb_mcp.py"
          ],
          "disabled": false
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "lldb-mcp": {
            "command": "python3",
            "args": [
              "/path/to/lldb-mcp/lldb_mcp.py"
            ],
            "disabled": false
          }
        }
      }
    ],
    "stars": 24
  },
  {
    "id": "mcp-server-llm-context.py",
    "name": "mcp-server-llm-context.py",
    "description": "Share code context with LLMs via MCP or clipboard.",
    "links": {
      "application": "https://github.com/cyberchitta/llm-context.py"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 202
  },
  {
    "id": "mcp-server-locust-mcp-server",
    "name": "mcp-server-locust",
    "description": "Locust MCP Server for performance testing.",
    "links": {
      "application": "https://github.com/QAInsights/locust-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "locust": {
            "command": "/Users/naveenkumar/.local/bin/uv",
            "args": [
              "--directory",
              "/Users/naveenkumar/Gits/locust-mcp-server",
              "run",
              "locust_server.py"
            ]
          }
        }
      }
    ],
    "stars": 1
  },
  {
    "id": "mcp-server-logfire",
    "name": "mcp-server-unknown-logfire",
    "description": "Provides access to OpenTelemetry traces and metrics through Logfire.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "monitoring"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "logfire": {
            "command": "npx",
            "args": [
              "-y",
              "logfire-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-logfire-mcp",
    "name": "mcp-server-logfire",
    "description": "Provides access to OpenTelemetry traces and metrics through Logfire.",
    "links": {
      "application": "https://github.com/pydantic/logfire-mcp"
    },
    "official": true,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "monitoring",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "logfire": {
            "command": "uvx",
            "args": [
              "logfire-mcp",
              "--read-token=YOUR-TOKEN"
            ]
          }
        }
      }
    ],
    "stars": 58
  },
  {
    "id": "mcp-server-lucidity-mcp",
    "name": "mcp-server-lucidity",
    "description": "Enhance AI-generated code quality through intelligent, prompt-based analysis across 10 critical dimensions from complexity to security vulnerabilities.",
    "links": {
      "application": "https://github.com/hyperb1iss/lucidity-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "monitoring"
    ],
    "provider": "source",
    "config": [],
    "stars": 34
  },
  {
    "id": "mcp-server-mac-apps-launcher",
    "name": "mcp-server-mac-apps-launcher",
    "description": "An MCP server to list and launch applications on MacOS.",
    "links": {
      "application": "https://github.com/JoshuaRileyDev/mac-apps-launcher"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "simulator": {
            "command": "npx",
            "args": [
              "y",
              "@joshuarileydev/mac-apps-launcher-mcp-server"
            ]
          }
        }
      }
    ],
    "stars": 10
  },
  {
    "id": "mcp-server-mac_messages_mcp",
    "name": "mcp-server-mac_messages_mcp",
    "description": "An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations. It includes robust phone number validation, attachment processing, contact management, group chat handling, and full support for sending and receiving messages.",
    "links": {
      "application": "https://github.com/carterlasalle/mac_messages_mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "native",
    "tags": [
      "integration",
      "communication",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "messages": {
            "command": "uvx",
            "args": [
              "mac-messages-mcp"
            ]
          }
        }
      }
    ],
    "stars": 71
  },
  {
    "id": "mcp-server-magic-mcp",
    "name": "mcp-server-magic",
    "description": "Create crafted UI components inspired by the best 21st.dev design engineers.",
    "links": {
      "application": "https://github.com/21st-dev/magic-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "@21st-dev/magic": {
            "command": "npx",
            "args": [
              "-y",
              "@21st-dev/magic@latest",
              "API_KEY=\"your-api-key\""
            ]
          }
        }
      }
    ],
    "stars": 1596
  },
  {
    "id": "mcp-server-mailgun",
    "name": "mcp-server-mailgun",
    "description": "Interact with Mailgun API.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "mailgun": {
            "command": "npx",
            "args": [
              "-y",
              "mailgun-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-mailtrap",
    "name": "mcp-server-mailtrap",
    "description": "Integrates with Mailtrap Email API.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "communication",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "mailtrap": {
            "command": "npx",
            "args": [
              "-y",
              "mailtrap-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-make",
    "name": "mcp-server-unknown-make",
    "description": "Turn your Make scenarios into callable tools for AI assistants.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "make": {
            "command": "npx",
            "args": [
              "-y",
              "make-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-make-mcp-server",
    "name": "mcp-server-make",
    "description": "Turn your Make scenarios into callable tools for AI assistants.",
    "links": {
      "application": "https://github.com/integromat/make-mcp-server"
    },
    "official": true,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "make": {
            "command": "npx",
            "args": [
              "-y",
              "@makehq/mcp-server"
            ],
            "env": {
              "MAKE_API_KEY": "<your-api-key>",
              "MAKE_ZONE": "<your-zone>",
              "MAKE_TEAM": "<your-team-id>"
            }
          }
        }
      }
    ],
    "stars": 78
  },
  {
    "id": "mcp-server-manim-mcp-server",
    "name": "mcp-server-manim",
    "description": "A local MCP server that generates animations using Manim.",
    "links": {
      "application": "https://github.com/abhiemj/manim-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [],
    "provider": "source",
    "stars": 77,
    "config": [
      {
        "mcpServers": {
          "manim-server": {
            "command": "/absolute/path/to/python",
            "args": [
              "/absolute/path/to/manim-mcp-server/src/manim_server.py"
            ],
            "env": {
              "MANIM_EXECUTABLE": "/Users/[Your_username]/anaconda3/envs/manim2/Scripts/manim.exe"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-markdownify-mcp",
    "name": "mcp-server-markdownify",
    "description": "An MCP server to convert almost any file or web content into Markdown.",
    "links": {
      "application": "https://github.com/zcaceres/markdownify-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "research"
    ],
    "provider": "source",
    "config": [],
    "stars": 1495
  },
  {
    "id": "mcp-server-markitdown-mcp",
    "name": "mcp-server-markitdown",
    "description": "MCP tool access to MarkItDown -- a library that converts many file formats (local or remote) to Markdown for LLM consumption.",
    "links": {
      "application": "https://github.com/microsoft/markitdown/tree/main/packages/markitdown-mcp"
    },
    "official": true,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "research",
      "development"
    ],
    "provider": "docker",
    "config": [],
    "stars": 55357
  },
  {
    "id": "mcp-server-mastra-mcp",
    "name": "mcp-server-mastra",
    "description": "Client implementation for Mastra, providing seamless integration with MCP-compatible AI models and tools.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "mastra/mcp": {
            "command": "npx",
            "args": [
              "-y",
              "mastra-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-mastra-mcp-docs-server",
    "name": "mcp-server-mastra-docs",
    "description": "Provides AI assistants with direct access to Mastra.ai's complete knowledge base.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "mastra/mcp-docs-server": {
            "command": "npx",
            "args": [
              "-y",
              "mastra-docs-mcp"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-mattermost-mcp-host",
    "name": "mcp-server-mattermost-host",
    "description": "An MCP server along with MCP host that provides access to Mattermost teams, channels and messages. MCP host is integrated as a bot in Mattermost with access to MCP servers that can be configured.",
    "links": {
      "application": "https://github.com/jagan-shanmugam/mattermost-mcp-host"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "communication",
      "research"
    ],
    "provider": "npx",
    "config": [],
    "stars": 7
  },
  {
    "id": "mcp-server-mcgravity",
    "name": "mcp-server-mcgravity",
    "description": "A proxy tool for composing multiple MCP servers into one unified endpoint. Scale your AI tools by load balancing requests across multiple MCP servers, similar to how Nginx works for web servers.",
    "links": {
      "application": "https://github.com/tigranbs/mcgravity"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development",
      "integration",
      "cloud"
    ],
    "provider": "docker",
    "stars": 19,
    "config": []
  },
  {
    "id": "mcp-server-mcp",
    "name": "mcp-server-longportapp-base",
    "description": "LongPort OpenAPI provides real-time stock market data, provides AI access analysis and trading capabilities through MCP.",
    "links": {
      "application": "https://github.com/longportapp/openapi/tree/main/mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "research",
      "finance"
    ],
    "provider": "source",
    "config": [],
    "stars": 208
  },
  {
    "id": "mcp-server-mcp-access-point",
    "name": "mcp-server-access-point",
    "description": "Turn a web service into an MCP server in one click without making any code changes.",
    "links": {
      "application": "https://github.com/sxhxliang/mcp-access-point"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "cloud"
    ],
    "provider": "npx",
    "stars": 8,
    "config": []
  },
  {
    "id": "mcp-server-mcp-afl-server",
    "name": "mcp-server-afl",
    "description": "MCP server that integrates with the Squiggle API to provide information on Australian Football League teams, ladder standings, results, tips, and power rankings.",
    "links": {
      "application": "https://github.com/willvelida/mcp-afl-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "mcp-afl-server": {
            "command": "dotnet",
            "args": [
              "run",
              "--project",
              "PATH\\TO\\PROJECT",
              "--no-build"
            ]
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-mcp-aiven",
    "name": "mcp-server-aiven-open-aiven",
    "description": "Navigate your Aiven projects and interact with the PostgreSQL, Apache Kafka, ClickHouse and OpenSearch services.",
    "links": {
      "application": "https://github.com/Aiven-Open/mcp-aiven"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "database",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "mcp-aiven": {
            "command": "uv",
            "args": [
              "--directory",
              "$REPOSITORY_DIRECTORY",
              "run",
              "--with-editable",
              "$REPOSITORY_DIRECTORY",
              "--python",
              "3.13",
              "mcp-aiven"
            ],
            "env": {
              "AIVEN_BASE_URL": "https://api.aiven.io",
              "AIVEN_TOKEN": "$AIVEN_TOKEN"
            }
          }
        }
      }
    ],
    "stars": 6
  },
  {
    "id": "mcp-server-mcp-alchemy",
    "name": "mcp-server-runekaagaard-alchemy",
    "description": "Universal SQLAlchemy-based database integration supporting PostgreSQL, MySQL, MariaDB, SQLite, Oracle, MS SQL Server and many more databases. Features schema and relationship inspection, and large dataset analysis capabilities.",
    "links": {
      "application": "https://github.com/runekaagaard/mcp-alchemy"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "my_sqlite_db": {
            "command": "uvx",
            "args": [
              "--from",
              "mcp-alchemy==2025.04.16.110003",
              "--refresh-package",
              "mcp-alchemy",
              "mcp-alchemy"
            ],
            "env": {
              "DB_URL": "sqlite:////absolute/path/to/database.db"
            }
          }
        }
      }
    ],
    "stars": 180
  },
  {
    "id": "mcp-server-mcp-aoai-web-browsing",
    "name": "mcp-server-aoai-web-browsing",
    "description": "A `minimal` server/client MCP implementation using Azure OpenAI and Playwright.",
    "links": {
      "application": "https://github.com/kimtth/mcp-aoai-web-browsing"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "web",
      "development"
    ],
    "provider": "source",
    "stars": 17,
    "config": []
  },
  {
    "id": "mcp-server-mcp-atlassian",
    "name": "mcp-server-atlassian",
    "description": "MCP server for Atlassian products (Confluence and Jira). Supports Confluence Cloud, Jira Cloud, and Jira Server/Data Center. Provides comprehensive tools for searching, reading, creating, and managing content across Atlassian workspaces.",
    "links": {
      "application": "https://github.com/sooperset/mcp-atlassian"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "cloud",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-atlassian-sse": {
            "url": "http://localhost:9000/sse"
          }
        }
      }
    ],
    "stars": 1215
  },
  {
    "id": "mcp-server-mcp-baostock-server",
    "name": "mcp-server-baostock",
    "description": "MCP server based on baostock, providing access and analysis capabilities for Chinese stock market data.",
    "links": {
      "application": "https://github.com/HuggingAGI/mcp-baostock-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "finance"
    ],
    "provider": "source",
    "config": [],
    "stars": 10
  },
  {
    "id": "mcp-server-mcp-bigquery-server",
    "name": "mcp-server-ergut-bigquery",
    "description": "Server implementation for Google BigQuery integration that enables direct BigQuery database access and querying capabilities.",
    "links": {
      "application": "https://github.com/ergut/mcp-bigquery-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "database",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "bigquery": {
            "command": "npx",
            "args": [
              "-y",
              "@ergut/mcp-bigquery-server",
              "--project-id",
              "your-project-id",
              "--location",
              "us-central1"
            ]
          }
        }
      }
    ],
    "stars": 60
  },
  {
    "id": "mcp-server-mcp-browser-kit",
    "name": "mcp-server-browser-kit",
    "description": "An MCP Server for interacting with manifest v2 compatible browsers.",
    "links": {
      "application": "https://github.com/ndthanhdev/mcp-browser-kit"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "web"
    ],
    "provider": "npx",
    "stars": 11,
    "config": [
      {
        "mcpServers": {
          "mcp-browser-kit": {
            "command": "npx",
            "args": [
              "@mcp-browser-kit/server"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-mcp-chatgpt-responses",
    "name": "mcp-server-chatgpt-responses",
    "description": "MCP server for Claude to talk to ChatGPT and use its web search capability.",
    "links": {
      "application": "https://github.com/billster45/mcp-chatgpt-responses"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "storage",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "chatgpt": {
            "command": "uv",
            "args": [
              "--directory",
              "\\path\\to\\mcp-chatgpt-responses",
              "run",
              "chatgpt_server.py"
            ],
            "env": {
              "OPENAI_API_KEY": "your-api-key-here",
              "DEFAULT_MODEL": "gpt-4o",
              "DEFAULT_TEMPERATURE": "0.7",
              "MAX_TOKENS": "1000"
            }
          }
        }
      }
    ],
    "stars": 5
  },
  {
    "id": "mcp-server-mcp-claude-code",
    "name": "mcp-server-claude-code",
    "description": "An implementation of Claude Code capabilities using MCP, enabling AI code understanding, modification, and project analysis with comprehensive tool support.",
    "links": {
      "application": "https://github.com/SDGLBL/mcp-claude-code"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "storage",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 127
  },
  {
    "id": "mcp-server-mcp-cli",
    "name": "mcp-server-wong2-cli",
    "description": "CLI tool for testing MCP servers.",
    "links": {
      "application": "https://github.com/wong2/mcp-cli"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "npx",
    "config": [],
    "stars": 286
  },
  {
    "id": "mcp-server-mcp-clickhouse",
    "name": "mcp-server-clickhouse-clickhouse",
    "description": "ClickHouse database integration with schema inspection and query capabilities.",
    "links": {
      "application": "https://github.com/ClickHouse/mcp-clickhouse"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "cloud"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "mcp-clickhouse": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "mcp-clickhouse",
              "--python",
              "3.13",
              "mcp-clickhouse"
            ],
            "env": {
              "CLICKHOUSE_HOST": "<clickhouse-host>",
              "CLICKHOUSE_PORT": "<clickhouse-port>",
              "CLICKHOUSE_USER": "<clickhouse-user>",
              "CLICKHOUSE_PASSWORD": "<clickhouse-password>",
              "CLICKHOUSE_SECURE": "true",
              "CLICKHOUSE_VERIFY": "true",
              "CLICKHOUSE_CONNECT_TIMEOUT": "30",
              "CLICKHOUSE_SEND_RECEIVE_TIMEOUT": "30"
            }
          }
        }
      },
      {
        "mcpServers": {
          "mcp-clickhouse": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "mcp-clickhouse",
              "--python",
              "3.13",
              "mcp-clickhouse"
            ],
            "env": {
              "CLICKHOUSE_HOST": "sql-clickhouse.clickhouse.com",
              "CLICKHOUSE_PORT": "8443",
              "CLICKHOUSE_USER": "demo",
              "CLICKHOUSE_PASSWORD": "",
              "CLICKHOUSE_SECURE": "true",
              "CLICKHOUSE_VERIFY": "true",
              "CLICKHOUSE_CONNECT_TIMEOUT": "30",
              "CLICKHOUSE_SEND_RECEIVE_TIMEOUT": "30"
            }
          }
        }
      },
      {
        "mcpServers": {
          "mcp-clickhouse": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "mcp-clickhouse",
              "--python",
              "3.13",
              "mcp-clickhouse"
            ],
            "env": {
              "CLICKHOUSE_HOST": "<clickhouse-host>",
              "CLICKHOUSE_USER": "<clickhouse-user>",
              "CLICKHOUSE_PASSWORD": "<clickhouse-password>",
              "CLICKHOUSE_DATABASE": "<optional-database>"
            }
          }
        }
      }
    ],
    "stars": 229
  },
  {
    "id": "mcp-server-mcp-code-runner",
    "name": "mcp-server-code-runner",
    "description": "An MCP server for running code locally via Docker and supporting multiple programming languages.",
    "links": {
      "application": "https://github.com/axliupore/mcp-code-runner"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development",
      "cloud"
    ],
    "provider": "source",
    "config": [],
    "stars": 6
  },
  {
    "id": "mcp-server-mcp-confluent",
    "name": "mcp-server-confluent",
    "description": "Confluent integration to interact with Confluent Kafka and Confluent Cloud REST APIs.",
    "links": {
      "application": "https://github.com/confluentinc/mcp-confluent"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "integration",
      "storage",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "confluent": {
            "command": "node",
            "args": [
              "/path/to/confluent-mcp-server/dist/index.js",
              "--env-file",
              "/path/to/confluent-mcp-server/.env"
            ]
          }
        }
      }
    ],
    "stars": 25
  },
  {
    "id": "mcp-server-mcp-database-server",
    "name": "mcp-server-database",
    "description": "Fireproof ledger database with multi-user sync.",
    "links": {
      "application": "https://github.com/fireproof-storage/mcp-database-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "database",
      "web"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "fireproof": {
            "command": "/path/to/fireproof-mcp/build/index.js"
          }
        }
      }
    ],
    "stars": 15
  },
  {
    "id": "mcp-server-mcp-databricks-server",
    "name": "mcp-server-databricks",
    "description": "Connect to Databricks API, allowing LLMs to run SQL queries, list jobs, and get job status.",
    "links": {
      "application": "https://github.com/JordiNeil/mcp-databricks-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "database"
    ],
    "provider": "npx",
    "config": [],
    "stars": 21
  },
  {
    "id": "mcp-server-mcp-datetime",
    "name": "mcp-server-datetime",
    "description": "MCP server providing date and time functions in various formats.",
    "links": {
      "application": "https://github.com/ZeparHyfar/mcp-datetime"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-datetime": {
            "command": "uvx",
            "args": [
              "mcp-datetime"
            ]
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-mcp-dexscreener",
    "name": "mcp-server-dexscreener",
    "description": "Real-time on-chain market prices using open and free Dexscreener API.",
    "links": {
      "application": "https://github.com/janswist/mcp-dexscreener"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "dexscreener": {
            "command": "node",
            "args": [
              "/ABSOLUTE/PATH/TO/PARENT/FOLDER/index.js"
            ]
          }
        }
      }
    ],
    "stars": 3
  },
  {
    "id": "mcp-server-mcp-difyworkflow-server",
    "name": "mcp-server-difyworkflow",
    "description": "Tools to the query and execute of Dify workflows.",
    "links": {
      "application": "https://github.com/gotoolkits/mcp-difyworkflow-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "mcp-difyworkflow-server": {
            "command": "mcp-difyworkflow-server",
            "args": [
              "-base-url",
              "http://localhost/v1"
            ],
            "env": {
              "DIFY_WORKFLOW_NAME": "workflow-translator“,workflow-genImag",
              "DIFY_API_KEYS": "appkey-xxxxxxxxxxxa,appkey-xxxxxxxxxxxb"
            }
          }
        }
      }
    ],
    "stars": 46
  },
  {
    "id": "mcp-server-mcp-dnstwist",
    "name": "mcp-server-dnstwist",
    "description": "MCP server for dnstwist, a powerful DNS fuzzing tool that helps detect typosquatting, phishing, and corporate espionage.",
    "links": {
      "application": "https://github.com/BurtTheCoder/mcp-dnstwist"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "security",
      "cloud",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "dnstwist": {
            "command": "mcp-dnstwist"
          }
        }
      },
      {
        "mcpServers": {
          "dnstwist": {
            "command": "node",
            "args": [
              "/absolute/path/to/mcp-dnstwist/build/index.js"
            ]
          }
        }
      }
    ],
    "stars": 19
  },
  {
    "id": "mcp-server-mcp-everything-search",
    "name": "mcp-server-everything-search",
    "description": "Fast Windows file search using Everything SDK.",
    "links": {
      "application": "https://github.com/mamertofabian/mcp-everything-search"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "research",
      "development",
      "database"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "everything-search": {
          "command": "uvx",
          "args": [
            "mcp-server-everything-search"
          ],
          "env": {
            "EVERYTHING_SDK_PATH": "path/to/Everything-SDK/dll/Everything64.dll"
          }
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "everything-search": {
            "command": "uvx",
            "args": [
              "mcp-server-everything-search"
            ],
            "env": {
              "EVERYTHING_SDK_PATH": "path/to/Everything-SDK/dll/Everything64.dll"
            }
          }
        }
      }
    ],
    "stars": 140
  },
  {
    "id": "mcp-server-mcp-file-merger",
    "name": "mcp-server-file-merger",
    "description": "File merger tool, suitable for AI chat length limits.",
    "links": {
      "application": "https://github.com/exoticknight/mcp-file-merger"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "file-merger": {
            "command": "npx",
            "args": [
              "-y",
              "@exoticknight/mcp-file-merger",
              "/path/to/allowed/dir"
            ]
          }
        }
      }
    ],
    "stars": 10
  },
  {
    "id": "mcp-server-mcp-filesystem-server",
    "name": "mcp-server-mark3labs-filesystem",
    "description": "Golang implementation for local file system access.",
    "links": {
      "application": "https://github.com/mark3labs/mcp-filesystem-server"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration",
      "storage",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "filesystem": {
            "command": "mcp-filesystem-server",
            "args": [
              "/Users/username/Desktop",
              "/path/to/other/allowed/dir"
            ]
          }
        }
      }
    ],
    "stars": 226
  },
  {
    "id": "mcp-server-mcp-flowcore-platform",
    "name": "mcp-server-flowcore-platform",
    "description": "Interact with Flowcore to perform actions, ingest data, and analyse, cross reference and utilise any data in your data cores, or in public data cores; all with human language.",
    "links": {
      "application": "https://github.com/flowcore-io/mcp-flowcore-platform"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 2
  },
  {
    "id": "mcp-server-mcp-git-ingest",
    "name": "mcp-server-git-ingest",
    "description": "Read and analyze GitHub repositories with your LLM.",
    "links": {
      "application": "https://github.com/adhikasp/mcp-git-ingest"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "mcp-git-ingest": {
            "command": "uvx",
            "args": [
              "--from",
              "git+https://github.com/adhikasp/mcp-git-ingest",
              "mcp-git-ingest"
            ]
          }
        }
      }
    ],
    "stars": 194
  },
  {
    "id": "mcp-server-mcp-google-sheets",
    "name": "mcp-server-google-sheets",
    "description": "A Model Context Protocol server for interacting with Google Sheets. This server provides tools to create, read, update, and manage spreadsheets through the Google Sheets API.",
    "links": {
      "application": "https://github.com/xing5/mcp-google-sheets"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "cloud",
      "web",
      "integration",
      "storage",
      "research"
    ],
    "provider": "source",
    "config": [],
    "stars": 69
  },
  {
    "id": "mcp-server-mcp-googletasks",
    "name": "mcp-server-googletasks",
    "description": "An MCP server to interface with the Google Tasks API.",
    "links": {
      "application": "https://github.com/arpitbatra123/mcp-googletasks"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "communication",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "google-tasks": {
            "command": "node",
            "args": [
              "/path/to/google-tasks-mcp/build/index.js"
            ],
            "env": {
              "GOOGLE_CLIENT_ID": "your_client_id_here",
              "GOOGLE_CLIENT_SECRET": "your_client_secret_here",
              "GOOGLE_REDIRECT_URI": "http://localhost:3000/oauth2callback"
            }
          }
        }
      }
    ],
    "stars": 5
  },
  {
    "id": "mcp-server-mcp-gopls",
    "name": "mcp-server-gopls",
    "description": "An MCP server for interacting with Go's Language Server Protocol (gopls) and benefit from advanced Go code analysis features.",
    "links": {
      "application": "https://github.com/hloiseaufcms/mcp-gopls"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "mcp-gopls": {
            "command": "mcp-gopls"
          }
        }
      }
    ],
    "stars": 14
  },
  {
    "id": "mcp-server-mcp-grafana",
    "name": "mcp-server-grafana",
    "description": "Search dashboards, investigate incidents and query datasources in your Grafana instance.",
    "links": {
      "application": "https://github.com/grafana/mcp-grafana"
    },
    "official": true,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "monitoring",
      "research"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "grafana": {
            "command": "mcp-grafana",
            "args": [],
            "env": {
              "GRAFANA_URL": "http://localhost:3000",
              "GRAFANA_API_KEY": "<your service account token>"
            }
          }
        }
      },
      {
        "mcpServers": {
          "grafana": {
            "command": "mcp-grafana",
            "args": [
              "-debug"
            ],
            "env": {
              "GRAFANA_URL": "http://localhost:3000",
              "GRAFANA_API_KEY": "<your service account token>"
            }
          }
        }
      }
    ],
    "stars": 632
  },
  {
    "id": "mcp-server-mcp-graphql",
    "name": "mcp-server-graphql",
    "description": "Allows the AI to query GraphQL servers.",
    "links": {
      "application": "https://github.com/blurrah/mcp-graphql"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-graphql": {
            "command": "npx",
            "args": [
              "mcp-graphql"
            ],
            "env": {
              "ENDPOINT": "http://localhost:3000/graphql"
            }
          }
        }
      }
    ],
    "stars": 121
  },
  {
    "id": "mcp-server-mcp-gsuite",
    "name": "mcp-server-gsuite",
    "description": "Integration with gmail and Google Calendar.",
    "links": {
      "application": "https://github.com/MarkusPfundstein/mcp-gsuite"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "communication",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-gsuite": {
            "command": "uvx",
            "args": [
              "mcp-gsuite",
              "--accounts-file",
              "/path/to/custom/.accounts.json",
              "--credentials-dir",
              "/path/to/custom/credentials"
            ]
          }
        }
      }
    ],
    "stars": 322
  },
  {
    "id": "mcp-server-mcp-hfspace",
    "name": "mcp-server-hfspace",
    "description": "Use HuggingFace Spaces directly from Claude. Use Open Source Image Generation, Chat, Vision tasks and more. Supports Image, Audio and text uploads/downloads.",
    "links": {
      "application": "https://github.com/evalstate/mcp-hfspace"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [],
    "stars": 240
  },
  {
    "id": "mcp-server-mcp-hn",
    "name": "mcp-server-erithwik-hn",
    "description": "An MCP server to search Hacker News, get top stories, and more.",
    "links": {
      "application": "https://github.com/erithwik/mcp-hn"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "web",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "mcp-hn": {
            "command": "uvx",
            "args": [
              "mcp-hn"
            ]
          }
        }
      }
    ],
    "stars": 28
  },
  {
    "id": "mcp-server-mcp-hydrolix",
    "name": "mcp-server-hydrolix",
    "description": "Hydrolix time-series datalake integration providing schema exploration and query capabilities to LLM-based workflows.",
    "links": {
      "application": "https://github.com/hydrolix/mcp-hydrolix"
    },
    "official": true,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "mcp-hydrolix": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "mcp-hydrolix",
              "--python",
              "3.13",
              "mcp-hydrolix"
            ],
            "env": {
              "HYDROLIX_HOST": "<hydrolix-host>",
              "HYDROLIX_USER": "<hydrolix-user>",
              "HYDROLIX_PASSWORD": "<hydrolix-password>"
            }
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-mcp-image-compression",
    "name": "mcp-server-image-compression",
    "description": "MCP server for local compression of various image formats.",
    "links": {
      "application": "https://github.com/InhiblabCore/mcp-image-compression"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development",
      "cloud"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "Image compression": {
            "command": "npx",
            "args": [
              "-y",
              "@inhiblab-core/mcp-image-compression"
            ],
            "env": {
              "IMAGE_COMPRESSION_DOWNLOAD_DIR": "<YOUR_DIR>"
            },
            "disabled": false,
            "autoApprove": []
          }
        }
      }
    ],
    "stars": 14
  },
  {
    "id": "mcp-server-mcp-installer",
    "name": "mcp-server-installer",
    "description": "An MCP server that installs other MCP servers for you.",
    "links": {
      "application": "https://github.com/anaisbetts/mcp-installer"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "storage",
      "integration"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "mcp-installer": {
          "command": "npx",
          "args": [
            "@anaisbetts/mcp-installer"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "mcp-installer": {
            "command": "npx",
            "args": [
              "@anaisbetts/mcp-installer"
            ]
          }
        }
      }
    ],
    "stars": 1031
  },
  {
    "id": "mcp-server-mcp-ipfs",
    "name": "mcp-server-ipfs",
    "description": "Upload and manipulation of IPFS storage.",
    "links": {
      "application": "https://github.com/alexbakers/mcp-ipfs"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "development",
      "storage",
      "cloud"
    ],
    "provider": "npx",
    "stars": 3,
    "config": [
      {
        "mcpServers": {
          "ipfs": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-ipfs"
            ],
            "env": {
              "W3_LOGIN_EMAIL": "your-email@example.com"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-mcp-jdbc-server",
    "name": "mcp-server-openlinksoftware-jdbc",
    "description": "An MCP server for generic Database Management System (DBMS) Connectivity via the Java Database Connectivity (JDBC) protocol.",
    "links": {
      "application": "https://github.com/OpenLinkSoftware/mcp-jdbc-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "integration",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "my_database": {
            "command": "java",
            "args": [
              "-jar",
              "/path/to/mcp-jdbc-server/MCPServer-1.0.0-runner.jar"
            ],
            "env": {
              "jdbc.url": "jdbc:virtuoso://localhost:1111",
              "jdbc.user": "username",
              "jdbc.password": "password",
              "jdbc.api_key": "sk-xxx"
            }
          }
        }
      }
    ],
    "stars": 1
  },
  {
    "id": "mcp-server-mcp-k8s",
    "name": "mcp-server-silenceper-k8s",
    "description": "Just describe your needs, and AI will accurately execute the corresponding cluster operations, greatly enhancing the usability of Kubernetes.",
    "links": {
      "application": "https://github.com/silenceper/mcp-k8s"
    },
    "official": false,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "development"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "mcp-k8s": {
            "url": "http://localhost:8080/sse",
            "args": []
          }
        }
      }
    ],
    "stars": 61
  },
  {
    "id": "mcp-server-mcp-k8s-go",
    "name": "mcp-server-k8s-go",
    "description": "Kubernetes cluster operations through MCP.",
    "links": {
      "application": "https://github.com/strowk/mcp-k8s-go"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "development",
      "cloud"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp_k8s": {
            "command": "mcp-k8s",
            "args": []
          }
        }
      }
    ],
    "stars": 267
  },
  {
    "id": "mcp-server-mcp-kibela",
    "name": "mcp-server-kj455-kibela",
    "description": "Allows AI models to interact with Kibela.",
    "links": {
      "application": "https://github.com/kj455/mcp-kibela"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration",
      "cloud",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 11
  },
  {
    "id": "mcp-server-mcp-kibela-server",
    "name": "mcp-server-kiwamizamurai-kibela",
    "description": "Powerfully interact with Kibela API.",
    "links": {
      "application": "https://github.com/kiwamizamurai/mcp-kibela-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration",
      "cloud",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "kibela": {
            "command": "npx",
            "args": [
              "-y",
              "@kiwamizamurai/mcp-kibela-server"
            ],
            "env": {
              "KIBELA_TEAM": "YOUR_TEAM_NAME",
              "KIBELA_TOKEN": "YOUR_TOKEN"
            }
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-mcp-linear",
    "name": "mcp-server-linear",
    "description": "Integrates with Linear project management system.",
    "links": {
      "application": "https://github.com/tacticlaunch/mcp-linear"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "linear": {
            "command": "npx",
            "args": [
              "-y",
              "@tacticlaunch/mcp-linear"
            ],
            "env": {
              "LINEAR_API_TOKEN": "<YOUR_TOKEN>"
            }
          }
        }
      }
    ],
    "stars": 63
  },
  {
    "id": "mcp-server-mcp-link",
    "name": "mcp-server-link",
    "description": "Seamlessly Integrate Any API with AI Agents (with OpenAPI Schema).",
    "links": {
      "application": "https://github.com/automation-ai-labs/mcp-link"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "@service-name": {
            "url": "http://localhost:8080/sse?s=[OpenAPI-Spec-URL]&u=[API-Base-URL]&h=[Auth-Header]:[Value-Prefix]"
          }
        }
      }
    ],
    "stars": 346
  },
  {
    "id": "mcp-server-mcp-log-proxy",
    "name": "mcp-server-log-proxy",
    "description": "MCP server proxy that offers a Web UI to the full message flow.",
    "links": {
      "application": "https://github.com/emicklei/mcp-log-proxy"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration",
      "web",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 3
  },
  {
    "id": "mcp-server-mcp-maigret",
    "name": "mcp-server-maigret",
    "description": "MCP server for maigret, a powerful OSINT tool that collects user account information from various public sources. This server provides tools for searching usernames across social networks and analyzing URLs.",
    "links": {
      "application": "https://github.com/BurtTheCoder/mcp-maigret"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "security",
      "cloud",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "maigret": {
            "command": "mcp-maigret",
            "env": {
              "MAIGRET_REPORTS_DIR": "/path/to/reports/directory"
            }
          }
        }
      },
      {
        "mcpServers": {
          "maigret": {
            "command": "node",
            "args": [
              "/absolute/path/to/mcp-maigret/build/index.js"
            ],
            "env": {
              "MAIGRET_REPORTS_DIR": "/path/to/reports/directory"
            }
          }
        }
      }
    ],
    "stars": 110
  },
  {
    "id": "mcp-server-mcp-manager",
    "name": "mcp-server-manager",
    "description": "Simple Web UI to install and manage MCP servers for Claude Desktop App.",
    "links": {
      "application": "https://github.com/zueai/mcp-manager"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "web",
      "storage",
      "research"
    ],
    "provider": "source",
    "config": [],
    "stars": 201
  },
  {
    "id": "mcp-server-mcp-memgraph",
    "name": "mcp-server-memgraph",
    "description": "Memgraph MCP Server - includes a tool to run a query against Memgraph and a schema resource.",
    "links": {
      "application": "https://github.com/memgraph/mcp-memgraph"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "cloud",
      "development"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "mpc-memgraph": {
            "command": "/Users/katelatte/.local/bin/uv",
            "args": [
              "--directory",
              "/Users/katelatte/projects/mcp-memgraph",
              "run",
              "server.py"
            ]
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-mcp-mifosx",
    "name": "mcp-server-mifosx",
    "description": "A core banking integration for managing clients, loans, savings, shares, financial transactions and generating financial reports.",
    "links": {
      "application": "https://github.com/openMF/mcp-mifosx"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 8
  },
  {
    "id": "mcp-server-mcp-miro",
    "name": "mcp-server-miro",
    "description": "Miro MCP server, exposing all functionalities available in official Miro SDK.",
    "links": {
      "application": "https://github.com/k-jarzyna/mcp-miro"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "miro": {
            "command": "npx",
            "args": [
              "-y",
              "@k-jarzyna/mcp-miro"
            ],
            "env": {
              "MIRO_ACCESS_TOKEN": "your_miro_access_token"
            }
          }
        }
      }
    ],
    "stars": 1
  },
  {
    "id": "mcp-server-mcp-mongo-server",
    "name": "mcp-server-kiliczsh-mongo",
    "description": "A Model Context Protocol Server for MongoDB.",
    "links": {
      "application": "https://github.com/kiliczsh/mcp-mongo-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "database",
      "cloud",
      "web",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mongodb-env": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-mongo-server"
            ],
            "env": {
              "MCP_MONGODB_URI": "mongodb://muhammed:kilic@localhost:27017/database",
              "MCP_MONGODB_READONLY": "true"
            }
          }
        }
      }
    ],
    "stars": 181
  },
  {
    "id": "mcp-server-mcp-monitor",
    "name": "mcp-server-monitor",
    "description": "A system monitoring tool that exposes system metrics via the Model Context Protocol (MCP). This tool allows LLMs to retrieve real-time system information through an MCP-compatible interface.support CPUMemoryDiskNetworkHostProcess.",
    "links": {
      "application": "https://github.com/seekrays/mcp-monitor"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "monitoring"
    ],
    "provider": "source",
    "config": [],
    "stars": 28
  },
  {
    "id": "mcp-server-mcp-mysql-server",
    "name": "mcp-server-f4ww4z-mysql",
    "description": "Node.js-based MySQL database integration that provides secure MySQL database operations.",
    "links": {
      "application": "https://github.com/f4ww4z/mcp-mysql-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "database",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mysql": {
            "command": "npx",
            "args": [
              "-y",
              "@f4ww4z/mcp-mysql-server"
            ],
            "env": {
              "MYSQL_HOST": "your_host",
              "MYSQL_USER": "your_user",
              "MYSQL_PASSWORD": "your_password",
              "MYSQL_DATABASE": "your_database"
            }
          }
        }
      }
    ],
    "stars": 61
  },
  {
    "id": "mcp-server-mcp-neo4j",
    "name": "mcp-server-neo4j",
    "description": "Model Context Protocol with Neo4j (Run queries, Knowledge Graph Memory, Manaage Neo4j Aura Instances).",
    "links": {
      "application": "https://github.com/neo4j-contrib/mcp-neo4j"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 268
  },
  {
    "id": "mcp-server-mcp-nixos",
    "name": "mcp-server-nixos",
    "description": "MCP server providing accurate information about NixOS packages, system options, Home Manager configurations, and nix-darwin macOS settings to prevent AI hallucinations.",
    "links": {
      "application": "https://github.com/utensils/mcp-nixos"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "nixos": {
            "command": "uvx",
            "args": [
              "mcp-nixos"
            ]
          }
        }
      }
    ],
    "stars": 78
  },
  {
    "id": "mcp-server-mcp-notion-server",
    "name": "mcp-server-suekou-notion",
    "description": "Interacting with Notion API.",
    "links": {
      "application": "https://github.com/suekou/mcp-notion-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "notion": {
            "command": "npx",
            "args": [
              "-y",
              "@suekou/mcp-notion-server"
            ],
            "env": {
              "NOTION_API_TOKEN": "your-integration-token"
            }
          }
        }
      }
    ],
    "stars": 671
  },
  {
    "id": "mcp-server-mcp-nutanix",
    "name": "mcp-server-nutanix",
    "description": "Go-based MCP Server for interfacing with Nutanix Prism Central resources.",
    "links": {
      "application": "https://github.com/thunderboltsid/mcp-nutanix"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration",
      "cloud"
    ],
    "provider": "source",
    "config": [],
    "stars": 5
  },
  {
    "id": "mcp-server-mcp-obsidian",
    "name": "mcp-server-obsidian",
    "description": "Interacting with Obsidian via REST API.",
    "links": {
      "application": "https://github.com/MarkusPfundstein/mcp-obsidian"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "web",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-obsidian": {
            "command": "uvx",
            "args": [
              "mcp-obsidian"
            ],
            "env": {
              "OBSIDIAN_API_KEY": "<YOUR_OBSIDIAN_API_KEY>"
            }
          }
        }
      }
    ],
    "stars": 764
  },
  {
    "id": "mcp-server-mcp-odbc-server",
    "name": "mcp-server-odbc",
    "description": "An MCP server for generic Database Management System (DBMS) Connectivity via the Open Database Connectivity (ODBC) protocol.",
    "links": {
      "application": "https://github.com/OpenLinkSoftware/mcp-odbc-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "integration",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "ODBC": {
            "command": "/path/to/.nvm/versions/node/v21.1.0/bin/node",
            "args": [
              "/path/to/mcp-odbc-server/node_modules/.bin/tsx",
              "/path/to/mcp-odbc-server/src/main.ts"
            ],
            "env": {
              "ODBCINI": "/Library/ODBC/odbc.ini",
              "NODE_VERSION": "v21.1.0",
              "PATH": "~/.nvm/versions/node/v21.1.0/bin:${PATH}"
            },
            "disabled": false,
            "autoApprove": []
          }
        }
      },
      {
        "mcpServers": {
          "ODBC": {
            "command": "/path/to/.nvm/versions/node/v21.1.0/bin/node",
            "args": [
              "/path/to/mcp-odbc-server/node_modules/.bin/tsx",
              "/path/to/mcp-odbc-server/src/main.ts"
            ],
            "env": {
              "ODBCINI": "/Library/ODBC/odbc.ini",
              "NODE_VERSION": "v21.1.0",
              "PATH": "/path/to/.nvm/versions/node/v21.1.0/bin:${PATH}"
            },
            "disabled": false,
            "autoApprove": []
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-mcp-open-library",
    "name": "mcp-server-open-library",
    "description": "An MCP server for the Open Library API that enables AI assistants to search for book information.",
    "links": {
      "application": "https://github.com/8enSmith/mcp-open-library"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "integration",
      "development",
      "cloud"
    ],
    "provider": "npx",
    "stars": 3,
    "config": []
  },
  {
    "id": "mcp-server-mcp-openai",
    "name": "mcp-server-mzxrai-openai",
    "description": "Chat with OpenAI's smartest models.",
    "links": {
      "application": "https://github.com/mzxrai/mcp-openai"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-openai": {
            "command": "npx",
            "args": [
              "-y",
              "@mzxrai/mcp-openai@latest"
            ],
            "env": {
              "OPENAI_API_KEY": "your-api-key-here (get one from https://platform.openai.com/api-keys)"
            }
          }
        }
      }
    ],
    "stars": 44
  },
  {
    "id": "mcp-server-mcp-openapi",
    "name": "mcp-server-reapi-com-openapi",
    "description": "MCP server that lets LLMs know everything about your OpenAPI specifications to discover, explain and generate code/mock data.",
    "links": {
      "application": "https://github.com/ReAPI-com/mcp-openapi"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "@reapi/mcp-openapi": {
            "command": "npx",
            "args": [
              "-y",
              "@reapi/mcp-openapi@latest",
              "--dir",
              "./specs"
            ],
            "env": {}
          }
        }
      }
    ],
    "stars": 32
  },
  {
    "id": "mcp-server-mcp-openapi-schema-explorer",
    "name": "mcp-server-openapi-schema-explorer",
    "description": "Token-efficient access to OpenAPI/Swagger specs via MCP Resources.",
    "links": {
      "application": "https://github.com/kadykov/mcp-openapi-schema-explorer"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "My API Spec (npx)": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-openapi-schema-explorer@latest",
              "<path-or-url-to-spec>",
              "--output-format",
              "yaml"
            ],
            "env": {}
          }
        }
      }
    ],
    "stars": 3
  },
  {
    "id": "mcp-server-mcp-package-version",
    "name": "mcp-server-package-version",
    "description": "An MCP Server to help LLMs suggest the latest stable package versions when writing code.",
    "links": {
      "application": "https://github.com/sammcj/mcp-package-version"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "cloud",
      "research",
      "development"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "package-version": {
            "command": "/Users/sammcj/go/bin/mcp-package-version"
          }
        }
      }
    ],
    "stars": 80
  },
  {
    "id": "mcp-server-mcp-pandoc",
    "name": "mcp-server-pandoc",
    "description": "MCP server for seamless document format conversion using Pandoc, supporting Markdown, HTML, PDF, DOCX (.docx), csv and more.",
    "links": {
      "application": "https://github.com/vivekVells/mcp-pandoc"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "web",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-pandoc": {
            "command": "uv",
            "args": [
              "--directory",
              "YOUR_VALUE/mcp-pandoc",
              "run",
              "mcp-pandoc"
            ]
          }
        }
      }
    ],
    "stars": 181
  },
  {
    "id": "mcp-server-mcp-paperswithcode",
    "name": "mcp-server-paperswithcode",
    "description": "MCP to search through PapersWithCode API.",
    "links": {
      "application": "https://github.com/hbg/mcp-paperswithcode"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "research",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 4
  },
  {
    "id": "mcp-server-mcp-pinecone",
    "name": "mcp-server-pinecone",
    "description": "Pinecone integration with vector search capabilities.",
    "links": {
      "application": "https://github.com/sirmews/mcp-pinecone"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "web",
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "mcp-pinecone": {
          "command": "uv",
          "args": [
            "--directory",
            "{project_dir}",
            "run",
            "mcp-pinecone"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "mcp-pinecone": {
            "command": "uv",
            "args": [
              "--directory",
              "{project_dir}",
              "run",
              "mcp-pinecone"
            ]
          }
        }
      }
    ],
    "stars": 114
  },
  {
    "id": "mcp-server-mcp-playwright",
    "name": "mcp-server-executeautomation-playwright",
    "description": "An MCP server using Playwright for browser automation and webscrapping.",
    "links": {
      "application": "https://github.com/executeautomation/mcp-playwright"
    },
    "official": false,
    "runtime": "node",
    "scope": "unknown",
    "tags": [
      "web",
      "development",
      "integration"
    ],
    "provider": "npx",
    "stars": 3337,
    "config": [
      {
        "mcpServers": {
          "playwright": {
            "command": "npx",
            "args": [
              "-y",
              "@executeautomation/playwright-mcp-server"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-mcp-ragdocs",
    "name": "mcp-server-ragdocs",
    "description": "An MCP server implementation that provides tools for retrieving and processing documentation through vector search, enabling AI assistants to augment their responses with relevant documentation context.",
    "links": {
      "application": "https://github.com/hannesrudolph/mcp-ragdocs"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "database",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "rag-docs": {
            "command": "npx",
            "args": [
              "-y",
              "@hannesrudolph/mcp-ragdocs"
            ],
            "env": {
              "OPENAI_API_KEY": "",
              "QDRANT_URL": "",
              "QDRANT_API_KEY": ""
            }
          }
        }
      }
    ],
    "stars": 156
  },
  {
    "id": "mcp-server-mcp-recon",
    "name": "mcp-server-recon",
    "description": "Conversational recon interface and MCP server powered by httpx and asnmap. Supports various reconnaissance levels for domain analysis, security header inspection, certificate analysis, and ASN lookup.",
    "links": {
      "application": "https://github.com/nickpending/mcp-recon"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "security",
      "cloud"
    ],
    "provider": "source",
    "config": [],
    "stars": 7
  },
  {
    "id": "mcp-server-mcp-redis",
    "name": "mcp-server-redis",
    "description": "The Redis official MCP Server offers an interface to manage and search data in Redis.",
    "links": {
      "application": "https://github.com/redis/mcp-redis"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "cloud",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 26
  },
  {
    "id": "mcp-server-mcp-redis-cloud",
    "name": "mcp-server-redis-cloud",
    "description": "Manage your Redis Cloud resources effortlessly using natural language. Create databases, monitor subscriptions, and configure cloud deployments with simple commands.",
    "links": {
      "application": "https://github.com/redis/mcp-redis-cloud"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-redis-cloud": {
            "command": "node",
            "args": [
              "--experimental-fetch",
              "<absolute_path_to_project_root>/dist/index.js"
            ],
            "env": {
              "API_KEY": "<redis_cloud_api_key>",
              "SECRET_KEY": "<redis_cloud_api_secret_key>"
            }
          }
        }
      },
      {
        "mcpServers": {
          "mcp-redis-cloud": {
            "command": "node",
            "args": [
              "--experimental-fetch",
              "<absolute_path_to_project_root>/dist/index.js"
            ],
            "env": {
              "API_KEY": "<redis_cloud_api_key>",
              "SECRET_KEY": "<redis_cloud_api_secret_key>"
            }
          }
        }
      }
    ],
    "stars": 16
  },
  {
    "id": "mcp-server-mcp-remote-call-ping-pong",
    "name": "mcp-server-remote-call-ping-pong",
    "description": "An experimental and educational app for Ping-pong server demonstrating remote MCP (Model Context Protocol) calls.",
    "links": {
      "application": "https://github.com/kimtth/mcp-remote-call-ping-pong"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "web"
    ],
    "provider": "source",
    "config": [],
    "stars": 1
  },
  {
    "id": "mcp-server-mcp-salesforce-example",
    "name": "mcp-server-salesforce-example",
    "description": "MCP server with basic demonstration of interactions with Salesforce instance.",
    "links": {
      "application": "https://github.com/lciesielski/mcp-salesforce-example"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 1
  },
  {
    "id": "mcp-server-mcp-searxng",
    "name": "mcp-server-ihor-sokoliuk-searxng",
    "description": "A Model Context Protocol Server for SearXNG.",
    "links": {
      "application": "https://github.com/ihor-sokoliuk/mcp-searxng"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "research",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "searxng": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-searxng"
            ],
            "env": {
              "SEARXNG_URL": "YOUR_SEARXNG_INSTANCE_URL"
            }
          }
        }
      }
    ],
    "stars": 73
  },
  {
    "id": "mcp-server-mcp-shell-server",
    "name": "mcp-server-shell",
    "description": "A secure shell command execution server implementing the Model Context Protocol (MCP).",
    "links": {
      "application": "https://github.com/tumf/mcp-shell-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "automation",
      "integration",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "shell": {
            "command": "uvx",
            "args": [
              "mcp-shell-server"
            ],
            "env": {
              "ALLOW_COMMANDS": "ls,cat,pwd,grep,wc,touch,find"
            }
          }
        }
      }
    ],
    "stars": 70
  },
  {
    "id": "mcp-server-mcp-shodan",
    "name": "mcp-server-shodan",
    "description": "MCP server for querying the Shodan API and Shodan CVEDB. This server provides tools for IP lookups, device searches, DNS lookups, vulnerability queries, CPE lookups, and more.",
    "links": {
      "application": "https://github.com/BurtTheCoder/mcp-shodan"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "security",
      "integration",
      "research",
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "shodan": {
            "command": "mcp-shodan",
            "env": {
              "SHODAN_API_KEY": "your-shodan-api-key"
            }
          }
        }
      },
      {
        "mcpServers": {
          "shodan": {
            "command": "node",
            "args": [
              "/absolute/path/to/mcp-shodan/build/index.js"
            ],
            "env": {
              "SHODAN_API_KEY": "your-shodan-api-key"
            }
          }
        }
      },
      {
        "mcpServers": {
          "shodan": {
            "command": "mcp-shodan",
            "env": {
              "SHODAN_API_KEY": "your-actual-api-key-here"
            }
          }
        }
      }
    ],
    "stars": 34
  },
  {
    "id": "mcp-server-mcp-simple-arxiv",
    "name": "mcp-server-simple-arxiv",
    "description": "MCP for LLM to search and read papers from arXiv.",
    "links": {
      "application": "https://github.com/andybrandt/mcp-simple-arxiv"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "research",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "simple-arxiv": {
            "command": "python",
            "args": [
              "-m",
              "mcp_simple_arxiv"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "simple-arxiv": {
            "command": "C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Programs\\Python\\Python311\\python.exe",
            "args": [
              "-m",
              "mcp_simple_arxiv"
            ]
          }
        }
      }
    ],
    "stars": 81
  },
  {
    "id": "mcp-server-mcp-simple-openai-assistant",
    "name": "mcp-server-simple-openai-assistant",
    "description": "MCP to talk to OpenAI assistants (Claude can use any GPT model as his assitant).",
    "links": {
      "application": "https://github.com/andybrandt/mcp-simple-openai-assistant"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "openai-assistant": {
            "command": "python",
            "args": [
              "-m",
              "mcp_simple_openai_assistant"
            ],
            "env": {
              "OPENAI_API_KEY": "your-api-key-here"
            }
          }
        }
      }
    ],
    "stars": 24
  },
  {
    "id": "mcp-server-mcp-simple-pubmed",
    "name": "mcp-server-simple-pubmed",
    "description": "MCP to search and read medical / life sciences papers from PubMed.",
    "links": {
      "application": "https://github.com/andybrandt/mcp-simple-pubmed"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "web",
      "research",
      "integration",
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "simple-pubmed": {
            "command": "python",
            "args": [
              "-m",
              "mcp_simple_pubmed"
            ],
            "env": {
              "PUBMED_EMAIL": "your-email@example.com",
              "PUBMED_API_KEY": "your-api-key"
            }
          }
        }
      },
      {
        "mcpServers": {
          "simple-pubmed": {
            "command": "C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Programs\\Python\\Python311\\python.exe",
            "args": [
              "-m",
              "mcp_simple_pubmed"
            ],
            "env": {
              "PUBMED_EMAIL": "your-email@example.com",
              "PUBMED_API_KEY": "your-api-key"
            }
          }
        }
      }
    ],
    "stars": 68
  },
  {
    "id": "mcp-server-mcp-simple-timeserver",
    "name": "mcp-server-simple-timeserver",
    "description": "An MCP server that allows checking local time on the client machine or current UTC time from an NTP server.",
    "links": {
      "application": "https://github.com/andybrandt/mcp-simple-timeserver"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "simple-timeserver": {
          "command": "python",
          "args": [
            "-m",
            "mcp_simple_timeserver"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "simple-timeserver": {
            "command": "python",
            "args": [
              "-m",
              "mcp_simple_timeserver"
            ]
          }
        }
      }
    ],
    "stars": 13
  },
  {
    "id": "mcp-server-mcp-snowflake-server",
    "name": "mcp-server-snowflake",
    "description": "Snowflake integration implementing read and (optional) write operations as well as insight tracking.",
    "links": {
      "application": "https://github.com/isaacwasserman/mcp-snowflake-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "web",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "snowflake_pip": {
            "command": "uvx",
            "args": [
              "--python=3.12",
              "mcp_snowflake_server",
              "--account",
              "your_account",
              "--warehouse",
              "your_warehouse",
              "--user",
              "your_user",
              "--password",
              "your_password",
              "--role",
              "your_role",
              "--database",
              "your_database",
              "--schema",
              "your_schema"
            ]
          }
        }
      }
    ],
    "stars": 62
  },
  {
    "id": "mcp-server-mcp-sqlalchemy-server",
    "name": "mcp-server-sqlalchemy",
    "description": "An MCP server for generic Database Management System (DBMS) Connectivity via SQLAlchemy using Python ODBC (pyodbc).",
    "links": {
      "application": "https://github.com/OpenLinkSoftware/mcp-sqlalchemy-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "integration",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "my_database": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/mcp-sqlalchemy-server",
              "run",
              "mcp-sqlalchemy-server"
            ],
            "env": {
              "ODBC_DSN": "dsn_name",
              "ODBC_USER": "username",
              "ODBC_PASSWORD": "password",
              "API_KEY": "sk-xxx"
            }
          }
        }
      }
    ],
    "stars": 9
  },
  {
    "id": "mcp-server-mcp-sqlite",
    "name": "mcp-server-jparkerweb-sqlite",
    "description": "Model Context Protocol (MCP) server that provides comprehensive SQLite database interaction capabilities.",
    "links": {
      "application": "https://github.com/jparkerweb/mcp-sqlite"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "MCP SQLite Server": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-sqlite",
              "YOUR_VALUE"
            ]
          }
        }
      }
    ],
    "stars": 6
  },
  {
    "id": "mcp-server-mcp-summarizer",
    "name": "mcp-server-summarizer",
    "description": "AI Summarization MCP Server, Support for multiple content types: Plain text, Web pages, PDF documents, EPUB books, HTML content.",
    "links": {
      "application": "https://github.com/0xshellming/mcp-summarizer"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "remote",
    "tags": [],
    "provider": "source",
    "config": [],
    "stars": 70
  },
  {
    "id": "mcp-server-mcp-teams-server",
    "name": "mcp-server-teams",
    "description": "MCP server that integrates Microsoft Teams messaging (read, post, mention, list members and threads).",
    "links": {
      "application": "https://github.com/InditexTech/mcp-teams-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "communication",
      "development"
    ],
    "provider": "docker",
    "config": [],
    "stars": 169
  },
  {
    "id": "mcp-server-mcp-text-editor",
    "name": "mcp-server-text-editor",
    "description": "A line-oriented text file editor. Optimized for LLM tools with efficient partial file access to minimize token usage.",
    "links": {
      "application": "https://github.com/tumf/mcp-text-editor"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "storage",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "text-editor": {
            "command": "uvx",
            "args": [
              "mcp-text-editor"
            ]
          }
        }
      }
    ],
    "stars": 89
  },
  {
    "id": "mcp-server-mcp-timeplus",
    "name": "mcp-server-timeplus",
    "description": "MCP server for Apache Kafka and Timeplus. Able to list Kafka topics, poll Kafka messages, save Kafka data locally and query streaming data with SQL via Timeplus.",
    "links": {
      "application": "https://github.com/jovezhong/mcp-timeplus"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "cloud"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "mcp-clickhouse": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "mcp-clickhouse",
              "--python",
              "3.13",
              "mcp-clickhouse"
            ],
            "env": {
              "CLICKHOUSE_HOST": "<clickhouse-host>",
              "CLICKHOUSE_PORT": "<clickhouse-port>",
              "CLICKHOUSE_USER": "<clickhouse-user>",
              "CLICKHOUSE_PASSWORD": "<clickhouse-password>",
              "CLICKHOUSE_SECURE": "true",
              "CLICKHOUSE_VERIFY": "true",
              "CLICKHOUSE_CONNECT_TIMEOUT": "30",
              "CLICKHOUSE_SEND_RECEIVE_TIMEOUT": "30"
            }
          }
        }
      },
      {
        "mcpServers": {
          "mcp-clickhouse": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "mcp-clickhouse",
              "--python",
              "3.13",
              "mcp-clickhouse"
            ],
            "env": {
              "CLICKHOUSE_HOST": "sql-clickhouse.clickhouse.com",
              "CLICKHOUSE_PORT": "8443",
              "CLICKHOUSE_USER": "demo",
              "CLICKHOUSE_PASSWORD": "",
              "CLICKHOUSE_SECURE": "true",
              "CLICKHOUSE_VERIFY": "true",
              "CLICKHOUSE_CONNECT_TIMEOUT": "30",
              "CLICKHOUSE_SEND_RECEIVE_TIMEOUT": "30"
            }
          }
        }
      },
      {
        "mcpServers": {
          "mcp-clickhouse": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "mcp-clickhouse",
              "--python",
              "3.13",
              "mcp-clickhouse"
            ],
            "env": {
              "CLICKHOUSE_HOST": "<clickhouse-host>",
              "CLICKHOUSE_USER": "<clickhouse-user>",
              "CLICKHOUSE_PASSWORD": "<clickhouse-password>",
              "CLICKHOUSE_DATABASE": "<optional-database>"
            }
          }
        }
      }
    ],
    "stars": 8
  },
  {
    "id": "mcp-server-mcp-tinybird",
    "name": "mcp-server-tinybird",
    "description": "An MCP server to interact with a Tinybird Workspace from any MCP client.",
    "links": {
      "application": "https://github.com/tinybirdco/mcp-tinybird"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "storage",
      "development",
      "database"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "mcp-tinybird": {
          "command": "uvx",
          "args": [
            "mcp-tinybird"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "mcp-tinybird": {
            "command": "uvx",
            "args": [
              "mcp-tinybird",
              "stdio"
            ],
            "env": {
              "TB_API_URL": "<TINYBIRD_API_URL>",
              "TB_ADMIN_TOKEN": "<TINYBIRD_ADMIN_TOKEN>"
            }
          }
        }
      }
    ],
    "stars": 60
  },
  {
    "id": "mcp-server-mcp-toolbox-for-databases",
    "name": "mcp-server-toolbox-for-databases",
    "description": "Open source MCP server specializing in easy, fast, and secure tools for Databases.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "security",
      "database"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "mcp-toolbox-for-databases": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-db-toolbox"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-mcp-trino",
    "name": "mcp-server-tuannvm-trino",
    "description": "A Go implementation of a Model Context Protocol (MCP) server for Trino.",
    "links": {
      "application": "https://github.com/tuannvm/mcp-trino"
    },
    "official": false,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "database",
      "cloud",
      "development"
    ],
    "provider": "github-release",
    "config": [
      {
        "mcpServers": {
          "mcp-trino": {
            "command": "mcp-trino",
            "args": [],
            "env": {
              "TRINO_HOST": "<HOST>",
              "TRINO_PORT": "<PORT>",
              "TRINO_USER": "<USERNAME>",
              "TRINO_PASSWORD": "<PASSWORD>"
            }
          }
        }
      },
      {
        "mcpServers": {
          "mcp-trino-http": {
            "url": "http://localhost:9097/sse"
          }
        }
      },
      {
        "mcpServers": {
          "mcp-trino": {
            "command": "mcp-trino",
            "args": [],
            "env": {
              "TRINO_HOST": "<HOST>",
              "TRINO_PORT": "<PORT>",
              "TRINO_USER": "<USERNAME>",
              "TRINO_PASSWORD": "<PASSWORD>"
            }
          }
        }
      },
      {
        "mcpServers": {
          "mcp-trino": {
            "command": "mcp-trino",
            "args": [],
            "env": {
              "TRINO_HOST": "<HOST>",
              "TRINO_PORT": "<PORT>",
              "TRINO_USER": "<USERNAME>",
              "TRINO_PASSWORD": "<PASSWORD>"
            }
          }
        }
      },
      {
        "mcpServers": {
          "mcp-trino": {
            "command": "mcp-trino",
            "args": [],
            "env": {
              "TRINO_HOST": "<HOST>",
              "TRINO_PORT": "<PORT>",
              "TRINO_USER": "<USERNAME>",
              "TRINO_PASSWORD": "<PASSWORD>"
            }
          }
        }
      }
    ],
    "stars": 18
  },
  {
    "id": "mcp-server-mcp-twikit",
    "name": "mcp-server-twikit",
    "description": "Interact with Twitter search and timeline.",
    "links": {
      "application": "https://github.com/adhikasp/mcp-twikit"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "communication",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 155
  },
  {
    "id": "mcp-server-mcp-twitter",
    "name": "mcp-server-twitter",
    "description": "All-in-one Twitter management solution providing timeline access, user tweet retrieval, hashtag monitoring, conversation analysis, direct messaging, sentiment analysis of a post, and complete post lifecycle control - all through a streamlined API.",
    "links": {
      "application": "https://github.com/LuniaKunal/mcp-twitter"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [],
    "provider": "source",
    "config": [],
    "stars": 2
  },
  {
    "id": "mcp-server-mcp-typescribe",
    "name": "mcp-server-typescribe",
    "description": "MCP server that provides Typescript API information efficiently to the agent to enable it to work with untrained APIs.",
    "links": {
      "application": "https://github.com/yWorks/mcp-typescribe"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "typescribe": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-typescribe@latest",
              "run-server",
              "<PATH_TO_API_DOT_JSON>"
            ],
            "env": {}
          }
        }
      }
    ],
    "stars": 14
  },
  {
    "id": "mcp-server-mcp-unity",
    "name": "mcp-server-unity",
    "description": "MCP Server for Unity3d Game Engine integration for game development.",
    "links": {
      "application": "https://github.com/CoderGamester/mcp-unity"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "gaming",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-unity": {
            "command": "node",
            "args": [
              "ABSOLUTE/PATH/TO/mcp-unity/Server/build/index.js"
            ]
          }
        }
      }
    ],
    "stars": 441
  },
  {
    "id": "mcp-server-mcp-vegalite-server",
    "name": "mcp-server-vegalite",
    "description": "Generate visualizations from fetched data using the VegaLite format and renderer.",
    "links": {
      "application": "https://github.com/isaacwasserman/mcp-vegalite-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 55
  },
  {
    "id": "mcp-server-mcp-virustotal",
    "name": "mcp-server-virustotal",
    "description": "MCP server for querying the VirusTotal API. This server provides tools for scanning URLs, analyzing file hashes, and retrieving IP address reports.",
    "links": {
      "application": "https://github.com/BurtTheCoder/mcp-virustotal"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "security",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "virustotal": {
            "command": "mcp-virustotal",
            "env": {
              "VIRUSTOTAL_API_KEY": "your-virustotal-api-key"
            }
          }
        }
      },
      {
        "mcpServers": {
          "virustotal": {
            "command": "node",
            "args": [
              "--experimental-modules",
              "/absolute/path/to/mcp-virustotal/build/index.js"
            ],
            "env": {
              "VIRUSTOTAL_API_KEY": "your-virustotal-api-key"
            }
          }
        }
      }
    ],
    "stars": 45
  },
  {
    "id": "mcp-server-mcp-webresearch",
    "name": "mcp-server-webresearch",
    "description": "Search Google and do deep web research on any topic.",
    "links": {
      "application": "https://github.com/mzxrai/mcp-webresearch"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "research",
      "web"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "webresearch": {
            "command": "npx",
            "args": [
              "-y",
              "@mzxrai/mcp-webresearch@latest"
            ]
          }
        }
      }
    ],
    "stars": 241
  },
  {
    "id": "mcp-server-mcp-wecombot-server.git",
    "name": "mcp-server-wecombot.git",
    "description": "An MCP server application that sends various types of messages to the WeCom group robot.",
    "links": {
      "application": "https://github.com/gotoolkits/mcp-wecombot-server.git"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "remote",
    "tags": [
      "communication"
    ],
    "provider": "source",
    "config": []
  },
  {
    "id": "mcp-server-mcp-wolframalpha",
    "name": "mcp-server-wolframalpha",
    "description": "An MCP server lets AI assistants use the Wolfram Alpha API for real-time access to computational knowledge and data.",
    "links": {
      "application": "https://github.com/ricocf/mcp-wolframalpha"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "research",
      "integration",
      "development"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "WolframAlphaServer": {
            "command": "python3",
            "args": [
              "/path/to/src/core/server.py"
            ]
          }
        }
      }
    ],
    "stars": 6
  },
  {
    "id": "mcp-server-mcp-xrpl",
    "name": "mcp-server-xrpl",
    "description": "MCP server for the XRP Ledger that provides access to account information, transaction history, and network data. Allows querying ledger objects, submitting transactions, and monitoring the XRPL network.",
    "links": {
      "application": "https://github.com/RomThpt/mcp-xrpl"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 3
  },
  {
    "id": "mcp-server-mcp-youtube",
    "name": "mcp-server-anaisbetts-youtube",
    "description": "Fetch YouTube subtitles.",
    "links": {
      "application": "https://github.com/anaisbetts/mcp-youtube"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 312
  },
  {
    "id": "mcp-server-mcp-zenml",
    "name": "mcp-server-zenml-io-zenml-io-zenml",
    "description": "An MCP server to connect with your ZenML MLOps and LLMOps pipelines.",
    "links": {
      "application": "https://github.com/zenml-io/mcp-zenml"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "zenml": {
            "command": "/usr/local/bin/uv",
            "args": [
              "run",
              "path/to/zenml_server.py"
            ],
            "env": {
              "LOGLEVEL": "INFO",
              "NO_COLOR": "1",
              "PYTHONUNBUFFERED": "1",
              "PYTHONIOENCODING": "UTF-8",
              "ZENML_STORE_URL": "https://your-zenml-server-goes-here.com",
              "ZENML_STORE_API_KEY": "your-api-key-here"
            }
          }
        }
      }
    ],
    "stars": 17
  },
  {
    "id": "mcp-server-mcp-zotero",
    "name": "mcp-server-zotero",
    "description": "A connector for LLMs to work with collections and sources on your Zotero Cloud.",
    "links": {
      "application": "https://github.com/kaliaboi/mcp-zotero"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "research"
    ],
    "provider": "npx",
    "config": [],
    "stars": 85
  },
  {
    "id": "mcp-server-mcpProxy",
    "name": "mcp-server-mcpProxy",
    "description": "Connect to JetBrains IDE.",
    "links": {
      "application": "https://github.com/JetBrains/mcpProxy"
    },
    "official": true,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "jetbrains": {
            "command": "npx",
            "args": [
              "-y",
              "@jetbrains/mcp-proxy"
            ]
          }
        }
      }
    ],
    "stars": 582
  },
  {
    "id": "mcp-server-mcp_polygon",
    "name": "mcp-server-mcp_polygon",
    "description": "An MCP server that provides access to Polygon.io financial market data APIs for stocks, indices, forex, options, and more.",
    "links": {
      "application": "https://github.com/polygon-io/mcp_polygon"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "finance",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "polygon": {
            "command": "<path_to_your_uvx_install>/uvx",
            "args": [
              "--from",
              "git+https://github.com/polygon-io/mcp_polygon@master",
              "mcp_polygon"
            ],
            "env": {
              "POLYGON_API_KEY": "<your_api_key_here>",
              "HOME": "<your_home_directory>"
            }
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-mcp_safe_local_python_executor",
    "name": "mcp-server-mcp_safe_local_python_executor",
    "description": "Safe Python interpreter based on HF Smolagents `LocalPythonExecutor`.",
    "links": {
      "application": "https://github.com/maxim-saplin/mcp_safe_local_python_executor"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "cloud",
      "automation",
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "safe-local-python-executor": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/mcp_local_python_executor/",
              "run",
              "mcp_server.py"
            ]
          }
        }
      }
    ],
    "stars": 15
  },
  {
    "id": "mcp-server-mcp_vms",
    "name": "mcp-server-mcp_vms",
    "description": "A Model Context Protocol (MCP) server designed to connect to a CCTV recording program (VMS) to retrieve recorded and live video streams. It also provides tools to control the VMS software, such as showing live or playback dialogs for specific channels at specified times.",
    "links": {
      "application": "https://github.com/jyjune/mcp_vms"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "security",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "vms": {
            "command": "uv",
            "args": [
              "--directory",
              "X:\\path\\to\\mcp-vms",
              "run",
              "mcp_vms.py"
            ]
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-mcp_zoomeye",
    "name": "mcp-server-mcp_zoomeye",
    "description": "Querying network asset information by ZoomEye MCP Server.",
    "links": {
      "application": "https://github.com/zoomeye-ai/mcp_zoomeye"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "research",
      "integration",
      "development"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "zoomeye": {
          "command": "uvx",
          "args": [
            "mcp-server-zoomeye"
          ],
          "env": {
            "ZOOMEYE_API_KEY": "your_api_key_here"
          }
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "zoomeye": {
            "command": "uvx",
            "args": [
              "mcp-server-zoomeye"
            ],
            "env": {
              "ZOOMEYE_API_KEY": "your_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 25
  },
  {
    "id": "mcp-server-mcpmcp-server",
    "name": "mcp-server-mcpmcp",
    "description": "A list of MCP servers so you can ask your client which servers you can use to improve your daily workflow.",
    "links": {
      "application": "https://github.com/glenngillen/mcpmcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "stars": 1,
    "config": [
      {
        "mcpServers": {
          "mcpmcp": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-remote@latest",
              "https://mcpmcp.io/mcp"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-meilisearch",
    "name": "mcp-server-meilisearch",
    "description": "Interact & query with Meilisearch (Full-text & semantic search API).",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "meilisearch": {
            "command": "npx",
            "args": [
              "-y",
              "meilisearch-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-melrose-mcp",
    "name": "mcp-server-melrose",
    "description": "Plays Melrse music expressions as MIDI.",
    "links": {
      "application": "https://github.com/emicklei/melrose/tree/master/cmd/melrose-mcp"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "research"
    ],
    "provider": "source",
    "config": [],
    "stars": 189
  },
  {
    "id": "mcp-server-mem0-mcp",
    "name": "mcp-server-mem0",
    "description": "A Model Context Protocol server for Mem0 that helps manage coding preferences and patterns, providing tools for storing, retrieving and semantically handling code implementations, best practices and technical documentation in IDEs like Cursor and Windsurf.",
    "links": {
      "application": "https://github.com/mem0ai/mem0-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 141
  },
  {
    "id": "mcp-server-membase-mcp",
    "name": "mcp-server-membase",
    "description": "Save and query your agent memory in distributed way by Membase.",
    "links": {
      "application": "https://github.com/unibaseio/membase-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "membase": {
            "command": "uv",
            "args": [
              "--directory",
              "path/to/membase-mcp",
              "run",
              "src/membase_mcp/server.py"
            ],
            "env": {
              "MEMBASE_ACCOUNT": "your account, 0x...",
              "MEMBASE_CONVERSATION_ID": "your conversation id, should be unique",
              "MEMBASE_ID": "your sub account, any string"
            }
          }
        }
      }
    ],
    "stars": 3
  },
  {
    "id": "mcp-server-memory",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-memory",
    "description": "MCP server for enabling memory for Claude through a knowledge graph",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-memory",
      "application": "https://modelcontextprotocol.io"
    },
    "tags": [
      "automation",
      "development",
      "research"
    ],
    "official": false,
    "scope": "standalone",
    "mutitenant": false,
    "runtime": "node",
    "version": "2025.4.25",
    "requiresConfiguration": false,
    "requiresStorage": true,
    "rating": {
      "hash": "07e83596758791b8eedbaea7448ff1a9e3a079985895627d825a4fa9092d1517",
      "reason": "Tool names are clear and consistent. Descriptions provide basic functionality but lack important context about when to use each tool, what the knowledge graph structure represents, and key limitations. Parameter documentation is adequate with clear purposes and types, but could benefit from examples and more detailed explanations of complex nested structures like observations and relations.",
      "score": "C"
    },
    "resources": {
      "tools": 9,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-memoryplugin",
    "name": "mcp-server-memoryplugin",
    "description": "MCP server for MemoryPlugin API, enabling AI assistants like Claude to store and retrieve personal memories.",
    "links": {
      "application": "https://www.npmjs.com/package/@memoryplugin/mcp-server"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "stars": 41,
    "config": [
      {
        "mcpServers": {
          "memoryplugin": {
            "command": "npx",
            "args": [
              "-y",
              "@memoryplugin/mcp-server"
            ],
            "env": {
              "MEMORY_PLUGIN_TOKEN": "<YOUR_TOKEN>"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-meta-ads-mcp",
    "name": "mcp-server-meta-ads",
    "description": "Enables AI agents to monitor and optimize Meta ad performance, analyze campaign metrics, adjust audience targeting, manage creative assets, and make data-driven recommendations for ad spend and campaign settings through seamless Graph API integration.",
    "links": {
      "application": "https://github.com/nictuku/meta-ads-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "marketing",
      "development"
    ],
    "provider": "source",
    "mcpServers": {
      "mcpServers": {
        "meta-ads": {
          "command": "uvx",
          "args": [
            "meta-ads-mcp",
            "--app-id",
            "YOUR_META_ADS_APP_ID"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "meta-ads": {
            "command": "uvx",
            "args": [
              "meta-ads-mcp",
              "--app-id",
              "YOUR_META_ADS_APP_ID"
            ]
          }
        }
      }
    ],
    "stars": 19
  },
  {
    "id": "mcp-server-metatool-app",
    "icon": "https://avatars.githubusercontent.com/u/196043485?s=200&v=4",
    "name": "mcp-server-metatool-app",
    "description": "MetaMCP is the one unified middleware MCP server that manages your MCP connections with GUI.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-metatool-app",
      "application": "https://github.com/metatool-ai/metatool-app"
    },
    "tags": [
      "development",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.6.5",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-metatrader-mcp-server",
    "name": "mcp-server-metatrader",
    "description": "Enable AI LLMs to execute trades using MetaTrader 5 platform.",
    "links": {
      "application": "https://github.com/ariadng/metatrader-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "metatrader": {
            "command": "metatrader-mcp-server",
            "args": [
              "--login",
              "<YOUR_MT5_LOGIN>",
              "--password",
              "<YOUR_MT5_PASSWORD>",
              "--server",
              "<YOUR_MT5_SERVER>"
            ]
          }
        }
      }
    ],
    "stars": 10
  },
  {
    "id": "mcp-server-metmuseum-mcp",
    "name": "mcp-server-metmuseum",
    "description": "Metropolitan Museum of Art Collection API integration to search and display artworks in the collection.",
    "links": {
      "application": "https://github.com/mikechao/metmuseum-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": []
  },
  {
    "id": "mcp-server-metoro-mcp-server",
    "name": "mcp-server-metoro",
    "description": "Query and interact with kubernetes environments monitored by Metoro.",
    "links": {
      "application": "https://github.com/metoro-io/metoro-mcp-server"
    },
    "official": true,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "monitoring"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "metoro-mcp-server": {
            "command": "<your path to Metoro MCP server go executable>/metoro-mcp-server",
            "args": [],
            "env": {
              "METORO_AUTH_TOKEN": "<your auth token>",
              "METORO_API_URL": "https://us-east.metoro.io"
            }
          }
        }
      },
      {
        "mcpServers": {
          "metoro-mcp-server": {
            "command": "<your path to Metoro MCP server go executable>/metoro-mcp-server",
            "args": [],
            "env": {
              "METORO_AUTH_TOKEN": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lcklkIjoiOThlZDU1M2QtYzY4ZC00MDRhLWFhZjItNDM2ODllNWJiMGUzIiwiZW1haWwiOiJ0ZXN0QGNocmlzYmF0dGFyYmVlLmNvbSIsImV4cCI6MTgyMTI0NzIzN30.7G6alDpcZh_OThYj293Jce5rjeOBqAhOlANR_Fl5auw",
              "METORO_API_URL": "https://demo.us-east.metoro.io"
            }
          }
        }
      }
    ],
    "stars": 37
  },
  {
    "id": "mcp-server-microsoft",
    "name": "mcp-server-microsoft ",
    "description": "Connect to microsoft API to get applications, sites users and more.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-microsoft",
      "application": "https://github.com/acuvity/mcp-server-microsoft-graph"
    },
    "tags": [
      "development",
      "automation",
      "integration",
      "cloud"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": false,
    "runtime": "binary",
    "version": "1.0.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": "nil",
    "resources": {}
  },
  {
    "id": "mcp-server-microsoft-graph",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-microsoft-graph",
    "description": "Connect to microsoft API to get applications, sites users and more.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-microsoft-graph",
      "application": "https://github.com/acuvity/mcp-server-microsoft-graph"
    },
    "tags": [
      "development",
      "automation",
      "integration",
      "cloud"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": false,
    "runtime": "binary",
    "version": "1.0.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "dd9fde51de66149fa1d673ac25bea16b12126688d50c0e8c3f3f6c4f6acf0d34",
      "reason": "Tool names are overly generic ('applications', 'sites', 'users'), descriptions are vague and repetitive without explaining specific functionality or operations available, and parameter descriptions lack clarity about expected format (display name vs username vs ID). The documentation provides minimal guidance for actual usage.",
      "score": "D"
    },
    "resources": {
      "tools": 3,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-milvus",
    "name": "mcp-server-milvus",
    "description": "Search, Query and interact with data in your Milvus Vector Database.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research",
      "database"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "milvus": {
            "command": "npx",
            "args": [
              "-y",
              "milvus-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-mindmap-mcp-server",
    "name": "mcp-server-mindmap",
    "description": "A Model Context Protocol (MCP) server for generating a beautiful interactive mindmap.",
    "links": {
      "application": "https://github.com/YuChenSSR/mindmap-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "cloud",
      "web",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mindmap": {
            "command": "uvx",
            "args": [
              "mindmap-mcp-server",
              "--return-type",
              "html"
            ]
          }
        }
      }
    ],
    "stars": 87
  },
  {
    "id": "mcp-server-mindsdb",
    "name": "mcp-server-mindsdb",
    "description": "Connect and unify data across various platforms and databases with MindsDB as a single MCP server.",
    "links": {
      "application": "https://github.com/mindsdb/mindsdb"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "research",
      "development",
      "integration",
      "database",
      "cloud"
    ],
    "provider": "source",
    "stars": 27854,
    "config": []
  },
  {
    "id": "mcp-server-mobile-mcp",
    "name": "mcp-server-mobile",
    "description": "MCP Server for Android/iOS application and device automation, development and app scraping. Simulator/Emulator/Physical devices like iPhone, Google Pixel, Samsung supported.",
    "links": {
      "application": "https://github.com/mobile-next/mobile-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mobile-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "@mobilenext/mobile-mcp@latest"
            ]
          }
        }
      }
    ],
    "stars": 406
  },
  {
    "id": "mcp-server-modbus-mcp",
    "name": "mcp-server-modbus",
    "description": "An MCP server that standardizes and contextualizes industrial Modbus data.",
    "links": {
      "application": "https://github.com/kukapay/modbus-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "standalone",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "Modbus MCP Server": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/modbus-mcp",
              "run",
              "modbus-mcp"
            ],
            "env": {
              "MODBUS_TYPE": "tcp",
              "MODBUS_HOST": "127.0.0.1",
              "MODBUS_PORT": 502
            }
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-modelcontextprotocol",
    "name": "mcp-server-modelcontextprotocol",
    "description": "Coinpaprika's DexPaprika MCP server exposes high-performance DexPaprika API covering 20+ chains and 5M+ tokens with real time pricing, liquidity pool data & historical OHLCV data, providing AI agents standardized access to comprehensive market data through Model Context Protocol.",
    "links": {
      "application": "https://github.com/chargebee/agentkit/tree/main/modelcontextprotocol"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "finance"
    ],
    "provider": "source",
    "config": [],
    "stars": 7
  },
  {
    "id": "mcp-server-mongo-mcp",
    "name": "mcp-server-quantgeekdev-mongo",
    "description": "MongoDB integration that enables LLMs to interact directly with databases.",
    "links": {
      "application": "https://github.com/QuantGeekDev/mongo-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "database",
      "cloud",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mongodb": {
            "command": "npx",
            "args": [
              "mongo-mcp",
              "mongodb://<username>:<password>@<host>:<port>/<database>?authSource=admin"
            ]
          }
        }
      }
    ],
    "stars": 129
  },
  {
    "id": "mcp-server-mongodb",
    "icon": "https://www.mongodb.com/favicon.ico",
    "name": "mcp-server-mongodb",
    "description": "MCP server for interacting with MongoDB and MongoDB Atlas.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-mongodb",
      "application": "https://github.com/mongodb-js/mongodb-mcp-server"
    },
    "tags": [
      "database",
      "integration",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "56dabc5be6a6c28defacb57c91d98a6897040997889389d67706a4348a4918cf",
      "reason": "The toolset shows adequate but inconsistent documentation quality. While parameter descriptions are generally clear and most tools have basic functional descriptions, many tool descriptions are too brief (1-2 words like 'List MongoDB Atlas clusters') and lack important context about usage, limitations, or expected outputs. Some tools like 'atlas-create-db-user' have comprehensive parameter documentation, but others like 'atlas-list-orgs' provide minimal guidance. The documentation is functional but leaves users with questions about when to use specific tools and what to expect from them.",
      "score": "C"
    },
    "resources": {
      "tools": 31,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-mongodb-lens",
    "name": "mcp-server-mongodb-lens",
    "description": "MongoDB Lens: Full Featured MCP Server for MongoDB Databases.",
    "links": {
      "application": "https://github.com/furey/mongodb-lens"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "database",
      "cloud",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mongodb-lens": {
            "command": "/path/to/npx",
            "args": [
              "-y",
              "mongodb-lens@latest",
              "mongodb://your-connection-string"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "mongodb-lens": {
            "command": "/path/to/node",
            "args": [
              "/path/to/mongodb-lens.js",
              "mongodb://your-connection-string"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "mongodb-lens": {
            "command": "/path/to/npx",
            "args": [
              "-y",
              "mongodb-lens@latest"
            ]
          }
        }
      }
    ],
    "stars": 128
  },
  {
    "id": "mcp-server-motherduck",
    "name": "mcp-server-motherduck",
    "description": "Query and analyze data with MotherDuck and local DuckDB.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "motherduck": {
            "command": "npx",
            "args": [
              "-y",
              "motherduck-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-ms-365-mcp-server",
    "name": "mcp-server-ms-365",
    "description": "MCP server that connects to the whole Microsoft 365 suite using Graph API (including mail, files, Excel, calendar).",
    "links": {
      "application": "https://github.com/softeria/ms-365-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "communication",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "ms365": {
            "command": "npx",
            "args": [
              "-y",
              "@softeria/ms-365-mcp-server"
            ]
          }
        }
      }
    ],
    "stars": 18
  },
  {
    "id": "mcp-server-multi-ai-advisor-mcp",
    "name": "mcp-server-multi-ai-advisor",
    "description": "A Model Context Protocol (MCP) server that queries multiple Ollama models and combines their responses, providing diverse AI perspectives on a single question.",
    "links": {
      "application": "https://github.com/YuChenSSR/multi-ai-advisor-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "web",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "multi-model-advisor": {
            "command": "node",
            "args": [
              "/absolute/path/to/multi-ai-advisor-mcp/build/index.js"
            ]
          }
        }
      }
    ],
    "stars": 30
  },
  {
    "id": "mcp-server-multiverse",
    "name": "mcp-server-multiverse",
    "description": "A middleware server that enables multiple isolated instances of the same MCP servers to coexist independently with unique namespaces and configurations.",
    "links": {
      "application": "https://github.com/lamemind/mcp-server-multiverse"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "storage",
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "job-multiverse": {
            "command": "npx",
            "args": [
              "-y",
              "@lamemind/mcp-server-multiverse@latest",
              "/path/to/your/job-multiverse.json"
            ]
          },
          "side-project-multiverse": {
            "command": "npx",
            "args": [
              "-y",
              "@lamemind/mcp-server-multiverse@latest",
              "/path/to/your/side-project-multiverse.json"
            ]
          }
        }
      }
    ],
    "stars": 48
  },
  {
    "id": "mcp-server-multiversx",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/multiversx-mx/live/logo-1744789643222.jpeg",
    "name": "mcp-server-multiversx",
    "description": "Manage MultiversX blockchain wallets and perform token transactions.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-multiversx",
      "application": "https://github.com/multiversx/mx-mcp"
    },
    "tags": [
      "finance",
      "automation"
    ],
    "official": true,
    "scope": "native",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.0.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "620d63ea170a3b323360b59fe2ba4ef91a61b8667b3c1b310e73f06ea8cb8fef",
      "reason": "The toolset provides adequate documentation with clear, specific tool names that indicate MultiversX blockchain functionality. Most descriptions are brief (1-2 sentences) covering basic functionality, and parameter descriptions are generally clear with appropriate technical detail like bech32 format specifications. However, many descriptions lack important context about when to use each tool, potential limitations, or prerequisites (like wallet setup requirements), keeping it at an adequate level rather than good.",
      "score": "C"
    },
    "resources": {
      "tools": 14,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-my-bear-mcp-server",
    "name": "mcp-server-my-bear",
    "description": "Allows to read notes and tags for the Bear Note taking app, through a direct integration with Bear's sqlitedb.",
    "links": {
      "application": "https://github.com/bart6114/my-bear-mcp-server/"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "bear": {
            "command": "npx",
            "args": [
              "github:bart6114/my-bear-mcp-server"
            ],
            "env": {},
            "disabled": false,
            "autoApprove": []
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-mysql",
    "name": "mcp-server-benborla-mysql",
    "description": "MySQL database integration in NodeJS with configurable access controls and schema inspection.",
    "links": {
      "application": "https://github.com/benborla/mcp-server-mysql"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "remote",
    "tags": [
      "database",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "MySQL": {
            "command": "npx",
            "args": [
              "mcprunner",
              "MYSQL_HOST=127.0.0.1",
              "MYSQL_PORT=3306",
              "MYSQL_USER=root",
              "MYSQL_PASS=root",
              "MYSQL_DB=demostore",
              "ALLOW_INSERT_OPERATION=true",
              "ALLOW_UPDATE_OPERATION=true",
              "ALLOW_DELETE_OPERATION=false",
              "--",
              "npx",
              "-y",
              "@benborla29/mcp-server-mysql"
            ]
          }
        }
      }
    ],
    "stars": 327
  },
  {
    "id": "mcp-server-mysql_mcp_server",
    "name": "mcp-server-mysql_mcp_server",
    "description": "MySQL database integration with configurable access controls, schema inspection, and comprehensive security guidelines.",
    "links": {
      "application": "https://github.com/designcomputer/mysql_mcp_server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mysql": {
            "command": "uv",
            "args": [
              "--directory",
              "path/to/mysql_mcp_server",
              "run",
              "mysql_mcp_server"
            ],
            "env": {
              "MYSQL_HOST": "localhost",
              "MYSQL_PORT": "3306",
              "MYSQL_USER": "your_username",
              "MYSQL_PASSWORD": "your_password",
              "MYSQL_DATABASE": "your_database"
            }
          }
        }
      }
    ],
    "stars": 431
  },
  {
    "id": "mcp-server-mysql_mcp_server_pro",
    "name": "mcp-server-mysql_mcp_server_pro",
    "description": "Supports SSE, STDIO; not only limited to MySQL's CRUD functionality; also includes database exception analysis capabilities; controls database permissions based on roles; and makes it easy for developers to extend tools with customization.",
    "links": {
      "application": "https://github.com/wenb1n-dev/mysql_mcp_server_pro"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "research"
    ],
    "provider": "source",
    "config": [],
    "stars": 31
  },
  {
    "id": "mcp-server-nationalparks",
    "name": "mcp-server-nationalparks",
    "description": "National Park Service API integration providing latest information of park details, alerts, visitor centers, campgrounds, and events for U.S. National Parks.",
    "links": {
      "application": "https://github.com/KyrieTangSheng/mcp-server-nationalparks"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "nationalparks": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-server-nationalparks"
            ],
            "env": {
              "NPS_API_KEY": "YOUR_NPS_API_KEY"
            }
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-naver-search-mcp",
    "name": "mcp-server-naver-search",
    "description": "MCP server for Naver Search API integration, supporting blog, news, shopping search and DataLab analytics features.",
    "links": {
      "application": "https://github.com/isnow890/naver-search-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "research",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "naver-search": {
            "command": "npx",
            "args": [
              "-y",
              "@isnow890/naver-search-mcp"
            ],
            "env": {
              "NAVER_CLIENT_ID": "your_client_id",
              "NAVER_CLIENT_SECRET": "your_client_secret"
            }
          }
        }
      }
    ],
    "stars": 10
  },
  {
    "id": "mcp-server-nearby-search-mcp",
    "name": "mcp-server-nearby-search",
    "description": "An MCP server for nearby place searches with IP-based location detection.",
    "links": {
      "application": "https://github.com/kukapay/nearby-search-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "nearby-search": {
            "command": "uv",
            "args": [
              "--directory",
              "path/to/nearby-search-mcp",
              "run",
              "main.py"
            ],
            "env": {
              "GOOGLE_API_KEY": "your google api key"
            }
          }
        }
      }
    ],
    "stars": 7
  },
  {
    "id": "mcp-server-needle",
    "name": "mcp-server-needle",
    "description": "Production-ready RAG out of the box to search and retrieve data from your own documents.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "needle": {
            "command": "npx",
            "args": [
              "-y",
              "needle-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-neo4j-aura",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/neo4j-cloud-aura-api/live/logo-1746435894823.png",
    "name": "mcp-server-neo4j-aura",
    "description": "Managing Neo4j Aura database instances through the Neo4j Aura API.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-neo4j-aura",
      "application": "https://github.com/neo4j-contrib/mcp-neo4j"
    },
    "tags": [
      "database",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.2.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "2def507b780c09bdf1783091ae9ea2e9b1e96c8cb04acacbd7ba450d723c7e89",
      "reason": "The toolset provides adequate documentation with clear, descriptive tool names and basic functionality descriptions. Parameter descriptions are clear and specify types/constraints appropriately. However, the tool descriptions are quite brief (mostly single sentences) and lack important context about usage scenarios, limitations, or behavioral details that would help users understand when and how to use each tool effectively.",
      "score": "C"
    },
    "resources": {
      "tools": 12,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-neo4j-cypher",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/neo4j-cloud-aura-api/live/logo-1746435894823.png",
    "name": "mcp-server-neo4j-cypher",
    "description": "Manage Cypher graph queries between LLMs and Neo4j with natural language queries.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-neo4j-cypher",
      "application": "https://github.com/neo4j-contrib/mcp-neo4j"
    },
    "tags": [
      "database",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.2.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "fb3aa800db5ce615560285057c5952a5cb3db160c97bf8a76a78aab38bf00907",
      "reason": "Tool names are clear and appropriately prefixed. Descriptions provide basic functionality but lack important context like when to use each tool, what data they return, or key limitations. The get_neo4j_schema description includes helpful error handling guidance. Parameter documentation is adequate with clear purposes and types specified, though could benefit from examples. Overall provides functional guidance but leaves users to infer usage patterns and constraints.",
      "score": "C"
    },
    "resources": {
      "tools": 3,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-neo4j-memory",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/neo4j-cloud-aura-api/live/logo-1746435894823.png",
    "name": "mcp-server-neo4j-memory",
    "description": "Provides persistent memory capabilities through Neo4j graph database integration.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-neo4j-memory",
      "application": "https://github.com/neo4j-contrib/mcp-neo4j"
    },
    "tags": [
      "database",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.1.4",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "a3e370b70defe5d73f1c147100c07f138ed548b6f6e7ae922212bd2ed3f236b0",
      "reason": "The toolset provides adequate but minimal documentation. Tool names are clear and purposeful, indicating their Neo4j knowledge graph operations well. However, descriptions are consistently brief (1 sentence each) and lack important context about when to use each tool, what results to expect, or key limitations. Parameter descriptions are basic but functional, clearly indicating purpose and types. While usable, the documentation leaves users with questions about tool behavior, return formats, and usage patterns that would benefit from more comprehensive explanations.",
      "score": "C"
    },
    "resources": {
      "tools": 10,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-neon",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/neon/live/logo-1744788729224.png",
    "name": "mcp-server-neon",
    "description": "Interact with Neon databases using natural language.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-neon",
      "application": "https://github.com/neondatabase-labs/mcp-server-neon"
    },
    "tags": [
      "integration",
      "database"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.5.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": null,
    "resources": {}
  },
  {
    "id": "mcp-server-netskope-mcp",
    "name": "mcp-server-netskope",
    "description": "An MCP to give access to all Netskope Private Access components within a Netskope Private Access environments including detailed setup information and LLM examples on usage.",
    "links": {
      "application": "https://github.com/johnneerdael/netskope-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "remote",
    "tags": [
      "research",
      "development",
      "integration",
      "cloud"
    ],
    "provider": "npx",
    "stars": 1,
    "config": [
      {
        "mcpServers": {
          "netskope-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "@johnneerdael/netskope-mcp"
            ],
            "env": {
              "NETSKOPE_BASE_URL": "https://your-tenant.goskope.com",
              "NETSKOPE_API_KEY": "your-token"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-nile-mcp-server",
    "name": "mcp-server-nile",
    "description": "Manage and query Postgres databases, tenants, users, auth using LLMs.",
    "links": {
      "application": "https://github.com/niledatabase/nile-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "database",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "nile-database": {
            "command": "node",
            "args": [
              "/path/to/your/nile-mcp-server/dist/index.js"
            ],
            "env": {
              "NILE_API_KEY": "your_api_key_here",
              "NILE_WORKSPACE_SLUG": "your_workspace_slug"
            }
          }
        }
      }
    ],
    "stars": 14
  },
  {
    "id": "mcp-server-nocodb-mcp-server",
    "name": "mcp-server-nocodb",
    "description": "Nocodb database integration, read and write capabilities.",
    "links": {
      "application": "https://github.com/edwinbernadus/nocodb-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "database",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "nocodb": {
            "command": "node",
            "args": [
              "{working_folder}/dist/start.js"
            ],
            "env": {
              "NOCODB_URL": "https://your-nocodb-instance.com",
              "NOCODB_BASE_ID": "your_base_id_here",
              "NOCODB_API_TOKEN": "your_api_token_here"
            }
          }
        }
      }
    ],
    "stars": 8
  },
  {
    "id": "mcp-server-norman-finance",
    "name": "mcp-server-norman-finance",
    "description": "MCP server for managing accounting and taxes with Norman Finance.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "finance"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "norman-finance": {
            "command": "npx",
            "args": [
              "-y",
              "normanfinance-mcp"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-nostr-mcp",
    "name": "mcp-server-nostr",
    "description": "A Nostr MCP server that allows to interact with Nostr, enabling posting notes, and more.",
    "links": {
      "application": "https://github.com/AbdelStark/nostr-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "remote",
    "tags": [
      "integration",
      "communication",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 27
  },
  {
    "id": "mcp-server-notion",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/notion/live/logo-1744809276376.png",
    "name": "mcp-server-notion",
    "description": "Interacting with Notion API.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-notion",
      "application": "https://github.com/makenotion/notion-mcp-server"
    },
    "tags": [
      "integration",
      "research",
      "development",
      "database"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.8.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "bf3ca516d32c70d64d18873c4e6f76235a047f62aa1aca8fde857619d7b98fea",
      "reason": "Most tool descriptions are extremely brief (1-4 words) and lack context about functionality, usage, or limitations. While parameter descriptions are generally adequate with clear types and purposes, the tool descriptions fail to explain what the tools do, when to use them, or what they return. The consistent 'API-' prefix doesn't help distinguish between tools, and descriptions like 'Query a database' or 'Search by title' provide minimal guidance for proper usage.",
      "score": "D"
    },
    "resources": {
      "tools": 19,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-notion-mcp",
    "name": "mcp-server-badhansen-notion",
    "description": "A Model Context Protocol (MCP) server that integrates with Notion's API to manage personal todo lists efficiently.",
    "links": {
      "application": "https://github.com/Badhansen/notion-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "notion-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "/Users/username/Projects/Python/notion-mcp/src",
              "run",
              "server.py"
            ]
          }
        }
      }
    ],
    "stars": 12
  },
  {
    "id": "mcp-server-notion_mcp",
    "name": "mcp-server-notion_mcp",
    "description": "Integrates with Notion's API to manage personal todo lists.",
    "links": {
      "application": "https://github.com/danhilse/notion_mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "development",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "notion-todo": {
            "command": "/path/to/your/.venv/bin/python",
            "args": [
              "-m",
              "notion_mcp"
            ],
            "cwd": "/path/to/notion-mcp"
          }
        }
      }
    ],
    "stars": 172
  },
  {
    "id": "mcp-server-ns-mcp-server",
    "name": "mcp-server-ns",
    "description": "Access Dutch Railways (NS) travel information, schedules, and real-time updates.",
    "links": {
      "application": "https://github.com/r-huijts/ns-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "ns-server": {
            "command": "npx",
            "args": [
              "-y",
              "ns-mcp-server"
            ],
            "env": {
              "NS_API_KEY": "your_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 30
  },
  {
    "id": "mcp-server-ntfy-mcp",
    "name": "mcp-server-ntfy",
    "description": "The MCP server that keeps you informed by sending the notification on phone using ntfy.",
    "links": {
      "application": "https://github.com/teddyzxcv/ntfy-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "communication"
    ],
    "provider": "source",
    "config": [],
    "stars": 17
  },
  {
    "id": "mcp-server-ntfy-me-mcp",
    "name": "mcp-server-ntfy-me",
    "description": "An ntfy MCP server for sending/fetching ntfy notifications to your self-hosted ntfy server from AI Agents (supports secure token auth & more - use with npx or docker!).",
    "links": {
      "application": "https://github.com/gitmotion/ntfy-me-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "communication",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 8
  },
  {
    "id": "mcp-server-nwc-mcp-server",
    "name": "mcp-server-nwc",
    "description": "Bitcoin Lightning wallet integration powered by Nostr Wallet Connect.",
    "links": {
      "application": "https://github.com/getalby/nwc-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "finance",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "nwc": {
            "command": "npx",
            "args": [
              "-y",
              "@getalby/nwc-mcp-server"
            ],
            "env": {
              "NWC_CONNECTION_STRING": "YOUR NWC CONNECTION STRING HERE"
            }
          }
        }
      }
    ],
    "stars": 8
  },
  {
    "id": "mcp-server-nyt",
    "name": "mcp-server-nyt",
    "description": "Search articles using the NYTimes API.",
    "links": {
      "application": "https://github.com/angheljf/nyt"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "research",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "nyt": {
            "command": "node",
            "args": [
              "path/to/your/build/index.js"
            ],
            "env": {
              "NYTIMES_API_KEY": "your_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 9
  },
  {
    "id": "mcp-server-obsidian",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/obsidian/live/logo-1745316735580.png",
    "name": "mcp-server-obsidian",
    "description": "Interacting with Obsidian via REST API.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-obsidian",
      "application": "https://github.com/MarkusPfundstein/mcp-obsidian"
    },
    "tags": [
      "integration",
      "web",
      "research"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.2.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "f89849960aeadba76f68b1c447ec320d44b58836b7295822c4ba72cb903cfc57",
      "reason": "Tool names are clear and well-prefixed with 'obsidian_' indicating their domain. Most descriptions adequately explain functionality and usage context, with some providing good detail (like obsidian_complex_search). Parameter descriptions are generally clear with appropriate constraints and defaults specified. However, some descriptions are quite brief (obsidian_append_content, obsidian_delete_file) and could benefit from more context about when to use them or important limitations. The toolset is consistently good but lacks the comprehensive detail needed for an A grade.",
      "score": "B"
    },
    "resources": {
      "tools": 12,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-oceanbase",
    "name": "mcp-server-oceanbase",
    "description": "MCP Server for OceanBase database and its tools.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "database"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "oceanbase": {
            "command": "npx",
            "args": [
              "-y",
              "oceanbase-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-octagon",
    "name": "mcp-server-unknown-octagon",
    "description": "Deliver real-time investment research with extensive private and public market data.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "finance",
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "octagon": {
            "command": "npx",
            "args": [
              "-y",
              "octagon-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-octagon-mcp-server",
    "name": "mcp-server-octagonai-octagon",
    "description": "Octagon AI Agents to integrate private and public market data.",
    "links": {
      "application": "https://github.com/OctagonAI/octagon-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "octagon-mcp-server": {
            "command": "npx",
            "args": [
              "-y",
              "octagon-mcp@latest"
            ],
            "env": {
              "OCTAGON_API_KEY": "YOUR_API_KEY_HERE"
            }
          }
        }
      }
    ],
    "stars": 13
  },
  {
    "id": "mcp-server-octomind-mcp",
    "name": "mcp-server-octomind",
    "description": "Lets your preferred AI agent create & run fully managed Octomind end-to-end tests from your codebase or other data sources like Jira, Slack or TestRail.",
    "links": {
      "application": "https://github.com/OctoMind-dev/octomind-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "octomind-mcp": {
            "name": "Octomind MCP Server",
            "command": "npx",
            "args": [
              "-y",
              "@octomind/octomind-mcp@latest"
            ],
            "env": {
              "APIKEY": "your-api-key-here"
            }
          }
        }
      }
    ],
    "stars": 14
  },
  {
    "id": "mcp-server-omniparser-autogui-mcp",
    "name": "mcp-server-omniparser-autogui",
    "description": "Automatic operation of on-screen GUI.",
    "links": {
      "application": "https://github.com/NON906/omniparser-autogui-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "research",
      "web",
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 31
  },
  {
    "id": "mcp-server-onchain-mcp",
    "name": "mcp-server-onchain",
    "description": "Bankless Onchain API to interact with smart contracts, query transaction and token information.",
    "links": {
      "application": "https://github.com/Bankless/onchain-mcp/"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "bankless": {
            "command": "npx",
            "args": [
              "@bankless/onchain-mcp"
            ],
            "env": {
              "BANKLESS_API_TOKEN": "your_api_token_here"
            }
          }
        }
      }
    ],
    "stars": 29
  },
  {
    "id": "mcp-server-onepassword-mcp-server",
    "name": "mcp-server-onepassword",
    "description": "An MCP server that enables secure credential retrieval from 1Password to be used by Agentic AI.",
    "links": {
      "application": "https://github.com/dkvdm/onepassword-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "security",
      "development",
      "web"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "1Password": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "mcp[cli]",
              "--with",
              "onepassword-sdk",
              "mcp",
              "run",
              "/your/dir/here/onepassword-mcp-server/server.py"
            ],
            "env": {
              "OP_SERVICE_ACCOUNT_TOKEN": "INSERT_KEY_HERE"
            }
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-oorlogsbronnen-mcp",
    "name": "mcp-server-oorlogsbronnen",
    "description": "Oorlogsbronnen (War Sources) API integration for accessing historical WWII records, photographs, and documents from the Netherlands (1940-1945).",
    "links": {
      "application": "https://github.com/r-huijts/oorlogsbronnen-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "integration",
      "database"
    ],
    "provider": "npx",
    "stars": 5,
    "config": [
      {
        "mcpServers": {
          "oorlogsbronnen-server": {
            "command": "npx",
            "args": [
              "-y",
              "oorlogsbronnen-mcp"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-op-gg",
    "name": "mcp-server-op-gg",
    "description": "Access real-time gaming data across popular titles like League of Legends, TFT, and Valorant, offering champion analytics, esports schedules, meta compositions, and character statistics.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "marketing",
      "gaming"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "opgg": {
            "command": "npx",
            "args": [
              "-y",
              "opgg-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-opcua-mcp",
    "name": "mcp-server-opcua",
    "description": "An MCP server that connects to OPC UA-enabled industrial systems.",
    "links": {
      "application": "https://github.com/kukapay/opcua-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "standalone",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "opcua-mcp": {
            "command": "python",
            "args": [
              "path/to/opcua_mcp/main.py"
            ],
            "env": {
              "OPCUA_SERVER_URL": "your-opc-ua-server-url"
            }
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-open-mcp",
    "name": "mcp-server-open",
    "description": "Turn a web API into an MCP server in 10 seconds and add it to the open source registry:.",
    "links": {
      "application": "https://github.com/wegotdocs/open-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development",
      "integration",
      "database"
    ],
    "provider": "npx",
    "stars": 77,
    "config": []
  },
  {
    "id": "mcp-server-open-streetmap-mcp",
    "name": "mcp-server-open-streetmap",
    "description": "An OpenStreetMap MCP server with location-based services and geospatial data.",
    "links": {
      "application": "https://github.com/jagan-shanmugam/open-streetmap-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "web",
      "integration",
      "research"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "osm-mcp-server": {
          "command": "uv",
          "args": [
            "--directory",
            "/path/to/osm-mcp-server",
            "run",
            "osm-mcp-server"
          ]
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "osm-mcp-server": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/osm-mcp-server",
              "run",
              "osm-mcp-server"
            ]
          }
        }
      }
    ],
    "stars": 42
  },
  {
    "id": "mcp-server-openai",
    "name": "mcp-server-pierrebrunelle-openai",
    "description": "Query OpenAI models directly from Claude using MCP protocol.",
    "links": {
      "application": "https://github.com/pierrebrunelle/mcp-server-openai"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "openai-server": {
            "command": "python",
            "args": [
              "-m",
              "src.mcp_server_openai.server"
            ],
            "env": {
              "PYTHONPATH": "C:/path/to/your/mcp-server-openai",
              "OPENAI_API_KEY": "your-key-here"
            }
          }
        }
      }
    ],
    "stars": 55
  },
  {
    "id": "mcp-server-openai-gpt-image-mcp",
    "name": "mcp-server-openai-gpt-image",
    "description": "OpenAI GPT image generation/editing MCP server.",
    "links": {
      "application": "https://github.com/SureScaleAI/openai-gpt-image-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "stars": 10,
    "config": [
      {
        "mcpServers": {
          "openai-gpt-image-mcp": {
            "command": "node",
            "args": [
              "/absolute/path/to/dist/index.js"
            ],
            "env": {
              "OPENAI_API_KEY": "sk-..."
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-openai-websearch-mcp",
    "name": "mcp-server-openai-websearch",
    "description": "This is a Python-based MCP server that provides OpenAI `web_search` build-in tool.",
    "links": {
      "application": "https://github.com/ConechoAI/openai-websearch-mcp/"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research",
      "integration"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "openai-websearch-mcp": {
          "command": "uvx",
          "args": [
            "openai-websearch-mcp"
          ],
          "env": {
            "OPENAI_API_KEY": "your-api-key-here"
          }
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "openai-websearch-mcp": {
            "command": "uvx",
            "args": [
              "openai-websearch-mcp"
            ],
            "env": {
              "OPENAI_API_KEY": "your-api-key-here"
            }
          }
        }
      }
    ],
    "stars": 38
  },
  {
    "id": "mcp-server-openapi-mcp",
    "name": "mcp-server-ckanthony-openapi",
    "description": "OpenAPI-MCP: Dockerized MCP Server to allow your AI agent to access any API with existing api docs.",
    "links": {
      "application": "https://github.com/ckanthony/openapi-mcp"
    },
    "official": false,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "development"
    ],
    "provider": "docker",
    "config": [],
    "stars": 35
  },
  {
    "id": "mcp-server-openapi-mcp-server",
    "name": "mcp-server-snaggle-ai-openapi",
    "description": "Connect any HTTP/REST API server using an Open API spec (v3).",
    "links": {
      "application": "https://github.com/snaggle-ai/openapi-mcp-server"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 562
  },
  {
    "id": "mcp-server-openapi-schema",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-openapi-schema",
    "description": "Exposes OpenAPI schemas for LLMs to explore and understand APIs.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-openapi-schema",
      "application": "https://github.com/hannesj/mcp-openapi-schema"
    },
    "tags": [
      "integration",
      "development"
    ],
    "official": false,
    "scope": "native",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.0.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "7fcf271e91718beddd2328535fcbeccb765d08a3eee584795dbca83b4f7b8af3",
      "reason": "The toolset has clear, purposeful names and basic descriptions that outline main functionality, but lacks comprehensive context about usage scenarios and limitations. Parameter descriptions are minimal - most parameters only specify type without explaining their purpose or providing examples (e.g., 'method' and 'path' parameters lack descriptions in most tools). While the tools are functionally understandable, users would need to infer many details about proper usage and parameter formats.",
      "score": "C"
    },
    "resources": {
      "tools": 10,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-opendal",
    "name": "mcp-server-opendal",
    "description": "Access any storage with Apache OpenDAL.",
    "links": {
      "application": "https://github.com/Xuanwo/mcp-server-opendal"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "opendal": {
            "command": "uvx",
            "args": [
              "mcp-server-opendal"
            ],
            "env": {
              "YOUR_ENV_VAR": "YOUR_ENV_VALUE"
            }
          }
        }
      }
    ],
    "stars": 28
  },
  {
    "id": "mcp-server-opentk-mcp",
    "name": "mcp-server-opentk",
    "description": "Access Dutch Parliament (Tweede Kamer) information including documents, debates, activities, and legislative cases through structured search capabilities (based on opentk project by Bert Hubert).",
    "links": {
      "application": "https://github.com/r-huijts/opentk-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "opentk-mcp-local": {
            "command": "node",
            "args": [
              "/absolute/path/to/your/opentk-mcp/dist/index.js"
            ]
          }
        }
      }
    ],
    "stars": 9
  },
  {
    "id": "mcp-server-opgg-mcp",
    "name": "mcp-server-opgg",
    "description": "Access real-time gaming data across popular titles like League of Legends, TFT, and Valorant, offering champion analytics, esports schedules, meta compositions, and character statistics.",
    "links": {
      "application": "https://github.com/opgginc/opgg-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "gaming",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "opgg-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "@smithery/cli@latest",
              "run",
              "@opgginc/opgg-mcp",
              "--key",
              "{SMITHERY_API_KEY}"
            ]
          }
        }
      }
    ],
    "stars": 3
  },
  {
    "id": "mcp-server-opik-mcp",
    "name": "mcp-server-opik",
    "description": "Use natural language to explore LLM observability, traces, and monitoring data captured by Opik.",
    "links": {
      "application": "https://github.com/comet-ml/opik-mcp"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 71
  },
  {
    "id": "mcp-server-osp_marketing_tools",
    "name": "mcp-server-osp_marketing_tools",
    "description": "A suite of marketing tools from Open Strategy Partners including writing style, editing codes, and product marketing value map creation.",
    "links": {
      "application": "https://github.com/open-strategy-partners/osp_marketing_tools"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "marketing",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "osp_marketing_tools": {
            "command": "uvx",
            "args": [
              "--from",
              "git+https://github.com/open-strategy-partners/osp_marketing_tools@main",
              "osp_marketing_tools"
            ]
          }
        }
      }
    ],
    "stars": 153
  },
  {
    "id": "mcp-server-oura-mcp-server",
    "name": "mcp-server-oura",
    "description": "An MCP server for Oura, an app for tracking sleep.",
    "links": {
      "application": "https://github.com/tomekkorbak/oura-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "oura": {
            "command": "uvx",
            "args": [
              "oura-mcp-server"
            ],
            "env": {
              "OURA_API_TOKEN": "YOUR_OURA_API_TOKEN"
            }
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-oxylabs",
    "icon": "https://oxylabs.io/favicon.ico",
    "name": "mcp-server-oxylabs",
    "description": "Scrapes web data for AI applications using the Model Context Protocol.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-oxylabs",
      "application": "https://github.com/oxylabs/oxylabs-mcp"
    },
    "tags": [
      "web",
      "research",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.3.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "1547515e6be3e7c36250a470673eea40d8668ab59b172febe9d53c1a4872eabc",
      "reason": "The toolset demonstrates good documentation quality with clear, descriptive tool names and comprehensive parameter descriptions. Tool descriptions provide adequate context about functionality and use cases, though they could be more specific about when to use each tool. Parameter documentation is thorough with helpful examples and clear explanations of purpose and constraints. The consistent documentation style across all tools and detailed coverage of complex parameters like output formats and geo-location elevate this above average, though some descriptions could be more concise and focused.",
      "score": "B"
    },
    "resources": {
      "tools": 4,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-pancakeswap-poolspy-mcp",
    "name": "mcp-server-pancakeswap-poolspy",
    "description": "An MCP server that tracks newly created pools on Pancake Swap.",
    "links": {
      "application": "https://github.com/kukapay/pancakeswap-poolspy-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "PancakeSwap-PoolSpy": {
            "command": "uv",
            "args": [
              "--directory",
              "path/to/pancakeswap-poolspy-mcp",
              "run",
              "main.py"
            ],
            "env": {
              "THEGRAPH_API_KEY": "your api key from The Graph"
            }
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-paypal",
    "icon": "https://avatars.githubusercontent.com/u/476675?s=200&v=4",
    "name": "mcp-server-paypal",
    "description": "A Model Context Protocol (MCP) server that enables AI models to interact with PayPal Apis.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-paypal",
      "application": "https://github.com/paypal/agent-toolkit"
    },
    "tags": [
      "development",
      "integration",
      "finance"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.3.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "f09777d6c4b6e4b5e52690cb03db57ffeee16e6171796c4163e453946d056384",
      "reason": "The toolset demonstrates good documentation quality overall. Tool names are clear and purposeful (e.g., 'create_invoice', 'list_transactions', 'cancel_subscription'). Most descriptions provide adequate context about functionality and usage, though some vary in completeness - some are concise and effective while others like 'create_product' include excessive implementation details. Parameter documentation is generally strong with clear descriptions of purpose, types, and constraints including proper enums and required fields. However, there are minor inconsistencies like 'show_product_details' having a misleading description that doesn't match its actual function, and some tools could benefit from clearer usage context. The documentation would enable effective usage despite these small gaps.",
      "score": "B"
    },
    "resources": {
      "tools": 26,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-pdf-tools-mcp",
    "name": "mcp-server-pdf-tools",
    "description": "PDF download, view & manipulation utilities.",
    "links": {
      "application": "https://github.com/danielkennedy1/pdf-tools-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 5
  },
  {
    "id": "mcp-server-perplexity",
    "name": "mcp-server-perplexity",
    "description": "An MCP server that connects to Perplexity's Sonar API, enabling real-time web-wide research in conversational AI.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "perplexity": {
            "command": "npx",
            "args": [
              "-y",
              "perplexity-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-phabricator-mcp-server",
    "name": "mcp-server-phabricator",
    "description": "Interacting with Phabricator API.",
    "links": {
      "application": "https://github.com/baba786/phabricator-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": []
  },
  {
    "id": "mcp-server-plane",
    "name": "mcp-server-unknown-plane",
    "description": "The official Plane MCP server provides integration with Plane APIs, enabling full AI automation of Plane projects, work items, cycles and more.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "web",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "plane": {
            "command": "npx",
            "args": [
              "-y",
              "plane-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-plane-mcp-server",
    "name": "mcp-server-kelvin6365-plane",
    "description": "This MCP Server will help you to manage projects and issues through Plane's API.",
    "links": {
      "application": "https://github.com/kelvin6365/plane-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "plane": {
            "command": "node",
            "args": [
              "path/to/plane-mcp-server/build/index.js"
            ],
            "env": {
              "PLANE_API_KEY": "your_plane_api_key_here",
              "PLANE_WORKSPACE_SLUG": "your_workspace_slug_here"
            }
          }
        }
      }
    ],
    "stars": 21
  },
  {
    "id": "mcp-server-playwright",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/playwright/live/logo-1745822820407.png",
    "name": "mcp-server-playwright",
    "description": "Browser automation for LLMs using structured accessibility snapshots.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-playwright",
      "application": "https://github.com/microsoft/playwright-mcp"
    },
    "tags": [
      "automation",
      "web",
      "research"
    ],
    "official": true,
    "scope": "standalone",
    "mutitenant": false,
    "runtime": "node",
    "version": "0.0.28",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "08ddfbb5f28df62ede08f5f8e1c38a6c8282ff125ba681d209067ea903a0120f",
      "reason": "Tool names are clear and well-structured with consistent 'browser_' prefixes. Descriptions are mostly adequate but often too brief (1 sentence), lacking context about when to use tools or their limitations. Parameter documentation is generally clear with good type specifications, though some could benefit from examples or format details. The toolset is functional but leaves users with questions about usage context and constraints.",
      "score": "C"
    },
    "resources": {
      "tools": 25,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-playwright-mcp",
    "name": "mcp-server-microsoft-playwright",
    "description": "Official Microsoft Playwright MCP server, enabling LLMs to interact with web pages through structured accessibility snapshots.",
    "links": {
      "application": "https://github.com/microsoft/playwright-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "web",
      "development",
      "cloud"
    ],
    "provider": "npx",
    "stars": 9233,
    "config": []
  },
  {
    "id": "mcp-server-playwright-plus-python-mcp",
    "name": "mcp-server-playwright-plus-python",
    "description": "An MCP python server using Playwright for browser automation,more suitable for llm.",
    "links": {
      "application": "https://github.com/blackwhite084/playwright-plus-python-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "web"
    ],
    "provider": "npx",
    "stars": 96,
    "config": [
      {
        "mcpServers": {
          "playwright-server": {
            "command": "uvx",
            "args": [
              "playwright-server"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-plg_handler_mcp",
    "name": "mcp-server-plg_handler_mcp",
    "description": "Remote Storage Access: SFTP, S3, FTP, SMB, NFS, WebDAV, GIT, FTPS, gcloud, azure blob, sharepoint, etc.",
    "links": {
      "application": "https://github.com/mickael-kerjean/filestash/tree/master/server/plugin/plg_handler_mcp"
    },
    "official": false,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "cloud",
      "web",
      "integration",
      "research",
      "database"
    ],
    "provider": "source",
    "config": [],
    "stars": 11248
  },
  {
    "id": "mcp-server-plugged-in",
    "name": "mcp-server-plugged-in",
    "description": "A comprehensive proxy that combines multiple MCP servers into a single MCP. It provides discovery and management of tools, prompts, resources, and templates across servers, plus a playground for debugging when building MCP servers.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "pluggedin": {
            "command": "npx",
            "args": [
              "-y",
              "pluggedin-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-pluggedin-mcp-proxy",
    "name": "mcp-server-pluggedin-proxy",
    "description": "A comprehensive proxy server that combines multiple MCP servers into a single interface with extensive visibility features. It provides discovery and management of tools, prompts, resources, and templates across servers, plus a playground for debugging when building MCP servers.",
    "links": {
      "application": "https://github.com/VeriTeknik/pluggedin-mcp-proxy"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development",
      "integration",
      "cloud"
    ],
    "provider": "npx",
    "stars": 24,
    "config": [
      {
        "mcpServers": {
          "pluggedin": {
            "command": "npx",
            "args": [
              "-y",
              "@pluggedin/mcp-proxy@latest"
            ],
            "env": {
              "PLUGGEDIN_API_KEY": "YOUR_API_KEY"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-portainer-mcp",
    "name": "mcp-server-portainer",
    "description": "A powerful MCP server that enables AI assistants to seamlessly interact with Portainer instances, providing natural language access to container management, deployment operations, and infrastructure monitoring capabilities.",
    "links": {
      "application": "https://github.com/portainer/portainer-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "cloud",
      "integration",
      "development"
    ],
    "provider": "github-release",
    "config": [
      {
        "mcpServers": {
          "portainer": {
            "command": "/path/to/portainer-mcp",
            "args": [
              "-server",
              "[IP]:[PORT]",
              "-token",
              "[TOKEN]",
              "-tools",
              "/tmp/tools.yaml"
            ]
          }
        }
      }
    ],
    "stars": 13
  },
  {
    "id": "mcp-server-postgres",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-postgres",
    "description": "PostgreSQL database integration with schema inspection and query capabilities.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-postgres",
      "application": "https://github.com/crystaldba/postgres-mcp"
    },
    "tags": [
      "database",
      "integration",
      "development"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.3.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "7a3b6bb47a7c7b618e0d49889b145f4e31c9075dfeed0f505d1be1d4afe7af52",
      "reason": "The toolset demonstrates good documentation quality overall. Most tools have clear, descriptive names and adequate descriptions explaining their functionality. Parameter documentation is generally well-done with clear purposes and constraints specified. However, some descriptions are quite brief (like 'execute_sql' and basic schema tools) and could benefit from more context about usage scenarios and limitations. The complex tools like 'explain_query' and 'analyze_db_health' provide excellent detailed descriptions, while simpler tools are more minimal but still functional.",
      "score": "B"
    },
    "resources": {
      "tools": 9,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-postgres-mcp",
    "name": "mcp-server-crystaldba-postgres",
    "description": "All-in-one MCP server for Postgres development and operations, with tools for performance analysis, tuning, and health checks.",
    "links": {
      "application": "https://github.com/crystaldba/postgres-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database",
      "cloud",
      "integration",
      "storage",
      "research"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "postgres": {
            "command": "postgres-mcp",
            "args": [
              "--access-mode=unrestricted"
            ],
            "env": {
              "DATABASE_URI": "postgresql://username:password@localhost:5432/dbname"
            }
          }
        }
      },
      {
        "mcpServers": {
          "postgres": {
            "command": "uv",
            "args": [
              "run",
              "postgres-mcp",
              "--access-mode=unrestricted"
            ],
            "env": {
              "DATABASE_URI": "postgresql://username:password@localhost:5432/dbname"
            }
          }
        }
      },
      {
        "mcpServers": {
          "postgres": {
            "type": "sse",
            "url": "http://localhost:8000/sse"
          }
        }
      },
      {
        "mcpServers": {
          "postgres": {
            "type": "sse",
            "serverUrl": "http://localhost:8000/sse"
          }
        }
      }
    ],
    "stars": 151
  },
  {
    "id": "mcp-server-postgresql",
    "name": "mcp-server-postgresql",
    "description": "Read-only database access with schema inspection.",
    "links": {
      "application": "https://github.com/modelcontextprotocol/servers/tree/main/src/postgres"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "database"
    ],
    "provider": "npx",
    "stars": 976,
    "config": [
      {
        "mcpServers": {
          "postgresql": {
            "command": "npx",
            "args": [
              "-y",
              "@modelcontextprotocol/server-postgres"
            ],
            "env": {
              "POSTGRES_CONNECTION_STRING": "<DATABASE_URL>"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-postman-mcp-server",
    "name": "mcp-server-postman",
    "description": "Interact with Postman API.",
    "links": {
      "application": "https://github.com/delano/postman-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "postman": {
            "command": "node",
            "args": [
              "/path/to/postman-api-server/build/index.js"
            ],
            "env": {
              "POSTMAN_API_KEY": "CHANGEME"
            }
          }
        }
      }
    ],
    "stars": 81
  },
  {
    "id": "mcp-server-postmancer",
    "name": "mcp-server-postmancer",
    "description": "An MCP server for replacing Rest Clients like Postman/Insomnia, by allowing your LLM to maintain and use api collections.",
    "links": {
      "application": "https://github.com/hijaz/postmancer"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "postmancer": {
            "command": "npx",
            "args": [
              "-y",
              "postmancer"
            ],
            "env": {
              "LOG_LEVEL": "info"
            }
          }
        }
      }
    ],
    "stars": 8
  },
  {
    "id": "mcp-server-powerdrill",
    "name": "mcp-server-powerdrill",
    "description": "An MCP server that provides tools to interact with Powerdrill datasets, enabling smart AI data analysis and insights.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "powerdrill": {
            "command": "npx",
            "args": [
              "-y",
              "powerdrill-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-pox-mcp-server",
    "name": "mcp-server-pox",
    "description": "MCP server for the POX SDN controller to provides network control and management capabilities.",
    "links": {
      "application": "https://github.com/davidlin2k/pox-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "pox": {
            "command": "uv",
            "args": [
              "--directory",
              "parent_of_servers_repo/servers/src/mcp_server_pox",
              "run",
              "server.py"
            ],
            "env": {
              "POX_SERVER_URL": "http://localhost:8000"
            }
          }
        }
      }
    ],
    "stars": 1
  },
  {
    "id": "mcp-server-prisma",
    "icon": "https://avatars.githubusercontent.com/u/17219288?s=200&v=4",
    "name": "mcp-server-prisma",
    "description": "Gives LLMs the ability to manage Prisma Postgres databases.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-prisma",
      "application": "https://github.com/prisma/prisma"
    },
    "tags": [
      "database",
      "integration",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "6.9.0",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "feb584e5d2fc1a67f3cac31b3c5705736d87d96f35424340f586e599e69a7698",
      "reason": "Mixed quality documentation with inconsistent naming conventions and parameter descriptions. Tool descriptions range from comprehensive (migrate-status, migrate-dev) to basic (Prisma-Login). Most tools have adequate functional descriptions but parameter documentation is consistently weak - the ubiquitous 'projectCWD' parameter lacks any description across all tools, and other parameters like 'name' and 'region' have minimal or missing descriptions. Naming is inconsistent with some tools using kebab-case and others using PascalCase.",
      "score": "C"
    },
    "resources": {
      "tools": 7,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-producthunt-mcp-server",
    "name": "mcp-server-producthunt",
    "description": "MCP server for Product Hunt. Interact with trending posts, comments, collections, users, and more.",
    "links": {
      "application": "https://github.com/jaipandya/producthunt-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "communication",
      "research",
      "development"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "product-hunt": {
            "command": "product-hunt-mcp",
            "env": {
              "PRODUCT_HUNT_TOKEN": "your_token_here"
            }
          }
        }
      }
    ],
    "stars": 10
  },
  {
    "id": "mcp-server-prometheus-mcp-server",
    "name": "mcp-server-prometheus",
    "description": "Query and analyze Prometheus, open-source monitoring system.",
    "links": {
      "application": "https://github.com/pab1it0/prometheus-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "cloud",
      "research",
      "development"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "prometheus": {
            "command": "uv",
            "args": [
              "--directory",
              "<full path to prometheus-mcp-server directory>",
              "run",
              "src/prometheus_mcp_server/main.py"
            ],
            "env": {
              "PROMETHEUS_URL": "http://your-prometheus-server:9090",
              "PROMETHEUS_USERNAME": "your_username",
              "PROMETHEUS_PASSWORD": "your_password"
            }
          }
        }
      }
    ],
    "stars": 47
  },
  {
    "id": "mcp-server-pulumi",
    "icon": "https://www.pulumi.com/images/favicon.ico",
    "name": "mcp-server-pulumi",
    "description": "Server for programmatic Pulumi operations via Model Context Protocol.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-pulumi",
      "application": "https://github.com/pulumi/mcp-server"
    },
    "tags": [
      "automation",
      "development"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.2",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "508cc9bb77963bc5dc1de540b7632b31cad9d448b053f36bef91c154398d3f5e",
      "reason": "The toolset provides adequate documentation with clear tool names and basic functionality descriptions. However, the descriptions are quite brief (1-2 sentences) and lack important context about when to use each tool, potential limitations, or what outputs to expect. Parameter documentation is functional but minimal, with some helpful examples in the registry tools but missing key details like expected formats or constraints. The CLI tools especially lack clarity about their effects and risks.",
      "score": "C"
    },
    "resources": {
      "tools": 5,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-puppeteer",
    "name": "mcp-server-puppeteer",
    "description": "Browser automation and web scraping.",
    "links": {
      "application": "https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "web",
      "integration"
    ],
    "provider": "npx",
    "stars": 976,
    "config": [
      {
        "mcpServers": {
          "puppeteer": {
            "command": "npx",
            "args": [
              "-y",
              "@modelcontextprotocol/server-puppeteer"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-pyATS_MCP",
    "name": "mcp-server-pyATS_MCP",
    "description": "Cisco pyATS server enabling structured, model-driven interaction with network devices.",
    "links": {
      "application": "https://github.com/automateyournetwork/pyATS_MCP"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "automation",
      "development",
      "cloud"
    ],
    "provider": "docker",
    "config": [],
    "stars": 16
  },
  {
    "id": "mcp-server-qa-sphere",
    "name": "mcp-server-qa-sphere",
    "description": "Integration with QA Sphere test management system, enabling LLMs to discover, summarize, and interact with test cases directly from AI-powered IDEs.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "qa-sphere": {
            "command": "npx",
            "args": [
              "-y",
              "qasphere-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-qasphere-mcp",
    "name": "mcp-server-qasphere",
    "description": "Integration with QA Sphere test management system, enabling LLMs to discover, summarize, and interact with test cases directly from AI-powered IDEs.",
    "links": {
      "application": "https://github.com/Hypersequent/qasphere-mcp"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "qasphere": {
            "command": "npx",
            "args": [
              "-y",
              "qasphere-mcp"
            ],
            "env": {
              "QASPHERE_TENANT_URL": "your-company.region.qasphere.com",
              "QASPHERE_API_KEY": "your-api-key"
            }
          }
        }
      }
    ],
    "stars": 9
  },
  {
    "id": "mcp-server-qdrant",
    "name": "mcp-server-qdrant",
    "description": "Implement semantic memory layer on top of the Qdrant vector search engine.",
    "links": {
      "application": "https://github.com/qdrant/mcp-server-qdrant"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research",
      "database"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "qdrant": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-server-qdrant"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-qgis_mcp",
    "name": "mcp-server-qgis_mcp",
    "description": "Connects QGIS Desktop to Claude AI through the MCP. This integration enables prompt-assisted project creation, layer loading, code execution, and more.",
    "links": {
      "application": "https://github.com/jjsantos01/qgis_mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "storage",
      "database",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "qgis": {
            "command": "uv",
            "args": [
              "--directory",
              "/ABSOLUTE/PATH/TO/PARENT/REPO/FOLDER/qgis_mcp/src/qgis_mcp",
              "run",
              "qgis_mcp_server.py"
            ]
          }
        }
      }
    ],
    "stars": 469
  },
  {
    "id": "mcp-server-qiniu-mcp-server",
    "name": "mcp-server-qiniu",
    "description": "An MCP built on Qiniu Cloud products, supporting access to Qiniu Cloud Storage, media processing services, etc.",
    "links": {
      "application": "https://github.com/qiniu/qiniu-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "development"
    ],
    "provider": "npx",
    "stars": 10,
    "config": [
      {
        "mcpServers": {
          "qiniu": {
            "command": "uvx",
            "args": [
              "qiniu-mcp-server"
            ],
            "env": {
              "QINIU_ACCESS_KEY": "YOUR_ACCESS_KEY",
              "QINIU_SECRET_KEY": "YOUR_SECRET_KEY",
              "QINIU_REGION_NAME": "YOUR_REGION_NAME",
              "QINIU_ENDPOINT_URL": "YOUR_ENDPOINT_URL",
              "QINIU_BUCKETS": "YOUR_BUCKET_A,YOUR_BUCKET_B"
            },
            "disabled": false
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-qlik-mcp",
    "name": "mcp-server-qlik",
    "description": "MCP Server for Qlik Cloud API that enables querying applications, sheets, and extracting data from visualizations with comprehensive authentication and rate limiting support.",
    "links": {
      "application": "https://github.com/jwaxman19/qlik-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "qlik": {
            "command": "npx",
            "args": [
              "tsx",
              "src/index.ts"
            ],
            "env": {
              "QLIK_API_KEY": "your_api_key_here",
              "QLIK_BASE_URL": "your_tenant_url",
              "QLIK_APP_ID": "your_default_app_id"
            },
            "cwd": "/path/to/qlik-mcp"
          }
        }
      }
    ],
    "stars": 1
  },
  {
    "id": "mcp-server-rabbitmq",
    "name": "mcp-server-rabbitmq",
    "description": "Enable interaction (admin operation, message enqueue/dequeue) with RabbitMQ.",
    "links": {
      "application": "https://github.com/kenliao94/mcp-server-rabbitmq"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "rabbitmq": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/repo/mcp-server-rabbitmq",
              "run",
              "mcp-server-rabbitmq",
              "--rabbitmq-host",
              "YOUR_VALUE",
              "--port",
              "YOUR_VALUE",
              "--username",
              "YOUR_VALUE",
              "--password",
              "YOUR_VALUE",
              "--use-tls",
              "YOUR_VALUE"
            ]
          }
        }
      }
    ],
    "stars": 16
  },
  {
    "id": "mcp-server-rad-security",
    "name": "mcp-server-rad-security",
    "description": "Interact with the RAD Security platform which provides AI-powered security insights for Kubernetes and cloud environments.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "security",
      "cloud"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "rad-security": {
            "command": "npx",
            "args": [
              "-y",
              "radsecurity-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-rag-web-browser",
    "name": "mcp-server-rag-web-browser",
    "description": "An MCP server for Apify's open-source RAG Web Browser Actor to perform web searches, scrape URLs, and return content in Markdown.",
    "links": {
      "application": "https://github.com/apify/mcp-server-rag-web-browser"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "research",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "rag-web-browser": {
            "command": "npx",
            "args": [
              "@apify/mcp-server-rag-web-browser"
            ],
            "env": {
              "APIFY_TOKEN": "your-apify-api-token"
            }
          }
        }
      }
    ],
    "stars": 131
  },
  {
    "id": "mcp-server-ragie-mcp-server",
    "name": "mcp-server-ragie",
    "description": "Retrieve context from your Ragie (RAG) knowledge base connected to integrations like Google Drive, Notion, JIRA and more.",
    "links": {
      "application": "https://github.com/ragieai/ragie-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "ragie": {
            "command": "npx",
            "args": [
              "-y",
              "@ragieai/mcp-server",
              "--partition",
              "optional_partition_id"
            ],
            "env": {
              "RAGIE_API_KEY": "your_api_key"
            }
          }
        }
      }
    ],
    "stars": 9
  },
  {
    "id": "mcp-server-raindrop-io-mcp-server",
    "name": "mcp-server-raindrop-io",
    "description": "An integration that allows LLMs to interact with Raindrop.io bookmarks using the Model Context Protocol (MCP).",
    "links": {
      "application": "https://github.com/hiromitsusasaki/raindrop-io-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "storage",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "raindrop": {
            "command": "node",
            "args": [
              "PATH_TO_BUILD/index.js"
            ],
            "env": {
              "RAINDROP_TOKEN": "your_access_token_here"
            }
          }
        }
      }
    ],
    "stars": 24
  },
  {
    "id": "mcp-server-ramp",
    "name": "mcp-server-ramp",
    "description": "Interact with Ramp's Developer API to run analysis on your spend and gain insights leveraging LLMs.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "ramp": {
            "command": "npx",
            "args": [
              "-y",
              "ramp-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-raygun",
    "name": "mcp-server-raygun",
    "description": "Interact with your crash reporting and real using monitoring data on your Raygun account.",
    "links": {
      "application": "https://github.com/MindscapeHQ/mcp-server-raygun"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "monitoring"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "raygun": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-server-raygun"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-razorpay",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/razorpay/live/logo-1745872254350.png",
    "name": "mcp-server-razorpay",
    "description": "Advanced payment processing with Razorpay APIs for devs and AI tools.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-razorpay",
      "application": "https://github.com/razorpay/razorpay-mcp-server"
    },
    "tags": [
      "automation",
      "finance"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "go",
    "version": "v1.2.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "4d1ba2ae23ede9dce849808f1b5553fb433e4c19e41b10860fba620703cca2dc",
      "reason": "The toolset demonstrates good documentation quality overall. Tool names are clear and purposeful (e.g., 'capture_payment', 'create_order'), descriptions adequately explain functionality and usage context (1-3 sentences covering what, when, and key constraints), and parameter documentation is generally comprehensive with clear purposes, types, and constraints. However, there are some inconsistencies in description depth and minor formatting issues (like missing spaces in some parameter descriptions), preventing it from reaching excellent quality. The documentation successfully guides users without significant gaps.",
      "score": "B"
    },
    "resources": {
      "tools": 37,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-react-analyzer-mcp",
    "name": "mcp-server-react-analyzer",
    "description": "Analyze React code locally, generate docs / llm.txt for whole project at once.",
    "links": {
      "application": "https://github.com/azer/react-analyzer-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 9
  },
  {
    "id": "mcp-server-rember",
    "name": "mcp-server-lenzekov-rember",
    "description": "Create spaced repetition flashcards in Rember to remember anything you learn in your chats.",
    "links": {
      "application": "https://github.com/lenzekov/rember-mcp-server"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "rember": {
            "command": "npx",
            "args": [
              "-y",
              "rember-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-rember-mcp",
    "name": "mcp-server-rember-rember",
    "description": "Create spaced repetition flashcards in Rember to remember anything you learn in your chats.",
    "links": {
      "application": "https://github.com/rember/rember-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "rember": {
            "command": "npx",
            "args": [
              "-y",
              "@getrember/mcp",
              "--api-key=YOUR_REMBER_API_KEY"
            ]
          }
        }
      }
    ],
    "stars": 36
  },
  {
    "id": "mcp-server-replicate-flux-mcp",
    "name": "mcp-server-replicate-flux",
    "description": "Provides the ability to generate images via Replicate's API.",
    "links": {
      "application": "https://github.com/awkoy/replicate-flux-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "replicate-flux-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "replicate-flux-mcp"
            ],
            "env": {
              "REPLICATE_API_TOKEN": "YOUR TOKEN"
            }
          }
        }
      }
    ],
    "stars": 20
  },
  {
    "id": "mcp-server-rijksmuseum-mcp",
    "name": "mcp-server-rijksmuseum",
    "description": "Rijksmuseum API integration for artwork search, details, and collections.",
    "links": {
      "application": "https://github.com/r-huijts/rijksmuseum-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "web",
      "integration"
    ],
    "provider": "npx",
    "stars": 44,
    "config": [
      {
        "mcpServers": {
          "rijksmuseum-server": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-server-rijksmuseum"
            ],
            "env": {
              "RIJKSMUSEUM_API_KEY": "your_api_key_here"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-riza",
    "name": "mcp-server-riza",
    "description": "Arbitrary code execution and tool-use platform for LLMs by Riza.",
    "links": {
      "application": "https://github.com/riza-ai/riza-mcp-server"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "riza": {
            "command": "npx",
            "args": [
              "-y",
              "riza-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-root-signals",
    "name": "mcp-server-root-signals",
    "description": "Equip AI agents with evaluation and self-improvement capabilities with Root Signals.",
    "links": {
      "application": "https://github.com/rootsignals/rootsignals-mcp"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "root-signals": {
            "command": "npx",
            "args": [
              "-y",
              "rootsignals-mcp"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-rug-check-mcp",
    "name": "mcp-server-rug-check",
    "description": "An MCP server that detects potential risks in Solana meme tokens.",
    "links": {
      "application": "https://github.com/kukapay/rug-check-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "rug-check-mcp": {
            "command": "python",
            "args": [
              "path/to/rug-check-mcp/main.py"
            ],
            "env": {
              "SOLSNIFFER_API_KEY": "your_solsniffer_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 3
  },
  {
    "id": "mcp-server-runescape",
    "name": "mcp-server-runescape",
    "description": "An MCP server with tools for interacting with RuneScape (RS) and Old School RuneScape (OSRS) data, including item prices, player hiscores, and more.",
    "links": {
      "application": "https://github.com/stefan-xyz/mcp-server-runescape"
    },
    "official": false,
    "runtime": "node",
    "scope": "unknown",
    "tags": [
      "integration",
      "gaming"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-server-runescape": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-server-runescape"
            ]
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-rust-docs-mcp-server",
    "name": "mcp-server-rust-docs",
    "description": "Provides up-to-date documentation context for a specific Rust crate to LLMs via an MCP tool, using semantic search (embeddings) and LLM summarization.",
    "links": {
      "application": "https://github.com/Govcraft/rust-docs-mcp-server"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "integration",
      "database",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "rust-docs-reqwest": {
            "command": "/path/to/your/rustdocs_mcp_server",
            "args": [
              "reqwest@0.12"
            ],
            "env": {
              "OPENAI_API_KEY": "YOUR_OPENAI_API_KEY_HERE"
            },
            "disabled": false,
            "alwaysAllow": []
          },
          "rust-docs-async-stripe": {
            "command": "rustdocs_mcp_server",
            "args": [
              "async-stripe@0.40",
              "-F",
              " runtime-tokio-hyper-rustls"
            ],
            "env": {
              "OPENAI_API_KEY": "YOUR_OPENAI_API_KEY_HERE"
            },
            "disabled": false,
            "alwaysAllow": []
          }
        }
      },
      {
        "mcpServers": {
          "rust-docs-serde": {
            "command": "/path/to/your/rustdocs_mcp_server",
            "args": [
              "serde@^1.0"
            ]
          },
          "rust-docs-async-stripe-rt": {
            "command": "rustdocs_mcp_server",
            "args": [
              "async-stripe@0.40",
              "-F",
              "runtime-tokio-hyper-rustls"
            ]
          }
        }
      }
    ],
    "stars": 65
  },
  {
    "id": "mcp-server-scrapeless",
    "name": "mcp-server-unknown-scrapeless",
    "description": "Integrate real-time Google SERP results into your LLM applications. This server enables dynamic context retrieval for AI workflows, chatbots, and research tools.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "scrapeless": {
            "command": "npx",
            "args": [
              "-y",
              "scrapeless-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-scrapeless-mcp-server",
    "name": "mcp-server-scrapeless-ai-scrapeless",
    "description": "The Scrapeless Model Context Protocol service acts as an MCP server connector to the Google SERP API, enabling web search within the MCP ecosystem without leaving it.",
    "links": {
      "application": "https://github.com/scrapeless-ai/scrapeless-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "scrapelessMcpServer": {
            "command": "npx",
            "args": [
              "-y",
              "scrapeless-mcp-server"
            ],
            "env": {
              "SCRAPELESS_KEY": "YOUR_SCRAPELESS_KEY"
            }
          }
        }
      }
    ],
    "stars": 14
  },
  {
    "id": "mcp-server-scrapezy",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/scrapezy/live/logo-1744789567776.png",
    "name": "mcp-server-scrapezy",
    "description": "Extracts structured data from websites using AI models.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-scrapezy",
      "application": "https://github.com/Scrapezy/mcp"
    },
    "tags": [
      "web",
      "integration",
      "research"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.1.1",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "fafecbd7b239acddf089e75f48e66a49e821b42a5503fb37258477d423f66cc8",
      "reason": "The tool name is clear and specific, but the description is overly brief and lacks important context about what type of structured data can be extracted, how the prompt should be formatted, or what the tool's capabilities and limitations are. The parameter descriptions are minimal - 'prompt' lacks guidance on how to construct effective prompts, and while 'url' is adequately described with proper format constraints, overall documentation leaves significant gaps requiring users to guess implementation details.",
      "score": "D"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-screenpipe",
    "name": "mcp-server-screenpipe",
    "description": "Local-first system capturing screen/audio with timestamped indexing, SQL/embedding storage, semantic search, LLM-powered history analysis, and event-triggered actions - enables building context-aware AI agents through a NextJS plugin ecosystem.",
    "links": {
      "application": "https://github.com/mediar-ai/screenpipe"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration",
      "web",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 14125
  },
  {
    "id": "mcp-server-screenshotone",
    "name": "mcp-server-screenshotone",
    "description": "Render website screenshots with ScreenshotOne.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "web"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "screenshotone": {
            "command": "npx",
            "args": [
              "-y",
              "screenshotone-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-search1api-mcp",
    "name": "mcp-server-search1api",
    "description": "Search via search1api (requires paid API key).",
    "links": {
      "application": "https://github.com/fatwang2/search1api-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "research",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "search1api": {
            "command": "npx",
            "args": [
              "-y",
              "search1api-mcp"
            ],
            "env": {
              "SEARCH1API_KEY": "YOUR_SEARCH1API_KEY"
            }
          }
        }
      }
    ],
    "stars": 123
  },
  {
    "id": "mcp-server-secops-mcp",
    "name": "mcp-server-secops",
    "description": "All-in-one security testing toolbox that brings together popular open source tools through a single MCP interface. Connected to an AI agent, it enables tasks like pentesting, bug bounty hunting, threat hunting, and more.",
    "links": {
      "application": "https://github.com/securityfortech/secops-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "security",
      "cloud",
      "database"
    ],
    "provider": "docker",
    "config": [],
    "stars": 70
  },
  {
    "id": "mcp-server-semgrep",
    "name": "mcp-server-semgrep",
    "description": "Enable AI agents to secure code with Semgrep.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "security",
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "semgrep": {
            "command": "npx",
            "args": [
              "-y",
              "semgrep-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-sentry",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-sentry",
    "description": "Retrieving and analyzing issues from Sentry.io.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-sentry",
      "application": "https://github.com/modelcontextprotocol/servers/tree/main/src/sentry"
    },
    "tags": [
      "monitoring",
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "python",
    "version": "2025.1.14",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "d522a4dd694c9898d9c74f213e3d63ceff8865d2cb4d6af7205214753b468f5b",
      "reason": "The tool has a clear, specific name and an excellent description that comprehensively covers functionality, use cases, and what information it provides. The parameter documentation is adequate with a clear description of the expected input format, though it could benefit from examples of valid formats (e.g., 'SENTRY-123' vs full URL format).",
      "score": "B"
    },
    "resources": {
      "tools": 1,
      "prompts": 1,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-sentry-official",
    "name": "mcp-server-sentry-official",
    "description": "Official MCP server for Sentry.",
    "links": {
      "application": "https://github.com/getsentry/mcp-server-sentry"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "monitoring"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "sentry-official": {
            "command": "npx",
            "args": [
              "-y",
              "@modelcontextprotocol/server-sentry"
            ],
            "env": {
              "SENTRY_AUTH_TOKEN": "<YOUR_TOKEN>"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-sequential-thinking",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-sequential-thinking",
    "description": "MCP server for sequential thinking and problem solving",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-sequential-thinking",
      "application": "https://modelcontextprotocol.io"
    },
    "tags": [
      "development",
      "automation"
    ],
    "official": false,
    "scope": "standalone",
    "mutitenant": false,
    "runtime": "node",
    "version": "0.6.2",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "892d0f4a0ae6a2a5164e0f29f0158dc9acc90a847441ae028cd39f446bda326c",
      "reason": "The tool has a clear, descriptive name and exceptionally comprehensive description covering functionality, use cases, and detailed usage guidance. However, parameter documentation is inconsistent - while some parameters have clear descriptions (thought, thoughtNumber), others are too brief (branchId, needsMoreThoughts) given the tool's complexity. The mismatch between parameter names in the description (snake_case) and schema (camelCase) also reduces clarity.",
      "score": "B"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-serena",
    "name": "mcp-server-serena",
    "description": "A fully-featured coding agent that relies on symbolic code operations by using language servers.",
    "links": {
      "application": "https://github.com/oraios/serena"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "storage",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "serena": {
            "command": "/abs/path/to/uv",
            "args": [
              "run",
              "--directory",
              "/abs/path/to/serena",
              "serena-mcp-server",
              "--project-file",
              "/abs/path/to/myproject.yml"
            ]
          }
        }
      }
    ],
    "stars": 739
  },
  {
    "id": "mcp-server-serveMyAPI",
    "name": "mcp-server-serveMyAPI",
    "description": "A personal MCP (Model Context Protocol) server for securely storing and accessing API keys across projects using the macOS Keychain.",
    "links": {
      "application": "https://github.com/Jktfe/serveMyAPI"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "serveMyAPI": {
            "command": "node",
            "args": [
              "/ABSOLUTE/PATH/TO/servemyapi/dist/index.js"
            ]
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-server-google-news",
    "name": "mcp-server-google-news",
    "description": "Google News integration with automatic topic categorization, multi-language support, and comprehensive search capabilities including headlines, stories, and related topics through SerpAPI.",
    "links": {
      "application": "https://github.com/ChanMeng666/server-google-news"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 44
  },
  {
    "id": "mcp-server-shopify-dev",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/shopify/live/logo-1744808475193.png",
    "name": "mcp-server-shopify-dev",
    "description": "Model Context Protocol (MCP) server that interacts with Shopify Dev.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-shopify-dev",
      "application": "https://github.com/Shopify/dev-mcp"
    },
    "tags": [
      "integration",
      "research",
      "integration"
    ],
    "official": true,
    "scope": "standalone",
    "mutitenant": true,
    "runtime": "node",
    "version": "1.1.0",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "71f698342038a25613348729f53c896fdc491b3e60ba8b41ece3fb78992cb1ab",
      "reason": "Mixed quality documentation with some tools having adequate descriptions while others fall short. The 'introspect_admin_schema' and 'get_started' tools provide reasonable context and usage guidance, but 'search_dev_docs' and 'fetch_docs_by_path' have overly brief descriptions that leave key details unclear. Parameter documentation is generally adequate but inconsistent, with some parameters well-explained and others lacking sufficient detail about expected formats or constraints.",
      "score": "C"
    },
    "resources": {
      "tools": 4,
      "prompts": 1,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-simulator-ios-idb",
    "name": "mcp-server-simulator-ios-idb",
    "description": "A Model Context Protocol (MCP) server that enables LLMs to interact with iOS simulators (iPhone, iPad, etc.) through natural language commands.",
    "links": {
      "application": "https://github.com/InditexTech/mcp-server-simulator-ios-idb"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "ios-simulator": {
            "command": "node",
            "args": [
              "/path/to/mcp-server-simulator-ios-idb/dist/index.js"
            ],
            "env": {}
          }
        }
      },
      {
        "mcpServers": {
          "ios-simulator": {
            "command": "node",
            "args": [
              "/path/to/mcp-server-simulator-ios-idb/dist/index.js"
            ],
            "env": {}
          }
        }
      }
    ],
    "stars": 149
  },
  {
    "id": "mcp-server-simulator-mcp-server",
    "name": "mcp-server-simulator",
    "description": "An MCP server to control iOS Simulators.",
    "links": {
      "application": "https://github.com/JoshuaRileyDev/simulator-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "simulator": {
            "command": "npx",
            "args": [
              "y",
              "@joshuarileydev/simulator-mcp-server"
            ]
          }
        }
      }
    ],
    "stars": 39
  },
  {
    "id": "mcp-server-singlestore",
    "name": "mcp-server-singlestore",
    "description": "Interact with the SingleStore database platform.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "database"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "singlestore": {
            "command": "npx",
            "args": [
              "-y",
              "singlestore-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-slack",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-slack",
    "description": "MCP server for interacting with Slack",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-slack",
      "application": "https://modelcontextprotocol.io"
    },
    "tags": [
      "communication",
      "integration"
    ],
    "official": false,
    "scope": "remote",
    "mutitenant": false,
    "runtime": "node",
    "version": "2025.4.25",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "664f16e1f0b3b022db020185ebd9f15eb7a049f9fb40497a1389d2d749e66888",
      "reason": "Tool names are clear and well-structured with consistent 'slack_' prefix. Descriptions provide basic functionality but lack important context like data formats, limitations, or usage scenarios. Parameter documentation is adequate with clear purposes and some helpful details (like timestamp format explanation), but missing constraints and examples that would improve usability.",
      "score": "C"
    },
    "resources": {
      "tools": 8,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-slack-mcp-server",
    "name": "mcp-server-korotovsky-slack",
    "description": "The most powerful MCP server for Slack Workspaces.",
    "links": {
      "application": "https://github.com/korotovsky/slack-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "cloud",
      "web",
      "integration",
      "communication",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "slack": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-remote",
              "https://x.y.z.q:3001/sse",
              "--header",
              "Authorization: Bearer ${SLACK_MCP_SSE_API_KEY}"
            ],
            "env": {
              "SLACK_MCP_SSE_API_KEY": "my-$$e-$ecret"
            }
          }
        }
      }
    ],
    "stars": 32
  },
  {
    "id": "mcp-server-solscan-mcp",
    "name": "mcp-server-solscan",
    "description": "An MCP tool for querying Solana transactions using natural language with Solscan API.",
    "links": {
      "application": "https://github.com/wowinter13/solscan-mcp"
    },
    "official": false,
    "runtime": "binary",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "solscan-mcp": {
            "command": "/Users/$username/.cargo/bin/solscan-mcp",
            "args": [],
            "env": {
              "SOLSCAN_API_KEY": "your_solscan_api_key"
            }
          }
        }
      }
    ],
    "stars": 8
  },
  {
    "id": "mcp-server-sonarqube-mcp-server",
    "name": "mcp-server-sonarqube",
    "description": "A Model Context Protocol (MCP) server that integrates with SonarQube to provide AI assistants with access to code quality metrics, issues, and quality gate statuses.",
    "links": {
      "application": "https://github.com/sapientpants/sonarqube-mcp-server"
    },
    "official": false,
    "runtime": "binary",
    "scope": "remote",
    "tags": [
      "cloud",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "sonarqube": {
            "command": "npx",
            "args": [
              "-y",
              "sonarqube-mcp-server@1.0.1"
            ],
            "env": {
              "SONARQUBE_URL": "https://sonarqube.example.com",
              "SONARQUBE_TOKEN": "your-sonarqube-token",
              "SONARQUBE_ORGANIZATION": "your-organization-key (optional)"
            }
          }
        }
      }
    ],
    "stars": 25
  },
  {
    "id": "mcp-server-spotify-mcp-server",
    "name": "mcp-server-spotify",
    "description": "Control Spotify playback and manage playlists.",
    "links": {
      "application": "https://github.com/marcelmarais/spotify-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration",
      "web",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "spotify": {
            "command": "node",
            "args": [
              "spotify-mcp-server/build/index.js"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "spotify": {
            "command": "node",
            "args": [
              "~/../spotify-mcp-server/build/index.js"
            ],
            "autoApprove": [
              "getListeningHistory",
              "getNowPlaying"
            ]
          }
        }
      }
    ],
    "stars": 54
  },
  {
    "id": "mcp-server-sql-analyzer",
    "name": "mcp-server-sql-analyzer",
    "description": "MCP server that provides SQL analysis, linting, and dialect conversion using SQLGlot.",
    "links": {
      "application": "https://github.com/j4c0bs/mcp-server-sql-analyzer"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "development",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "sql-analyzer": {
            "command": "uvx",
            "args": [
              "--from",
              "git+https://github.com/j4c0bs/mcp-server-sql-analyzer.git",
              "mcp-server-sql-analyzer"
            ]
          }
        }
      }
    ],
    "stars": 14
  },
  {
    "id": "mcp-server-sqlite",
    "name": "mcp-server-modelcontextprotocol-sqlite",
    "description": "Database interaction and business intelligence capabilities.",
    "links": {
      "application": "https://github.com/modelcontextprotocol/servers/tree/main/src/sqlite"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "database"
    ],
    "provider": "npx",
    "stars": 976,
    "config": [
      {
        "mcpServers": {
          "sqlite": {
            "command": "npx",
            "args": [
              "-y",
              "@modelcontextprotocol/server-sqlite"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-sqlite-explorer-fastmcp-mcp-server",
    "name": "mcp-server-sqlite-explorer-fastmcp",
    "description": "An MCP server that provides safe, read-only access to SQLite databases through Model Context Protocol (MCP). This server is built with the FastMCP framework, which enables LLMs to explore and query SQLite databases with built-in safety features and query validation.",
    "links": {
      "application": "https://github.com/hannesrudolph/sqlite-explorer-fastmcp-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database"
    ],
    "provider": "source",
    "config": [],
    "stars": 46
  },
  {
    "id": "mcp-server-square",
    "name": "mcp-server-square",
    "description": "A Model Context Protocol (MCP) server for square.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "finance"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "square": {
            "command": "npx",
            "args": [
              "-y",
              "square-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-starknet-mcp-server",
    "name": "mcp-server-starknet",
    "description": "Comprehensive Starknet blockchain integration with support for native tokens (ETH, STRK), smart contracts, StarknetID resolution, and token transfers.",
    "links": {
      "application": "https://github.com/mcpdotdirect/starknet-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "starknet-mcp-server": {
            "command": "npx",
            "args": [
              "@mcpdotdirect/starknet-mcp-server"
            ]
          },
          "starknet-mcp-http": {
            "command": "npx",
            "args": [
              "@mcpdotdirect/starknet-mcp-server",
              "http"
            ]
          }
        }
      }
    ],
    "stars": 3
  },
  {
    "id": "mcp-server-starrocks",
    "name": "mcp-server-starrocks",
    "description": "Interact with StarRocks.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "database"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "starrocks": {
            "command": "npx",
            "args": [
              "-y",
              "starrocks-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-strava-mcp",
    "name": "mcp-server-strava",
    "description": "An MCP server for Strava, an app for tracking physical exercise.",
    "links": {
      "application": "https://github.com/kw510/strava-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "strava": {
            "command": "npx",
            "args": [
              "mcp-remote",
              "https://mcp-strava-oauth.<your-subdomain>.workers.dev/sse"
            ]
          }
        }
      }
    ],
    "stars": 6
  },
  {
    "id": "mcp-server-stripe",
    "icon": "https://stripe.com/favicon.ico",
    "name": "mcp-server-stripe",
    "description": "Integrates Stripe APIs with agent frameworks for payments and custom actions.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-stripe",
      "application": "https://github.com/stripe/agent-toolkit"
    },
    "tags": [
      "automation",
      "integration",
      "finance"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.2.3",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "f9c60d243ed5398b61c89ad5970995ed3e3924d90b038af472623f9523ee5f92",
      "reason": "The toolset provides adequate documentation with clear tool names and basic functionality descriptions, but has inconsistent formatting, some unclear parameter descriptions, and missing contextual information. While most tools explain their core purpose, descriptions vary in quality from comprehensive (like update_subscription) to overly brief (like finalize_invoice), and several tools lack important usage context or constraints.",
      "score": "C"
    },
    "resources": {
      "tools": 21,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-supabase",
    "name": "mcp-server-unknown-supabase",
    "description": "Connects to Supabase platform for database, auth, edge functions and more.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "database",
      "cloud"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "supabase": {
            "command": "npx",
            "args": [
              "-y",
              "supabase-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-supabase-mcp",
    "name": "mcp-server-supabase",
    "description": "Official Supabase MCP server to connect AI assistants directly with your Supabase project and allows them to perform tasks like managing tables, fetching config, and querying data.",
    "links": {
      "application": "https://github.com/supabase-community/supabase-mcp"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "database",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "supabase": {
            "command": "npx",
            "args": [
              "-y",
              "@supabase/mcp-server-supabase@latest",
              "--access-token",
              "<personal-access-token>"
            ]
          }
        }
      }
    ],
    "stars": 1311
  },
  {
    "id": "mcp-server-supabase-mcp-server",
    "name": "mcp-server-alexander-zuev-supabase",
    "description": "Supabase MCP Server with support for SQL query execution and database exploration tools.",
    "links": {
      "application": "https://github.com/alexander-zuev/supabase-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "database",
      "integration",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "supabase": {
            "command": "/Users/username/.local/bin/supabase-mcp-server",
            "env": {
              "QUERY_API_KEY": "your-api-key",
              "SUPABASE_PROJECT_REF": "your-project-ref",
              "SUPABASE_DB_PASSWORD": "your-db-password",
              "SUPABASE_REGION": "us-east-1",
              "SUPABASE_ACCESS_TOKEN": "your-access-token",
              "SUPABASE_SERVICE_ROLE_KEY": "your-service-role-key"
            }
          }
        }
      }
    ],
    "stars": 678
  },
  {
    "id": "mcp-server-swift-mcp-gui.git",
    "name": "mcp-server-swift-gui.git",
    "description": "MCP server that can execute commands such as keyboard input and mouse movement.",
    "links": {
      "application": "https://github.com/NakaokaRei/swift-mcp-gui.git"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": []
  },
  {
    "id": "mcp-server-taskwarrior",
    "name": "mcp-server-taskwarrior",
    "description": "An MCP server for basic local taskwarrior usage (add, update, remove tasks).",
    "links": {
      "application": "https://github.com/awwaiid/mcp-server-taskwarrior"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "taskwarrior": {
            "command": "npx",
            "args": [
              "-y",
              "mcp-server-taskwarrior"
            ]
          }
        }
      }
    ],
    "stars": 12
  },
  {
    "id": "mcp-server-tasty-agent",
    "name": "mcp-server-tasty-agent",
    "description": "Tastyworks API integration to handle trading activities on Tastytrade.",
    "links": {
      "application": "https://github.com/ferdousbhai/tasty-agent"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "web",
      "finance",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "tastytrade": {
            "command": "path/to/uvx/command/uvx",
            "args": [
              "tasty-agent"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "tastytrade": {
            "command": "path/to/uv/command/uv",
            "args": [
              "--directory",
              "path/to/tasty-agent",
              "run",
              "tasty-agent"
            ]
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-tavily",
    "icon": "https://tavily.com/favicon.ico",
    "name": "mcp-server-tavily",
    "description": "Integrates AI models with web search and data extraction tools.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-tavily",
      "application": "https://github.com/tavily-ai/tavily-mcp"
    },
    "tags": [
      "research",
      "web"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.2.2",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "bef382d75e886606aeee86b9e2c11f3509bce50755428133dc115eb13639608f",
      "reason": "The toolset demonstrates good documentation quality with clear, descriptive tool names and comprehensive descriptions that explain functionality and use cases. Parameter documentation is generally thorough with helpful details like constraints, defaults, and examples. Minor weaknesses include some inconsistent parameter descriptions (e.g., 'usrls' typo in tavily-extract, unclear country default value) and occasional verbosity, but overall the documentation effectively guides users through the tools' capabilities.",
      "score": "B"
    },
    "resources": {
      "tools": 4,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-telegram-mcp",
    "name": "mcp-server-telegram",
    "description": "Telegram API integration for accessing user data, managing dialogs (chats, channels, groups), retrieving messages, sending messages and handling read status.",
    "links": {
      "application": "https://github.com/chigwell/telegram-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "cloud",
      "integration",
      "storage",
      "communication",
      "research",
      "database"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "telegram-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "/full/path/to/telegram-mcp",
              "run",
              "main.py"
            ]
          }
        }
      }
    ],
    "stars": 95
  },
  {
    "id": "mcp-server-tencent-cloud-cos-mcp",
    "name": "mcp-server-tencent-cloud-cos",
    "description": "Quickly integrate with Tencent Cloud Storage (COS) and Data Processing (CI) capabilities.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "cloud"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "tencent-cloud-cos-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "tencentcos-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-term_mcp_deepseek",
    "name": "mcp-server-term_mcp_deepseek",
    "description": "A DeepSeek MCP-like Server for Terminal.",
    "links": {
      "application": "https://github.com/OthmaneBlial/term_mcp_deepseek"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "automation",
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 6
  },
  {
    "id": "mcp-server-tfmcp",
    "name": "mcp-server-tfmcp",
    "description": "A Terraform MCP server allowing AI assistants to manage and operate Terraform environments, enabling reading configurations, analyzing plans, applying configurations, and managing Terraform state.",
    "links": {
      "application": "https://github.com/nwiizo/tfmcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "cloud",
      "development"
    ],
    "provider": "docker",
    "stars": 247,
    "config": [
      {
        "mcpServers": {
          "tfmcp": {
            "command": "/path/to/your/tfmcp",
            "args": [
              "mcp"
            ],
            "env": {
              "HOME": "/Users/yourusername",
              "PATH": "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin",
              "TERRAFORM_DIR": "/path/to/your/terraform/project"
            }
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-thegraph-mcp",
    "name": "mcp-server-thegraph",
    "description": "An MCP server that powers AI agents with indexed blockchain data from The Graph.",
    "links": {
      "application": "https://github.com/kukapay/thegraph-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "thegraph-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "path/to/thegraph-mcp",
              "run",
              "main.py"
            ],
            "env": {
              "THEGRAPH_API_KEY": "your_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 3
  },
  {
    "id": "mcp-server-think-mcp",
    "name": "mcp-server-think",
    "description": "Enhances any agent's reasoning capabilities by integrating the think-tools, as described in Anthropic's article.",
    "links": {
      "application": "https://github.com/Rai220/think-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "integration",
      "research",
      "development",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "think-mcp": {
            "command": "uvx",
            "args": [
              "think-mcp"
            ],
            "enabled": true
          }
        }
      }
    ],
    "stars": 8
  },
  {
    "id": "mcp-server-thirdweb",
    "name": "mcp-server-thirdweb",
    "description": "Read/write to over 2k blockchains, enabling data querying, contract analysis/deployment, and transaction execution, powered by Thirdweb.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "finance",
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "thirdweb": {
            "command": "npx",
            "args": [
              "-y",
              "thirdweb-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-ticktick-mcp",
    "name": "mcp-server-ticktick",
    "description": "TickTick MCP server that integrates with TickTick's API to manage personal todo projects and the tasks.",
    "links": {
      "application": "https://github.com/ekkyarmandi/ticktick-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "web"
    ],
    "provider": "source",
    "config": [],
    "stars": 0
  },
  {
    "id": "mcp-server-tidb",
    "name": "mcp-server-tidb",
    "description": "TiDB database integration with schema inspection and query capabilities.",
    "links": {
      "application": "https://github.com/c4pt0r/mcp-server-tidb"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "tidb": {
            "command": "uv",
            "args": [
              "--directory",
              "/path/to/mcp-server-tidb",
              "run",
              "src/main.py"
            ]
          }
        }
      }
    ],
    "stars": 18
  },
  {
    "id": "mcp-server-tiktok-mcp",
    "name": "mcp-server-tiktok",
    "description": "Interact with TikTok videos.",
    "links": {
      "application": "https://github.com/Seym0n/tiktok-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "tiktok-mcp": {
            "command": "node",
            "args": [
              "path\\build\\index.js"
            ],
            "env": {
              "TIKNEURON_MCP_API_KEY": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
            }
          }
        }
      }
    ],
    "stars": 34
  },
  {
    "id": "mcp-server-time",
    "name": "mcp-server-time",
    "description": "Time and timezone conversion capabilities.",
    "links": {
      "application": "https://github.com/modelcontextprotocol/servers/tree/main/src/time"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 976,
    "config": [
      {
        "mcpServers": {
          "time": {
            "command": "npx",
            "args": [
              "-y",
              "@modelcontextprotocol/server-time"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-tldv",
    "name": "mcp-server-tldv",
    "description": "Connect your AI agents to Google-Meet, Zoom & Microsoft Teams through tl;dv.",
    "links": {
      "application": "https://gitlab.com/tldv/tldv-mcp-server"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "communication"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "tldv": {
            "command": "npx",
            "args": [
              "-y",
              "tldv-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-token-minter-mcp",
    "name": "mcp-server-token-minter",
    "description": "An MCP server providing tools for AI agents to mint ERC-20 tokens across multiple blockchains.",
    "links": {
      "application": "https://github.com/kukapay/token-minter-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "Token-Minter-MCP": {
            "command": "node",
            "args": [
              "path/to/token-minter-mcp/server/index.js"
            ],
            "env": {
              "INFURA_KEY": "your infura key",
              "PRIVATE_KEY": "your private key"
            }
          }
        }
      }
    ],
    "stars": 9
  },
  {
    "id": "mcp-server-token-revoke-mcp",
    "name": "mcp-server-token-revoke",
    "description": "An MCP server for checking and revoking ERC-20 token allowances across multiple blockchains.",
    "links": {
      "application": "https://github.com/kukapay/token-revoke-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "token-revoke-mcp": {
            "command": "node",
            "args": [
              "path/to/token-revoke-mcp/index.js"
            ],
            "env": {
              "MORALIS_API_KEY": "your moralis api key",
              "PRIVATE_KEY": "your wallet private key"
            }
          }
        }
      }
    ],
    "stars": 1
  },
  {
    "id": "mcp-server-trino",
    "name": "mcp-server-dataring-engineering-trino",
    "description": "Trino MCP Server to query and access data from Trino Clusters.",
    "links": {
      "application": "https://github.com/Dataring-engineering/mcp-server-trino"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database"
    ],
    "provider": "source",
    "config": [],
    "stars": 13
  },
  {
    "id": "mcp-server-tripadvisor-mcp",
    "name": "mcp-server-tripadvisor",
    "description": "An MCP server that enables LLMs to interact with Tripadvisor API, supporting location data, reviews, and photos through standardized MCP interfaces.",
    "links": {
      "application": "https://github.com/pab1it0/tripadvisor-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "cloud",
      "integration",
      "research"
    ],
    "provider": "docker",
    "config": [
      {
        "mcpServers": {
          "tripadvisor": {
            "command": "uv",
            "args": [
              "--directory",
              "<full path to tripadvisor-mcp directory>",
              "run",
              "src/tripadvisor_mcp/main.py"
            ],
            "env": {
              "TRIPADVISOR_API_KEY": "your_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 21
  },
  {
    "id": "mcp-server-triplewhale",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/triplewhale/live/logo-1744789416714.jpeg",
    "name": "mcp-server-triplewhale",
    "description": "MCP server for managing context with Triplewhale through natural language.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-triplewhale",
      "application": "https://github.com/Triple-Whale/mcp-server-triplewhale"
    },
    "tags": [
      "marketing",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.0.6",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "b15fd122efff1246c0660cdcab831444718abbe8c3b674d6832df70456a4d097",
      "reason": "The tool has significant documentation quality issues: the name 'moby' is completely non-descriptive and requires domain knowledge to understand; the description is extremely verbose with excessive implementation details, OpenAPI schemas, and examples unrelated to the tool's purpose (SQL migration examples); parameter descriptions are minimal and don't explain their purpose or provide helpful examples. While some information is present, it's buried in unnecessary complexity making the tool difficult to understand and use.",
      "score": "D"
    },
    "resources": {
      "tools": 1,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-twilio",
    "name": "mcp-server-twilio",
    "description": "Interact with Twilio APIs to send messages, manage phone numbers, configure your account, and more.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "communication",
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "twilio": {
            "command": "npx",
            "args": [
              "-y",
              "twilio-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-twitter-username-changes-mcp",
    "name": "mcp-server-twitter-username-changes",
    "description": "An MCP server that tracks the historical changes of Twitter usernames.",
    "links": {
      "application": "https://github.com/kukapay/twitter-username-changes-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "development",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "twitter-username-changes": {
            "command": "python",
            "args": [
              "/absolute/path/to/twitter-username-changes-mcp/main.py"
            ]
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-unichat-mcp-server",
    "name": "mcp-server-unichat",
    "description": "Send requests to OpenAI, MistralAI, Anthropic, xAI, Google AI or DeepSeek using MCP protocol via tool or predefined prompts. Vendor API key required.",
    "links": {
      "application": "https://github.com/amidabuddha/unichat-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "web",
      "development"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "unichat-mcp-server": {
          "command": "uv",
          "args": [
            "--directory",
            "{{your source code local directory}}/unichat-mcp-server",
            "run",
            "unichat-mcp-server"
          ],
          "env": {
            "UNICHAT_MODEL": "SELECTED_UNICHAT_MODEL",
            "UNICHAT_API_KEY": "YOUR_UNICHAT_API_KEY"
          }
        }
      }
    },
    "config": [
      {
        "mcpServers": {
          "unichat-mcp-server": {
            "command": "uv",
            "args": [
              "--directory",
              "{{your source code local directory}}/unichat-mcp-server",
              "run",
              "unichat-mcp-server"
            ],
            "env": {
              "UNICHAT_MODEL": "SELECTED_UNICHAT_MODEL",
              "UNICHAT_API_KEY": "YOUR_UNICHAT_API_KEY"
            }
          }
        }
      }
    ],
    "stars": 32
  },
  {
    "id": "mcp-server-unifai",
    "name": "mcp-server-unifai",
    "description": "Dynamically search and call tools using UnifAI Network.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "unifai": {
            "command": "npx",
            "args": [
              "-y",
              "unifai-mcp-network"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-uniswap-poolspy-mcp",
    "name": "mcp-server-uniswap-poolspy",
    "description": "An MCP server that tracks newly created liquidity pools on Uniswap across multiple blockchains.",
    "links": {
      "application": "https://github.com/kukapay/uniswap-poolspy-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "Uniswap-PoolSpy": {
            "command": "uv",
            "args": [
              "--directory",
              "path/to/uniswap-poolspy-mcp",
              "run",
              "main.py"
            ],
            "env": {
              "THEGRAPH_API_KEY": "your api key from The Graph"
            }
          }
        }
      }
    ],
    "stars": 1
  },
  {
    "id": "mcp-server-uniswap-trader-mcp",
    "name": "mcp-server-uniswap-trader",
    "description": "An MCP server for AI agents to automate token swaps on Uniswap DEX across multiple blockchains.",
    "links": {
      "application": "https://github.com/kukapay/uniswap-trader-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "finance"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "Uniswap-Trader-MCP": {
            "command": "node",
            "args": [
              "path/to/uniswap-trader-mcp/server/index.js"
            ],
            "env": {
              "INFURA_KEY": "your infura key",
              "WALLET_PRIVATE_KEY": "your private key"
            }
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-unsplash-mcp-server",
    "name": "mcp-server-unsplash",
    "description": "An MCP server for Unsplash image search.",
    "links": {
      "application": "https://github.com/hellokaton/unsplash-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "research",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "unsplash": {
            "command": "uv",
            "args": [
              "run",
              "--with",
              "fastmcp",
              "fastmcp",
              "run",
              "./server.py"
            ],
            "env": {
              "UNSPLASH_ACCESS_KEY": "${YOUR_ACCESS_KEY}"
            }
          }
        }
      }
    ],
    "stars": 117
  },
  {
    "id": "mcp-server-unstructured",
    "name": "mcp-server-unstructured",
    "description": "Set up and interact with your unstructured data processing workflows in Unstructured Platform.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "unstructured": {
            "command": "npx",
            "args": [
              "-y",
              "unstructured-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-user-feedback-mcp",
    "name": "mcp-server-user-feedback",
    "description": "Simple MCP Server to enable a human-in-the-loop workflow in tools like Cline and Cursor.",
    "links": {
      "application": "https://github.com/mrexodia/user-feedback-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "github.com/mrexodia/user-feedback-mcp": {
            "command": "uv",
            "args": [
              "--directory",
              "c:\\MCP\\user-feedback-mcp",
              "run",
              "server.py"
            ],
            "timeout": 600,
            "autoApprove": [
              "user_feedback"
            ]
          }
        }
      }
    ],
    "stars": 20
  },
  {
    "id": "mcp-server-vectorize",
    "name": "mcp-server-unknown-vectorize",
    "description": "Vectorize MCP server for advanced retrieval, Private Deep Research, Anything-to-Markdown file extraction and text chunking.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research",
      "storage",
      "database"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "vectorize": {
            "command": "npx",
            "args": [
              "-y",
              "vectorize-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-vectorize-mcp-server",
    "name": "mcp-server-vectorize-io-vectorize",
    "description": "Vectorize MCP server for advanced retrieval, Private Deep Research, Anything-to-Markdown file extraction and text chunking.",
    "links": {
      "application": "https://github.com/vectorize-io/vectorize-mcp-server/"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "research",
      "integration",
      "database"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "vectorize": {
            "command": "npx",
            "args": [
              "-y",
              "@vectorize-io/vectorize-mcp-server@latest"
            ],
            "env": {
              "VECTORIZE_ORG_ID": "your-org-id",
              "VECTORIZE_TOKEN": "your-token",
              "VECTORIZE_PIPELINE_ID": "your-pipeline-id"
            }
          }
        }
      }
    ],
    "stars": 49
  },
  {
    "id": "mcp-server-vercel-ai-docs-mcp",
    "name": "mcp-server-vercel-ai-docs",
    "description": "A Model Context Protocol (MCP) server that provides AI-powered search and querying capabilities for the Vercel AI SDK documentation.",
    "links": {
      "application": "https://github.com/IvanAmador/vercel-ai-docs-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "database",
      "research",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "vercel-ai-docs": {
            "command": "node",
            "args": [
              "ABSOLUTE_PATH_TO_PROJECT/dist/main.js"
            ],
            "env": {
              "GOOGLE_GENERATIVE_AI_API_KEY": "your-google-api-key-here"
            }
          }
        }
      },
      {
        "mcpServers": {
          "vercel-ai-docs": {
            "command": "node",
            "args": [
              "ABSOLUTE_PATH_TO_PROJECT/dist/main.js"
            ],
            "env": {
              "GOOGLE_GENERATIVE_AI_API_KEY": "your-google-api-key-here"
            }
          }
        }
      }
    ],
    "stars": 5
  },
  {
    "id": "mcp-server-verodat",
    "name": "mcp-server-verodat",
    "description": "Interact with Verodat AI Ready Data platform.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "verodat": {
            "command": "npx",
            "args": [
              "-y",
              "verodat-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-veyrax",
    "name": "mcp-server-veyrax",
    "description": "Single tool to control all 100+ API integrations, and UI components.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "veyrax": {
            "command": "npx",
            "args": [
              "-y",
              "veyrax-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-vibe-check-mcp-server",
    "name": "mcp-server-vibe-check",
    "description": "An MCP server that prevents cascading errors and scope creep by calling a \"Vibe-check\" agent to ensure user alignment.",
    "links": {
      "application": "https://github.com/PV-Bhat/vibe-check-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 42
  },
  {
    "id": "mcp-server-video-editing-mcp",
    "name": "mcp-server-video-editing",
    "description": "Add, Analyze, Search, and Generate Video Edits from your Video Jungle Collection.",
    "links": {
      "application": "https://github.com/burningion/video-editing-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "research",
      "web",
      "development",
      "integration"
    ],
    "provider": "npx",
    "mcpServers": {
      "mcpServers": {
        "video-editor-mcp": {
          "command": "uvx",
          "args": [
            "video-editor-mcp",
            "YOURAPIKEY"
          ]
        }
      }
    },
    "stars": 114,
    "config": [
      {
        "mcpServers": {
          "video-editor-mcp": {
            "command": "uvx",
            "args": [
              "video-editor-mcp",
              "YOURAPIKEY"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-videodb",
    "name": "mcp-server-videodb",
    "description": "Server for advanced AI-driven video editing, semantic search, multilingual transcription, generative media, voice cloning, and content moderation.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "research"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "videodb": {
            "command": "npx",
            "args": [
              "-y",
              "videodb-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-vikingdb-mcp-server",
    "name": "mcp-server-vikingdb",
    "description": "VikingDB integration with collection and index introduction, vector store and search capabilities.",
    "links": {
      "application": "https://github.com/KashiwaByte/vikingdb-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "web",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-server-vikingdb": {
            "command": "uv",
            "args": [
              "--directory",
              "dir to mcp-server-vikingdb",
              "run",
              "mcp-server-vikingdb",
              "--vikingdb-host",
              "your host",
              "--vikingdb-region",
              "your region",
              "--vikingdb-ak",
              "your access key",
              "--vikingdb-sk",
              "your secret key",
              "--collection-name",
              "your collection name",
              "--index-name",
              "your index name"
            ]
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-vizro",
    "icon": "https://raw.githubusercontent.com/modelcontextprotocol/docs/refs/heads/main/favicon.svg",
    "name": "mcp-server-vizro",
    "description": "provides tools and templates to create a functioning Vizro chart or dashboard step by step",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-vizro",
      "application": "https://github.com/mckinsey/vizro"
    },
    "tags": [
      "development"
    ],
    "official": false,
    "scope": "standalone",
    "mutitenant": true,
    "runtime": "python",
    "version": "0.1.1",
    "requiresConfiguration": false,
    "requiresStorage": false,
    "rating": {
      "hash": "9ffff6e8e65726fa28e35f9e987dd76555818cb2fccc9f47621e0c021909c7d2",
      "reason": "The toolset demonstrates good documentation quality overall. Names are clear and purposeful, descriptions adequately explain functionality and usage context (though some could be more concise), and parameter documentation is generally complete with helpful enums and constraints. The complex nested schemas for ChartPlan and DFMetaData are well-structured. However, some descriptions are verbose or contain formatting issues, and a few parameters lack sufficient detail about their purpose and usage.",
      "score": "B"
    },
    "resources": {
      "tools": 6,
      "prompts": 3,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-volatility-mcp",
    "name": "mcp-server-volatility",
    "description": "MCP server for Volatility 3.x, allowing you to perform memory forensics analysis with AI assistant. Experience memory forensics without barriers as plugins like pslist and netscan become accessible through clean REST APIs and LLMs.",
    "links": {
      "application": "https://github.com/Gaffx/volatility-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "security",
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "vol": {
            "command": "python",
            "args": [
              "/ABSOLUTE_PATH_TO_MCP-SERVER/vol_mcp_server.py",
              "-i",
              "/ABSOLUTE_PATH_TO_MEMORY_IMAGE/YOUR_VALUE"
            ]
          }
        }
      }
    ],
    "stars": 13
  },
  {
    "id": "mcp-server-vrchat-mcp",
    "name": "mcp-server-vrchat",
    "description": "This is an MCP server for interacting with the VRChat API. You can retrieve information about friends, worlds, avatars, and more in VRChat.",
    "links": {
      "application": "https://github.com/sawa-zen/vrchat-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "web",
      "integration",
      "communication",
      "research"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "vrchat-mcp": {
            "command": "npx",
            "args": [
              "vrchat-mcp"
            ],
            "env": {
              "VRCHAT_USERNAME": "your-username",
              "VRCHAT_AUTH_TOKEN": "your-auth-token"
            }
          }
        }
      }
    ],
    "stars": 33
  },
  {
    "id": "mcp-server-vscode-mcp-server",
    "name": "mcp-server-vscode",
    "description": "An MCP Server that allows AI such as Claude to read from the directory structure in a VS Code workspace, see problems picked up by linter(s) and the language server, read code files, and make edits.",
    "links": {
      "application": "https://github.com/juehang/vscode-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "storage",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "vscode-mcp-server": {
            "command": "npx",
            "args": [
              "mcp-remote@next",
              "http://localhost:3000/mcp"
            ]
          }
        }
      }
    ],
    "stars": 22
  },
  {
    "id": "mcp-server-wanaku",
    "name": "mcp-server-wanaku",
    "description": "The Wanaku MCP Router is a SSE-based MCP server that provides an extensible routing engine that allows integrating your enterprise systems with AI agents.",
    "links": {
      "application": "https://github.com/wanaku-ai/wanaku"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [],
    "stars": 63
  },
  {
    "id": "mcp-server-weather-mcp-server",
    "name": "mcp-server-weather",
    "description": "Access real-time weather data for any location using the WeatherAPI.com API, providing detailed forecasts and current conditions.",
    "links": {
      "application": "https://github.com/devilcoder01/weather-mcp-server"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [],
    "stars": 0
  },
  {
    "id": "mcp-server-weaviate",
    "name": "mcp-server-weaviate",
    "description": "An MCP Server to connect to your Weaviate collections as a knowledge base as well as using Weaviate as a chat memory store.",
    "links": {
      "application": "https://github.com/weaviate/mcp-server-weaviate"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "database",
      "integration",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-server-weaviate": {
            "command": "PYTHON_PATH",
            "args": [
              "-m",
              "src.server",
              "--weaviate-url",
              "YOUR_WEAVIATE_URL",
              "--weaviate-api-key",
              "YOUR_WEAVIATE_API_KEY",
              "--search-collection-name",
              "YOUR_SEARCH_COLLECTION",
              "--store-collection-name",
              "YOUR_STORE_COLLECTION",
              "--openai-api-key",
              "YOUR_OPENAI_API_KEY"
            ],
            "env": {
              "PYTHONPATH": "PATH_TO_MCP_SERVER_WEAVIATE_DIRECTORY"
            }
          }
        }
      }
    ],
    "stars": 103
  },
  {
    "id": "mcp-server-web-search",
    "name": "mcp-server-web-search",
    "description": "An MCP server that enables free web searching using Google search results, with no API keys required.",
    "links": {
      "application": "https://github.com/pskill9/web-search"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "research",
      "web",
      "integration"
    ],
    "provider": "source",
    "stars": 129,
    "config": [
      {
        "mcpServers": {
          "web-search": {
            "command": "node",
            "args": [
              "/path/to/web-search/build/index.js"
            ]
          }
        }
      },
      {
        "mcpServers": {
          "web-search": {
            "command": "node",
            "args": [
              "/path/to/web-search/build/index.js"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-web3-mcp",
    "name": "mcp-server-web3",
    "description": "An MCP server implementation wrapping Ankr Advanced API. Access to NFT, token, and blockchain data across multiple chains including Ethereum, BSC, Polygon, Avalanche, and more.",
    "links": {
      "application": "https://github.com/tumf/web3-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "development"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "web3": {
            "command": "uvx",
            "args": [
              "web3-mcp"
            ],
            "env": {
              "ANKR_ENDPOINT": "https://rpc.ankr.com/..."
            }
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-web3-research-mcp",
    "name": "mcp-server-web3-research",
    "description": "Deep Research for crypto - free & fully local.",
    "links": {
      "application": "https://github.com/aaronjmars/web3-research-mcp"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "finance",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "web3-research-mcp": {
            "command": "npx",
            "args": [
              "-y",
              "web3-research-mcp@latest"
            ]
          }
        }
      }
    ],
    "stars": 11
  },
  {
    "id": "mcp-server-webflow",
    "icon": "https://djeqr6to3dedg.cloudfront.net/repo-logos/mcp/webflow/live/logo-1744809451659.png",
    "name": "mcp-server-webflow",
    "description": "Enables AI agents to interact with Webflow APIs.",
    "links": {
      "artifacts": "https://hub.docker.com/r/acuvity/mcp-server-webflow",
      "application": "https://github.com/webflow/mcp-server"
    },
    "tags": [
      "web",
      "integration"
    ],
    "official": true,
    "scope": "remote",
    "mutitenant": true,
    "runtime": "node",
    "version": "0.6.0",
    "requiresConfiguration": true,
    "requiresStorage": false,
    "rating": {
      "hash": "76c373c61d216fece89d8a343cc00bd12aab6a51d58afa953a5849707f20a1a1",
      "reason": "The toolset shows good documentation quality overall with clear, descriptive tool names and comprehensive parameter descriptions. Tool descriptions adequately explain functionality and usage context, though some could benefit from more detail about limitations or constraints. Parameter documentation is generally thorough with clear descriptions of purpose and types. However, some tools have minimal descriptions (like 'delete_all_site_scripts' with no description) and inconsistent detail levels across similar tools, preventing an A grade.",
      "score": "B"
    },
    "resources": {
      "tools": 32,
      "prompts": 0,
      "resources": 0,
      "resourcesTemplates": 0
    }
  },
  {
    "id": "mcp-server-webscraping-ai",
    "name": "mcp-server-unknown-webscraping-ai",
    "description": "Interact with WebScraping.AI for web data extraction and scraping.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "webscrapingai": {
            "command": "npx",
            "args": [
              "-y",
              "webscrapingai-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-webscraping-ai-mcp-server",
    "name": "mcp-server-webscraping-ai",
    "description": "Interact with WebScraping.ai for web data extraction and scraping.",
    "links": {
      "application": "https://github.com/webscraping-ai/webscraping-ai-mcp-server"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "research",
      "integration"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "mcp-server-webscraping-ai": {
            "command": "npx",
            "args": [
              "-y",
              "webscraping-ai-mcp"
            ],
            "env": {
              "WEBSCRAPING_AI_API_KEY": "YOUR_API_KEY_HERE",
              "WEBSCRAPING_AI_CONCURRENCY_LIMIT": "5"
            }
          }
        }
      }
    ],
    "stars": 4
  },
  {
    "id": "mcp-server-website-downloader",
    "name": "mcp-server-website-downloader",
    "description": "This MCP server provides a tool to download entire websites using wget. It preserves the website structure and converts links to work locally.",
    "links": {
      "application": "https://github.com/pskill9/website-downloader"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 84
  },
  {
    "id": "mcp-server-weekly-weather-mcp.git",
    "name": "mcp-server-weekly-weather.git",
    "description": "Weekly Weather MCP server which returns 7 full days of detailed weather forecasts anywhere in the world.",
    "links": {
      "application": "https://github.com/rossshannon/weekly-weather-mcp.git"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [],
    "provider": "source",
    "config": []
  },
  {
    "id": "mcp-server-whale-tracker-mcp",
    "name": "mcp-server-whale-tracker",
    "description": "An MCP server for tracking cryptocurrency whale transactions.",
    "links": {
      "application": "https://github.com/kukapay/whale-tracker-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "finance",
      "development"
    ],
    "provider": "source",
    "config": [],
    "stars": 12
  },
  {
    "id": "mcp-server-whatsapp-mcp",
    "name": "mcp-server-whatsapp",
    "description": "An MCP server for searching your personal WhatsApp messages, contacts and sending messages to individuals or groups.",
    "links": {
      "application": "https://github.com/lharries/whatsapp-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "integration",
      "communication",
      "research",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "whatsapp": {
            "command": "{{PATH_TO_UV}}",
            "args": [
              "--directory",
              "{{PATH_TO_SRC}}/whatsapp-mcp/whatsapp-mcp-server",
              "run",
              "main.py"
            ]
          }
        }
      }
    ],
    "stars": 3594
  },
  {
    "id": "mcp-server-wikimedia-enterprise-model-context-protocol",
    "name": "mcp-server-wikimedia-enterprise-model-context-protocol",
    "description": "Wikipedia Article lookup API.",
    "links": {
      "application": "https://gitlab.wikimedia.org/repos/future-audiences/wikimedia-enterprise-model-context-protocol"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "integration",
      "web",
      "research",
      "development"
    ],
    "provider": "source",
    "config": []
  },
  {
    "id": "mcp-server-wren-engine",
    "name": "mcp-server-wren-engine",
    "description": "The Semantic Engine for Model Context Protocol(MCP) Clients and AI Agents.",
    "links": {
      "application": "https://github.com/Canner/wren-engine"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "database"
    ],
    "provider": "source",
    "config": [],
    "stars": 305
  },
  {
    "id": "mcp-server-wrike-mcp-server",
    "name": "mcp-server-wrike",
    "description": "A lightweight implementation of a Wrike MCP server for interacting with Wrike tasks via public API.",
    "links": {
      "application": "https://github.com/EKibort/wrike-mcp-server"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "integration"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "wrike-mcp-server": {
            "command": "/Users/username/wrike-mcp-server/.venv/bin/python /Users/username/wrike-mcp-server/server.py",
            "env": {
              "WRIKE_API_TOKEN": "<YOUR WRIKE API TOKEN>"
            }
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-ws-mcp",
    "name": "mcp-server-ws",
    "description": "Wrap MCP servers with a WebSocket (for use with kitbitz).",
    "links": {
      "application": "https://github.com/nick1udwig/ws-mcp"
    },
    "official": false,
    "runtime": "unknown",
    "scope": "unknown",
    "tags": [
      "research",
      "integration",
      "storage"
    ],
    "provider": "npx",
    "config": [],
    "stars": 13
  },
  {
    "id": "mcp-server-wuye-ai",
    "name": "mcp-server-wuye-ai",
    "description": "An MCP server that interact with capabilities of the CRIC Wuye AI platform, an intelligent assistant specifically for the property management industry.",
    "links": {
      "application": "https://github.com/wuye-ai/mcp-server-wuye-ai"
    },
    "official": true,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "integration",
      "finance"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "CRIC物业AI": {
            "transportType": "stdio",
            "command": "npx",
            "args": [
              "-y",
              "@wuye-ai/mcp-server-wuye-ai"
            ],
            "env": {
              "CRIC_WUYE_AI_ACCESS_TOKEN": "{{您的 CRIC物业AI Access Token}}"
            }
          }
        }
      }
    ],
    "stars": 0
  },
  {
    "id": "mcp-server-xcode-mcp-server",
    "name": "mcp-server-xcode",
    "description": "Xcode integration for project management, file operations, and build automation.",
    "links": {
      "application": "https://github.com/r-huijts/xcode-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "storage",
      "research",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "xcode": {
            "command": "node",
            "args": [
              "/path/to/xcode-mcp-server/dist/index.js"
            ]
          }
        }
      }
    ],
    "stars": 202
  },
  {
    "id": "mcp-server-xero",
    "name": "mcp-server-xero",
    "description": "Interact with the accounting data in your business using our official MCP server.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "finance"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "xero": {
            "command": "npx",
            "args": [
              "-y",
              "xero-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-yahoofinance-mcp.git",
    "name": "mcp-server-yahoofinance.git",
    "description": "TS version of yahoo finance mcp.",
    "links": {
      "application": "https://github.com/tooyipjee/yahoofinance-mcp.git"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "finance"
    ],
    "provider": "npx",
    "config": []
  },
  {
    "id": "mcp-server-ycloud-whatsapp-mcp-server",
    "name": "mcp-server-ycloud-whatsapp",
    "description": "MCP server for WhatsApp Business Platform by YCloud.",
    "links": {
      "application": "https://github.com/YCloud-Developers/ycloud-whatsapp-mcp-server"
    },
    "official": false,
    "runtime": "node",
    "scope": "native",
    "tags": [
      "integration",
      "communication"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "ycloud-whatsapp": {
            "command": "node",
            "args": [
              "path/to/ycloud-whatsapp-mcp-server/build/index.js"
            ],
            "env": {
              "API_BASE_URL": "https://api.ycloud.com/v2",
              "API_HEADERS": "X-API-Key:your-api-key-here"
            }
          }
        }
      }
    ],
    "stars": 2
  },
  {
    "id": "mcp-server-yepcode",
    "name": "mcp-server-yepcode",
    "description": "Execute any LLM-generated code in the YepCode secure and scalable sandbox environment and create your own MCP tools using JavaScript or Python, with full support for NPM and PyPI packages.",
    "links": {
      "application": ""
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "security",
      "development"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "yepcode": {
            "command": "npx",
            "args": [
              "-y",
              "yepcode-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-yfinance-mcp",
    "name": "mcp-server-yfinance",
    "description": "An MCP server that uses yfinance to obtain information from Yahoo Finance.",
    "links": {
      "application": "https://github.com/narumiruna/yfinance-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "remote",
    "tags": [
      "cloud",
      "finance",
      "research"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "yfmcp": {
            "command": "uvx",
            "args": [
              "yfmcp"
            ]
          }
        }
      }
    ],
    "stars": 7
  },
  {
    "id": "mcp-server-youtube",
    "name": "mcp-server-klavis-ai-youtube",
    "description": "Extract and convert YouTube video information.",
    "links": {
      "application": "https://github.com/Klavis-AI/klavis/tree/main/mcp_servers/youtube"
    },
    "official": false,
    "runtime": "python",
    "scope": "unknown",
    "tags": [
      "integration",
      "database"
    ],
    "provider": "source",
    "config": [],
    "stars": 500
  },
  {
    "id": "mcp-server-youtube-transcript",
    "name": "mcp-server-youtube-transcript",
    "description": "Fetch YouTube subtitles and transcripts for AI analysis.",
    "links": {
      "application": "https://github.com/kimtaeyoon83/mcp-server-youtube-transcript"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "integration",
      "development"
    ],
    "provider": "npx",
    "stars": 170,
    "config": [
      {
        "mcpServers": {
          "youtube-transcript": {
            "command": "npx",
            "args": [
              "-y",
              "@kimtaeyoon83/mcp-server-youtube-transcript"
            ]
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-zapier",
    "name": "mcp-server-zapier",
    "description": "Connect your AI Agents to 8,000 apps instantly.",
    "links": {
      "application": "https://github.com/zapier/zapier-platform-mcp-server"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "integration"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "zapier": {
            "command": "npx",
            "args": [
              "-y",
              "zapier-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-zaturn",
    "name": "mcp-server-zaturn",
    "description": "Link multiple data sources (SQL, CSV, Parquet, etc.) and ask AI to analyze the data for insights and visualizations.",
    "links": {
      "application": "https://github.com/kdqed/zaturn"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "web",
      "integration",
      "database"
    ],
    "provider": "source",
    "config": [],
    "stars": 15
  },
  {
    "id": "mcp-server-zenml",
    "name": "mcp-server-zenml-io-zenml-io-zenml",
    "description": "Interact with your MLOps and LLMOps pipelines through your ZenML MCP server.",
    "links": {
      "application": "https://github.com/zenml-io/zenml-mcp-server"
    },
    "official": false,
    "runtime": "",
    "scope": "",
    "tags": [
      "communication"
    ],
    "provider": "npx",
    "stars": 0,
    "config": [
      {
        "mcpServers": {
          "zenml": {
            "command": "npx",
            "args": [
              "-y",
              "zenml-mcp-server"
            ],
            "env": {}
          }
        }
      }
    ]
  },
  {
    "id": "mcp-server-zettelkasten-mcp",
    "name": "mcp-server-zettelkasten",
    "description": "A Model Context Protocol (MCP) server that implements the Zettelkasten knowledge management methodology, allowing you to create, link, and search atomic notes through Claude and other MCP-compatible clients.",
    "links": {
      "application": "https://github.com/entanglr/zettelkasten-mcp"
    },
    "official": false,
    "runtime": "python",
    "scope": "native",
    "tags": [
      "research",
      "development",
      "database"
    ],
    "provider": "source",
    "config": [
      {
        "mcpServers": {
          "zettelkasten": {
            "command": "/absolute/path/to/zettelkasten-mcp/.venv/bin/python",
            "args": [
              "-m",
              "zettelkasten_mcp.main"
            ],
            "env": {
              "ZETTELKASTEN_NOTES_DIR": "/absolute/path/to/zettelkasten-mcp/data/notes",
              "ZETTELKASTEN_DATABASE_PATH": "/absolute/path/to/zettelkasten-mcp/data/db/zettelkasten.db",
              "ZETTELKASTEN_LOG_LEVEL": "INFO"
            }
          }
        }
      }
    ],
    "stars": 23
  },
  {
    "id": "mcp-servers-kagi",
    "name": "mcp-servers-kagi",
    "description": "Kagi search API integration.",
    "links": {
      "application": "https://github.com/ac3xx/mcp-servers-kagi"
    },
    "official": false,
    "runtime": "node",
    "scope": "remote",
    "tags": [
      "web",
      "research",
      "integration",
      "development"
    ],
    "provider": "npx",
    "config": [
      {
        "mcpServers": {
          "kagi-server": {
            "command": "/path/to/kagi-server/build/index.js",
            "env": {
              "KAGI_API_KEY": "your_api_key_here"
            }
          }
        }
      }
    ],
    "stars": 31
  }
]
